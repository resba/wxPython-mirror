/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif


#ifndef SWIG_TEMPLATE_DISAMBIGUATOR
#  if defined(__SUNPRO_CC) 
#    define SWIG_TEMPLATE_DISAMBIGUATOR template
#  else
#    define SWIG_TEMPLATE_DISAMBIGUATOR 
#  endif
#endif


#include <Python.h>

/***********************************************************************
 * swigrun.swg
 *
 *     This file contains generic CAPI SWIG runtime support for pointer
 *     type checking.
 *
 ************************************************************************/

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "1"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
#define SWIG_QUOTE_STRING(x) #x
#define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
#define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
#define SWIG_TYPE_TABLE_NAME
#endif

#include <string.h>

#ifndef SWIGINLINE
#if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#  define SWIGINLINE inline
#else
#  define SWIGINLINE
#endif
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/
#ifndef SWIGRUNTIME
#define SWIGRUNTIME static
#endif
#ifndef SWIGRUNTIMEINLINE
#define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return *f1 - *f2;
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te) == 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Register a type mapping with the type-checking
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeRegisterTL(swig_type_info **tl, swig_type_info *ti) {
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = *tl;
  while (tc) {
    /* check simple type equivalence */
    int typeequiv = (strcmp(tc->name, ti->name) == 0);   
    /* check full type equivalence, resolving typedefs */
    if (!typeequiv) {
      /* only if tc is not a typedef (no '|' on it) */
      if (tc->str && ti->str && !strstr(tc->str,"|")) {
	typeequiv = SWIG_TypeEquiv(ti->str,tc->str);
      }
    }
    if (typeequiv) {
      /* Already exists in the table.  Just add additional types to the list */
      if (ti->clientdata) tc->clientdata = ti->clientdata;
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = *tl;
  *tl = ti;

  /* Build linked lists */
  l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;
  head->next = next;

  return ret;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
        s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_type_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
  Search for a swig_type_info structure
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryTL(swig_type_info *tl, const char *name) {
  swig_type_info *ty = tl;
  while (ty) {
    if (ty->str && (SWIG_TypeEquiv(ty->str,name))) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientDataTL(swig_type_info *tl, swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata) return;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = tl;
      while (tc) {
        if ((strcmp(tc->name, equiv->name) == 0))
          SWIG_TypeClientDataTL(tl,tc,clientdata);
        tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static char hex[17] = "0123456789abcdef";
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  register unsigned char uu;
  for (; u != eu; ++u) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register int d = *(c++);
    register unsigned char uu = 0;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
  This function will propagate the clientdata field of type to any new
  swig_type_info structures that have been added into the list of
  equivalent types.  It is like calling SWIG_TypeClientData(type,
  clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientDataTL(swig_type_info *tl, swig_type_info *type) {
  swig_type_info *equiv = type->next;
  swig_type_info *tc;
  if (!type->clientdata) return;
  while (equiv) {
    if (!equiv->converter) {
      tc = tl;
      while (tc) {
        if ((strcmp(tc->name, equiv->name) == 0) && !tc->clientdata)
          SWIG_TypeClientDataTL(tl,tc, type->clientdata);
        tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/


#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  if !defined(STATIC_LINKED)
#    define SWIGEXPORT(a) __declspec(dllexport) a
#  else
#    define SWIGEXPORT(a) a
#  endif
#else
#  define SWIGEXPORT(a) a
#endif

#ifdef __cplusplus
extern "C" {
#endif


/*************************************************************************/


/* The static type info list */

static swig_type_info *swig_type_list = 0;
static swig_type_info **swig_type_list_handle = &swig_type_list;
  

/* Register a type mapping with the type-checking */
static swig_type_info *
SWIG_TypeRegister(swig_type_info *ti) {
  return SWIG_TypeRegisterTL(swig_type_list_handle, ti);
}

/* Search for a swig_type_info structure */
static swig_type_info *
SWIG_TypeQuery(const char *name) {
  return SWIG_TypeQueryTL(*swig_type_list_handle, name);
}

/* Set the clientdata field for a type */
static void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientDataTL(*swig_type_list_handle, ti, clientdata);
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
static void
SWIG_PropagateClientData(swig_type_info *type) {
  SWIG_PropagateClientDataTL(*swig_type_list_handle, type);
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * for internal method declarations
 * ----------------------------------------------------------------------------- */

#ifndef SWIGINTERN
#define SWIGINTERN static 
#endif

#ifndef SWIGINTERNSHORT
#ifdef __cplusplus
#define SWIGINTERNSHORT static inline 
#else /* C case */
#define SWIGINTERNSHORT static 
#endif /* __cplusplus */
#endif


/*
  Exception handling in wrappers
*/
#define SWIG_fail                goto fail
#define SWIG_arg_fail(arg)       SWIG_Python_ArgFail(arg)
#define SWIG_append_errmsg(msg)   SWIG_Python_AddErrMesg(msg,0)
#define SWIG_preppend_errmsg(msg) SWIG_Python_AddErrMesg(msg,1)
#define SWIG_type_error(type,obj) SWIG_Python_TypeError(type,obj)
#define SWIG_null_ref(type)       SWIG_Python_NullRef(type)

/*
  Contract support
*/
#define SWIG_contract_assert(expr, msg) \
 if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Alloc. memory flags
 * ----------------------------------------------------------------------------- */
#define SWIG_OLDOBJ  1
#define SWIG_NEWOBJ  SWIG_OLDOBJ + 1
#define SWIG_PYSTR   SWIG_NEWOBJ + 1

#ifdef __cplusplus
}
#endif


/***********************************************************************
 * pyrun.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags)    SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags)       SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)
 

/* Python-specific SWIG API */
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags)   SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type)              SWIG_Python_NewPackedObj(ptr, sz, type)


/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */
/*
  Use SWIG_NO_COBJECT_TYPES to force the use of strings to represent
  C/C++ pointers in the python side. Very useful for debugging, but
  not always safe.
*/
#if !defined(SWIG_NO_COBJECT_TYPES) && !defined(SWIG_COBJECT_TYPES)
#  define SWIG_COBJECT_TYPES
#endif

/* Flags for pointer conversion */
#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2


#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Create a new pointer string 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_BUFFER_SIZE
#define SWIG_BUFFER_SIZE 1024
#endif

#if defined(SWIG_COBJECT_TYPES)
#if !defined(SWIG_COBJECT_PYTHON)
/* -----------------------------------------------------------------------------
 * Implements a simple Swig Object type, and use it instead of PyCObject
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *ptr;
  const char *desc;
} PySwigObject;

/* Declarations for objects of type PySwigObject */

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result))) {
    fputs("<Swig Object at ", fp); fputs(result, fp); fputs(">", fp);
    return 0; 
  } else {
    return 1; 
  }
}
  
SWIGRUNTIME PyObject *
PySwigObject_repr(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromFormat("<Swig Object at %s>", result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromUnsignedLong((unsigned long) v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  char buf[100];
  unsigned long x = (unsigned long)v->ptr;
  if (x == 0)
    strcpy(buf, "0");
  else
    PyOS_snprintf(buf, sizeof(buf), "0%lo", x);
  return PyString_FromString(buf);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  char buf[100];
  PyOS_snprintf(buf, sizeof(buf), "0x%lx", (unsigned long)v->ptr);
  return PyString_FromString(buf);
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return c;
  } else {
    void *i = v->ptr;
    void *j = w->ptr;
    return (i < j) ? -1 : (i > j) ? 1 : 0;
  }
}

SWIGRUNTIME void
PySwigObject_dealloc(PySwigObject *self)
{
  PyObject_DEL(self);
}

SWIGRUNTIME PyTypeObject*
PySwigObject_GetType() {
  static char PySwigObject_Type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02000000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */ 
#endif
  };

  static int type_init = 0;  
  static PyTypeObject PySwigObject_Type;

  if (!type_init) {
    PyTypeObject tmp = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    "PySwigObject",			/*tp_name*/
    sizeof(PySwigObject),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigObject_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigObject_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigObject_compare,	/*tp_compare*/
    (reprfunc)PySwigObject_repr,	/*tp_repr*/
    &PySwigObject_as_number,	        /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigObject_str,		/*tp_str*/
    /* Space for future expansion */
    0L,0L,0L,0L,
    PySwigObject_Type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };

    PySwigObject_Type = tmp;
    type_init = 1;
  }

  return &PySwigObject_Type;
}

SWIGRUNTIME PyObject *
PySwigObject_FromVoidPtrAndDesc(void *ptr, const char *desc)
{
  PySwigObject *self = PyObject_NEW(PySwigObject, PySwigObject_GetType());
  if (self == NULL) return NULL;
  self->ptr = ptr;
  self->desc = desc;
  return (PyObject *)self;
}

SWIGRUNTIMEINLINE void *
PySwigObject_AsVoidPtr(PyObject *self)
{
  return ((PySwigObject *)self)->ptr;
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  return ((PySwigObject *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_GetType()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  const char *desc;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->desc,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->desc);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->desc);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->desc);
  } else {
    return PyString_FromFormat("%s", v->desc);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return c;
  } else {
    size_t i = v->size;
    size_t j = w->size;
    int s = (i < j) ? -1 : (i > j) ? 1 : 0;
    return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
  }
}

SWIGRUNTIME void
PySwigPacked_dealloc(PySwigPacked *self)
{
  free(self->pack);
  PyObject_DEL(self);
}

SWIGRUNTIME PyTypeObject*
PySwigPacked_GetType() {
  static char PySwigPacked_Type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  static int type_init = 0;
  
  static PyTypeObject PySwigPacked_Type;
  if (!type_init) {
    PyTypeObject tmp = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    "PySwigPacked",			/*tp_name*/
    sizeof(PySwigPacked),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigPacked_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigPacked_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigPacked_compare,	/*tp_compare*/
    (reprfunc)PySwigPacked_repr,	/*tp_repr*/
    0,	                                /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigPacked_str,		/*tp_str*/
    /* Space for future expansion */
    0L,0L,0L,0L,
    PySwigPacked_Type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000         
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };

    PySwigPacked_Type = tmp;
    type_init = 1;
  }
  
      

  return &PySwigPacked_Type;
}

SWIGRUNTIME PyObject *
PySwigPacked_FromDataAndDesc(void *ptr, size_t size, const char *desc)
{
  PySwigPacked *self = PyObject_NEW(PySwigPacked, PySwigPacked_GetType());
  if (self == NULL) {
    return NULL;
  } else {
    void *pack = malloc(size);
    memcpy(pack, ptr, size);
    self->pack = pack;
    self->desc = desc;
    self->size = size;
    return (PyObject *) self;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  PySwigPacked *self = (PySwigPacked *)obj;
  if (self->size != size) return 0;
  memcpy(ptr, self->pack, size);
  return self->desc;
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_GetDesc(PyObject *self)
{
  return ((PySwigPacked *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == PySwigPacked_GetType()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

#else
/* -----------------------------------------------------------------------------
 * Use the old Python PyCObject instead of PySwigObject
 * ----------------------------------------------------------------------------- */

#define PySwigObject_GetDesc(obj)	           PyCObject_GetDesc(obj)
#define PySwigObject_Check(obj)	           PyCObject_Check(obj)
#define PySwigObject_AsVoidPtr(obj)	   PyCObject_AsVoidPtr(obj)
#define PySwigObject_FromVoidPtrAndDesc(p, d)  PyCObject_FromVoidPtrAndDesc(p, d, NULL)

#endif

#endif

/* -----------------------------------------------------------------------------
 * errors manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_DECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}

SWIGRUNTIMEINLINE void
SWIG_Python_NullRef(const char *type)
{
  if (type) {
    PyErr_Format(PyExc_TypeError, "null reference of type '%s' was received",type);
  } else {
    PyErr_Format(PyExc_TypeError, "null reference was received");
  }
}

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}

SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    sprintf(mesg, "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}


/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  const char *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;
  void *vptr;
  
  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }

#ifdef SWIG_COBJECT_TYPES
  if (!(PySwigObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PySwigObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  vptr = PySwigObject_AsVoidPtr(obj);
  c = (const char *) PySwigObject_GetDesc(obj);
  if (newref) { Py_DECREF(obj); }
  goto type_check;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AS_STRING(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackVoidPtr(c, &vptr, ty->name);
  if (newref) { Py_DECREF(obj); }
  if (!c) goto type_error;
#endif

type_check:

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,vptr);
  } else {
    *ptr = vptr;
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject_SetAttrString(pyobj,(char*)"thisown",Py_False);
  }
  return 0;

type_error:
  PyErr_Clear();
  if (pyobj && !obj) {    
    obj = pyobj;
    if (PyCFunction_Check(obj)) {
      /* here we get the method pointer for callbacks */
      char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
      c = doc ? strstr(doc, "swig_ptr: ") : 0;
      if (c) {
	c = SWIG_UnpackVoidPtr(c + 10, &vptr, ty->name);
	if (!c) goto type_error;
	goto type_check;
      }
    }
  }
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ pointer", obj);
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  const char *c = 0;

#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  c = PySwigPacked_UnpackData(obj, ptr, sz);
#else
  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AS_STRING(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackDataName(c, ptr, sz, ty->name);
#endif
  if (!c) goto type_error;
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:
  PyErr_Clear();
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ packed data", obj);
    }
  }
  return -1;
}  

/* Create a new array object */
SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj = 0;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PySwigObject_FromVoidPtrAndDesc((void *) ptr, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackVoidPtr(result, ptr, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject_SetAttrString(inst,(char*)"thisown",Py_True);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  PyObject *robj = 0;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  robj = PySwigPacked_FromDataAndDesc((void *) ptr, sz, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackDataName(result, ptr, sz, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  return robj;
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_type_info **
SWIG_Python_GetTypeListHandle() {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
  }
#endif
  return (swig_type_info **) type_pointer;
}

/*
  Search for a swig_type_info structure
 */
SWIGRUNTIMEINLINE swig_type_info *
SWIG_Python_GetTypeList() {
  swig_type_info **tlh = SWIG_Python_GetTypeListHandle();
  return tlh ? *tlh : (swig_type_info*)0;
}

#define SWIG_Runtime_GetTypeList SWIG_Python_GetTypeList 

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_wxOGLConstraint swig_types[0] 
#define  SWIGTYPE_p_wxBrush swig_types[1] 
#define  SWIGTYPE_p_wxColour swig_types[2] 
#define  SWIGTYPE_p_wxShapeRegion swig_types[3] 
#define  SWIGTYPE_p_wxDC swig_types[4] 
#define  SWIGTYPE_p_wxPyControlPoint swig_types[5] 
#define  SWIGTYPE_p_wxRealPoint swig_types[6] 
#define  SWIGTYPE_p_form_ops_t swig_types[7] 
#define  SWIGTYPE_p_wxDuplexMode swig_types[8] 
#define  SWIGTYPE_p_wxArrowHead swig_types[9] 
#define  SWIGTYPE_p_char swig_types[10] 
#define  SWIGTYPE_p_wxPanel swig_types[11] 
#define  SWIGTYPE_p_bool swig_types[12] 
#define  SWIGTYPE_p_wxStringList swig_types[13] 
#define  SWIGTYPE_p_wxList swig_types[14] 
#define  SWIGTYPE_p_wxFont swig_types[15] 
#define  SWIGTYPE_p_wxScrolledWindow swig_types[16] 
#define  SWIGTYPE_p_wxWindow swig_types[17] 
#define  SWIGTYPE_p_double swig_types[18] 
#define  SWIGTYPE_p_wxPyDrawnShape swig_types[19] 
#define  SWIGTYPE_p_wxPyDivisionShape swig_types[20] 
#define  SWIGTYPE_p_wxPyPolygonShape swig_types[21] 
#define  SWIGTYPE_p_wxObject swig_types[22] 
#define  SWIGTYPE_p_wxBitmap swig_types[23] 
#define  SWIGTYPE_p_wxPaperSize swig_types[24] 
#define  SWIGTYPE_p_unsigned_int swig_types[25] 
#define  SWIGTYPE_unsigned_int swig_types[26] 
#define  SWIGTYPE_p_wxPyBitmapShape swig_types[27] 
#define  SWIGTYPE_p_wxPyShapeEvtHandler swig_types[28] 
#define  SWIGTYPE_p_wxEvtHandler swig_types[29] 
#define  SWIGTYPE_p_wxPyEllipseShape swig_types[30] 
#define  SWIGTYPE_p_wxPyShapeCanvas swig_types[31] 
#define  SWIGTYPE_p_wxPoint swig_types[32] 
#define  SWIGTYPE_p_wxDiagram swig_types[33] 
#define  SWIGTYPE_p_wxPyShape swig_types[34] 
#define  SWIGTYPE_p_wxAttachmentPoint swig_types[35] 
#define  SWIGTYPE_p_unsigned_char swig_types[36] 
#define  SWIGTYPE_ptrdiff_t swig_types[37] 
#define  SWIGTYPE_std__ptrdiff_t swig_types[38] 
#define  SWIGTYPE_p_wxClassInfo swig_types[39] 
#define  SWIGTYPE_p_wxPyLineShape swig_types[40] 
#define  SWIGTYPE_p_wxPyRectangleShape swig_types[41] 
#define  SWIGTYPE_p_wxPyCompositeShape swig_types[42] 
#define  SWIGTYPE_p_wxPyCircleShape swig_types[43] 
#define  SWIGTYPE_p_wxPen swig_types[44] 
#define  SWIGTYPE_p_int swig_types[45] 
#define  SWIGTYPE_p_wxPseudoMetaFile swig_types[46] 
#define  SWIGTYPE_p_wxPyTextShape swig_types[47] 
#define  SWIGTYPE_p_unsigned_long swig_types[48] 
#define  SWIGTYPE_p_wxPyDividedShape swig_types[49] 
static swig_type_info *swig_types[51];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _ogl.so
  ------------------------------------------------*/
#define SWIG_init    init_ogl

#define SWIG_name    "_ogl"

#include "wx/wxPython/wxPython.h"
#include "wx/wxPython/pyclasses.h"
#include "oglhelpers.h"


 static const wxString wxPyEmptyString(wxEmptyString); 

SWIGINTERN int
SWIG_AsVal_double(PyObject *obj, double* val)
{
    if (PyNumber_Check(obj)) {
        if (val) *val = PyFloat_AsDouble(obj);
        return 1;
    }
    else {
        SWIG_type_error("number", obj);
    }
    return 0;
}


SWIGINTERNSHORT double
SWIG_As_double(PyObject* obj)
{
  double v;
  if (!SWIG_AsVal_double(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(double));
  }
  return v;
}

  
SWIGINTERNSHORT int
SWIG_Check_double(PyObject* obj)
{
  return SWIG_AsVal_double(obj, (double*)0);
}


#include <limits.h>


SWIGINTERN int
  SWIG_CheckLongInRange(long value, long min_value, long max_value,
			const char *errmsg)
{
  if (value < min_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %ld is less than '%s' minimum %ld", 
		   value, errmsg, min_value);
    }
    return 0;    
  } else if (value > max_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError,
		   "value %ld is greater than '%s' maximum %ld", 
		   value, errmsg, max_value);
    }
    return 0;
  }
  return 1;
}


SWIGINTERN int
SWIG_AsVal_long(PyObject* obj, long* val)
{
    if (PyNumber_Check(obj)) {
        if (val) *val = PyInt_AsLong(obj);
        return 1;
    }
    else {
        SWIG_type_error("number", obj);
    }
    return 0;
}


#if INT_MAX != LONG_MAX
SWIGINTERN int
  SWIG_AsVal_int(PyObject *obj, int *val)
{ 
  const char* errmsg = val ? "int" : (char*)0;
  long v;
  if (SWIG_AsVal_long(obj, &v)) {
    if (SWIG_CheckLongInRange(v, INT_MIN,INT_MAX, errmsg)) {
      if (val) *val = (int)(v);
      return 1;
    } else {
      return 0;
    }
  } else {
    PyErr_Clear();
  }
  if (val) {
    SWIG_type_error(errmsg, obj);
  }
  return 0;    
}
#else
SWIGINTERNSHORT int
  SWIG_AsVal_int(PyObject *obj, int *val)
{
  return SWIG_AsVal_long(obj,(long*)val);
}
#endif


SWIGINTERNSHORT int
SWIG_As_int(PyObject* obj)
{
  int v;
  if (!SWIG_AsVal_int(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(int));
  }
  return v;
}

  
SWIGINTERNSHORT int
SWIG_Check_int(PyObject* obj)
{
  return SWIG_AsVal_int(obj, (int*)0);
}


  static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;
    
    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }            
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
  }


  /*@/opt/swig/share/swig/1.3.24/python/pymacros.swg,66,SWIG_define@*/
#define SWIG_From_double PyFloat_FromDouble
/*@@*/



  /*@/opt/swig/share/swig/1.3.24/python/pymacros.swg,66,SWIG_define@*/
#define SWIG_From_int PyInt_FromLong
/*@@*/


    WXSHAPE_IMP_CALLBACKS(wxPyShapeEvtHandler,wxShapeEvtHandler);

static void wxPyShapeEvtHandler__setOORInfo(wxPyShapeEvtHandler *self,PyObject *_self){
            self->SetClientObject(new wxPyOORClientData(_self));
        }

SWIGINTERN int
  SWIG_AsVal_bool(PyObject *obj, bool *val)
{
  if (obj == Py_True) {
    if (val) *val = true;
    return 1;
  }
  if (obj == Py_False) {
    if (val) *val = false;
    return 1;
  }
  int res = 0;
  if (SWIG_AsVal_int(obj, &res)) {    
    if (val) *val = res ? true : false;
    return 1;
  } else {
    PyErr_Clear();
  }  
  if (val) {
    SWIG_type_error("bool", obj);
  }
  return 0;
}


SWIGINTERNSHORT bool
SWIG_As_bool(PyObject* obj)
{
  bool v;
  if (!SWIG_AsVal_bool(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(bool));
  }
  return v;
}

  
SWIGINTERNSHORT int
SWIG_Check_bool(PyObject* obj)
{
  return SWIG_AsVal_bool(obj, (bool*)0);
}


    WXSHAPE_IMP_CALLBACKS(wxPyShape, wxShape);

static PyObject *wxPyShape_GetChildren(wxPyShape *self){
            wxList& list = self->GetChildren();
            return wxPy_ConvertShapeList(&list);
        }

SWIGINTERNSHORT PyObject*
  SWIG_From_bool(bool value)
{
  PyObject *obj = value ? Py_True : Py_False;
  Py_INCREF(obj);
  return obj;
}



static PyObject *wxPyShape_GetLines(wxPyShape *self){
            wxList& list = self->GetLines();
            return wxPy_ConvertShapeList(&list);
        }

SWIGINTERNSHORT long
SWIG_As_long(PyObject* obj)
{
  long v;
  if (!SWIG_AsVal_long(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(long));
  }
  return v;
}

  
SWIGINTERNSHORT int
SWIG_Check_long(PyObject* obj)
{
  return SWIG_AsVal_long(obj, (long*)0);
}


  /*@/opt/swig/share/swig/1.3.24/python/pymacros.swg,66,SWIG_define@*/
#define SWIG_From_long PyInt_FromLong
/*@@*/

static PyObject *wxPyShape_GetRegions(wxPyShape *self){
            wxList& list = self->GetRegions();
            return wxPy_ConvertList(&list);
        }
static PyObject *wxPyShape_GetAttachments(wxPyShape *self){
            wxList& list = self->GetAttachments();
            return wxPy_ConvertList(&list);            
        }
static void wxPyShape_ApplyAttachmentOrdering(wxPyShape *self,PyObject *linesToSort){
            wxList* list = wxPy_wxListHelper(linesToSort, wxT("wxPyLineShape"));
            self->ApplyAttachmentOrdering(*list);
            delete list;
        }

// Using this macro can sometimes provoke an Internal Compiler Error in MSVC
// 6, so instead I'l just expand it out by hand...
//    WXSHAPE_IMP_CALLBACKS(wxPyRectangleShape, wxRectangleShape);

    IMP_PYCALLBACK__                (wxPyRectangleShape, wxRectangleShape,  OnDelete);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnDraw);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnDrawContents);
    IMP_PYCALLBACK__DCBOOL          (wxPyRectangleShape, wxRectangleShape,  OnDrawBranches);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnMoveLinks);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnErase);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnEraseContents);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnHighlight);
    IMP_PYCALLBACK__2DBL2INT        (wxPyRectangleShape, wxRectangleShape,  OnLeftClick);
    IMP_PYCALLBACK__2DBL2INT        (wxPyRectangleShape, wxRectangleShape,  OnLeftDoubleClick);
    IMP_PYCALLBACK__2DBL2INT        (wxPyRectangleShape, wxRectangleShape,  OnRightClick);
    IMP_PYCALLBACK__2DBL            (wxPyRectangleShape, wxRectangleShape,  OnSize);
    IMP_PYCALLBACK_BOOL_DC4DBLBOOL  (wxPyRectangleShape, wxRectangleShape,  OnMovePre);
    IMP_PYCALLBACK__DC4DBLBOOL      (wxPyRectangleShape, wxRectangleShape,  OnMovePost);
    IMP_PYCALLBACK__BOOL2DBL2INT    (wxPyRectangleShape, wxRectangleShape,  OnDragLeft);
    IMP_PYCALLBACK__2DBL2INT        (wxPyRectangleShape, wxRectangleShape,  OnBeginDragLeft);
    IMP_PYCALLBACK__2DBL2INT        (wxPyRectangleShape, wxRectangleShape,  OnEndDragLeft);
    IMP_PYCALLBACK__BOOL2DBL2INT    (wxPyRectangleShape, wxRectangleShape,  OnDragRight);
    IMP_PYCALLBACK__2DBL2INT        (wxPyRectangleShape, wxRectangleShape,  OnBeginDragRight);
    IMP_PYCALLBACK__2DBL2INT        (wxPyRectangleShape, wxRectangleShape,  OnEndDragRight);
    IMP_PYCALLBACK__DC4DBL          (wxPyRectangleShape, wxRectangleShape,  OnDrawOutline);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnDrawControlPoints);
    IMP_PYCALLBACK__DC              (wxPyRectangleShape, wxRectangleShape,  OnEraseControlPoints);
    IMP_PYCALLBACK__DCBOOL          (wxPyRectangleShape, wxRectangleShape,  OnMoveLink);
    IMP_PYCALLBACK__WXCPBOOL2DBL2INT(wxPyRectangleShape, wxRectangleShape,  OnSizingDragLeft);
    IMP_PYCALLBACK__WXCP2DBL2INT    (wxPyRectangleShape, wxRectangleShape,  OnSizingBeginDragLeft);
    IMP_PYCALLBACK__WXCP2DBL2INT    (wxPyRectangleShape, wxRectangleShape,  OnSizingEndDragLeft);
    IMP_PYCALLBACK__2DBL            (wxPyRectangleShape, wxRectangleShape,  OnBeginSize);
    IMP_PYCALLBACK__2DBL            (wxPyRectangleShape, wxRectangleShape,  OnEndSize)
        


    WXSHAPE_IMP_CALLBACKS(wxPyControlPoint, wxControlPoint);


    WXSHAPE_IMP_CALLBACKS(wxPyBitmapShape, wxBitmapShape);


    WXSHAPE_IMP_CALLBACKS(wxPyDrawnShape, wxDrawnShape);

static wxOGLConstraint *new_wxOGLConstraint(int type,wxPyShape *constraining,PyObject *constrained){
            wxList* list = wxPy_wxListHelper(constrained, wxT("wxPyShape"));
            wxOGLConstraint* rv = new wxOGLConstraint(type, constraining, *list);
            delete list;
            return rv;
        }

    WXSHAPE_IMP_CALLBACKS(wxPyCompositeShape, wxCompositeShape);

static wxOGLConstraint *wxPyCompositeShape_AddConstrainedShapes(wxPyCompositeShape *self,int type,wxPyShape *constraining,PyObject *constrained){
            wxList* list = wxPy_wxListHelper(constrained, wxT("wxPyShape"));
            wxOGLConstraint* rv = self->AddConstraint(type, constraining, *list);
            delete list;
            return rv;
        }
static PyObject *wxPyCompositeShape_GetConstraints(wxPyCompositeShape *self){
            wxList& list = self->GetConstraints();
            return wxPy_ConvertList(&list);
        }
static PyObject *wxPyCompositeShape_GetDivisions(wxPyCompositeShape *self){
            wxList& list = self->GetDivisions();
            return wxPy_ConvertShapeList(&list);
        }

    WXSHAPE_IMP_CALLBACKS(wxPyDividedShape, wxDividedShape);


    WXSHAPE_IMP_CALLBACKS(wxPyDivisionShape, wxDivisionShape);


    WXSHAPE_IMP_CALLBACKS(wxPyEllipseShape, wxEllipseShape);


    WXSHAPE_IMP_CALLBACKS(wxPyCircleShape, wxCircleShape);


    WXSHAPE_IMP_CALLBACKS(wxPyLineShape, wxLineShape);

static void wxPyLineShape_AddArrowOrdered(wxPyLineShape *self,wxArrowHead *arrow,PyObject *referenceList,int end){
            wxList* list = wxPy_wxListHelper(referenceList, wxT("wxArrowHead"));
            self->AddArrowOrdered(arrow, *list, end);
            delete list;
        }
static PyObject *wxPyLineShape_GetLineControlPoints(wxPyLineShape *self){
            wxList* list = self->GetLineControlPoints();
            return wxPy_ConvertRealPointList(list);
        }
static void wxPyLineShape_SetLineControlPoints(wxPyLineShape *self,PyObject *list){
            wxList* real_point_list = wxPy_wxRealPoint_ListHelper(list);
            self->MakeLineControlPoints((int)(real_point_list->GetCount()));
            wxList* old_control_points = self->GetLineControlPoints();
            wxNode* old_node = old_control_points->GetFirst();
            wxNode* real_node = real_point_list->GetFirst();
            while(old_node)
            {
                wxRealPoint* old_point = (wxRealPoint*)old_node->GetData();
                wxRealPoint* new_point = (wxRealPoint*)real_node->GetData();
                old_point->x = new_point->x;
                old_point->y = new_point->y;
                old_node = old_node->GetNext();
                real_node = real_node->GetNext();
            }
            self->ClearPointList(*real_point_list);
            delete real_point_list;
        }

    WXSHAPE_IMP_CALLBACKS(wxPyPolygonShape, wxPolygonShape);

static PyObject *wxPyPolygonShape_Create(wxPyPolygonShape *self,PyObject *points){
            wxList* list = wxPy_wxRealPoint_ListHelper(points);
            if (list) {
                self->Create(list);
                Py_INCREF(Py_None);
                return Py_None;
            }
            else return NULL;
        }
static PyObject *wxPyPolygonShape_GetPoints(wxPyPolygonShape *self){
            wxList* list = self->GetPoints();
            return wxPy_ConvertRealPointList(list);
        }
static PyObject *wxPyPolygonShape_GetOriginalPoints(wxPyPolygonShape *self){
            wxList* list = self->GetOriginalPoints();
            PyObject*   pyList;
            PyObject*   pyObj;
            wxObject*   wxObj;
            wxNode*     node = list->GetFirst();

            wxPyBlock_t blocked = wxPyBeginBlockThreads();
            pyList = PyList_New(0);
            while (node) {
                wxObj = node->GetData();
                pyObj = wxPyConstructObject(wxObj, wxT("wxRealPoint"), 0);
                PyList_Append(pyList, pyObj);
                node = node->GetNext();
            }
            wxPyEndBlockThreads(blocked);
            return pyList;
        }

    WXSHAPE_IMP_CALLBACKS(wxPyTextShape, wxTextShape);


    // Put some wx default wxChar* values into wxStrings.
    DECLARE_DEF_STRING(ShapeCanvasNameStr);

static PyObject *wxDiagram_GetShapeList(wxDiagram *self){
            wxList* list = self->GetShapeList();
            return wxPy_ConvertShapeList(list);
        }

    IMP_PYCALLBACK__2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnBeginDragLeft);
    IMP_PYCALLBACK__2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnBeginDragRight);
    IMP_PYCALLBACK__2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnEndDragLeft);
    IMP_PYCALLBACK__2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnEndDragRight);
    IMP_PYCALLBACK__BOOL2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnDragLeft);
    IMP_PYCALLBACK__BOOL2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnDragRight);
    IMP_PYCALLBACK__2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnLeftClick);
    IMP_PYCALLBACK__2DBLINT(wxPyShapeCanvas, wxShapeCanvas, OnRightClick);


//---------------------------------------------------------------------------

// Convert from a Python list to a list of className objects.  This one will
// work for any class for the VERY generic cases, but beyond that the helper
// needs to know more about the type.
wxList* wxPy_wxListHelper(PyObject* pyList, const wxChar* className) {
    wxPyBlock_t blocked = wxPyBeginBlockThreads();
    if (!PyList_Check(pyList)) {
        PyErr_SetString(PyExc_TypeError, "Expected a list object.");
        wxPyEndBlockThreads(blocked);
        return NULL;
    }
    int count = PyList_Size(pyList);
    wxList* list = new wxList;
    if (! list) {
        PyErr_SetString(PyExc_MemoryError, "Unable to allocate wxList object");
        wxPyEndBlockThreads(blocked);
        return NULL;
    }
    for (int x=0; x<count; x++) {
        PyObject* pyo = PyList_GetItem(pyList, x);
        wxObject* wxo = NULL;

        if ( !wxPyConvertSwigPtr(pyo, (void **)&wxo, className) ) {
            wxString errmsg;
            errmsg.Printf(wxT("Type error, expected list of %s objects"), className);
            PyErr_SetString(PyExc_TypeError, errmsg.mb_str());
            wxPyEndBlockThreads(blocked);
            return NULL;
        }
        list->Append(wxo);
    }
    wxPyEndBlockThreads(blocked);
    return list;
}

//---------------------------------------------------------------------------

wxList* wxPy_wxRealPoint_ListHelper(PyObject* pyList) {
    wxPyBlock_t blocked = wxPyBeginBlockThreads();
    if (!PyList_Check(pyList)) {
        PyErr_SetString(PyExc_TypeError, "Expected a list object.");
        wxPyEndBlockThreads(blocked);
        return NULL;
    }
    int count = PyList_Size(pyList);
    wxList* list = new wxList;
    if (! list) {
        PyErr_SetString(PyExc_MemoryError, "Unable to allocate wxList object");
        wxPyEndBlockThreads(blocked);
        return NULL;
    }
    for (int x=0; x<count; x++) {
        PyObject* pyo = PyList_GetItem(pyList, x);

        if (PyTuple_Check(pyo)) {
            PyObject* o1 = PyNumber_Float(PyTuple_GetItem(pyo, 0));
            PyObject* o2 = PyNumber_Float(PyTuple_GetItem(pyo, 1));

            double val1 = (o1 ? PyFloat_AsDouble(o1) : 0.0);
            double val2 = (o2 ? PyFloat_AsDouble(o2) : 0.0);

            list->Append((wxObject*) new wxRealPoint(val1, val2));

        } else {
            wxRealPoint* wxo = NULL;
            if (wxPyConvertSwigPtr(pyo, (void **)&wxo, wxT("wxRealPoint"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected list of wxRealPoint objects or 2-tuples");
                wxPyEndBlockThreads(blocked);
                return NULL;
            }
            list->Append((wxObject*) new wxRealPoint(*wxo));
        }
    }
    wxPyEndBlockThreads(blocked);
    return list;
}

//---------------------------------------------------------------------------

PyObject*  wxPyMake_wxShapeEvtHandler(wxShapeEvtHandler* source, bool setThisOwn) {
    PyObject* target = NULL;

    if (source && wxIsKindOf(source, wxShapeEvtHandler)) {
        // If it's derived from wxShapeEvtHandler then there may
        // already be a pointer to a Python object that we can use
        // in the OOR data.
        wxShapeEvtHandler* seh = (wxShapeEvtHandler*)source;
        wxPyOORClientData* data = (wxPyOORClientData*)seh->GetClientObject();
        if (data) {
            target = data->m_obj;
            Py_INCREF(target);
        }
    }
    if (! target) {
        target = wxPyMake_wxObject2(source, setThisOwn, false);
        if (target != Py_None)
            ((wxShapeEvtHandler*)source)->SetClientObject(new wxPyOORClientData(target));
    }
    return target;
}

//---------------------------------------------------------------------------

PyObject* wxPy_ConvertRealPointList(wxListBase* listbase) {
    wxList*     list = (wxList*)listbase;
    PyObject*   pyList;
    PyObject*   pyObj;
    wxObject*   wxObj;
    wxNode*     node = list->GetFirst();
    
    wxPyBlock_t blocked = wxPyBeginBlockThreads();
    pyList = PyList_New(0);
    while (node) {
        wxObj = node->GetData();
        pyObj = wxPyConstructObject(wxObj, wxT("wxRealPoint"), 0);
        PyList_Append(pyList, pyObj);
        node = node->GetNext();
    } 
    wxPyEndBlockThreads(blocked);
    return pyList;
}

//---------------------------------------------------------------------------

PyObject* wxPy_ConvertShapeList(wxListBase* listbase) {
    wxList*     list = (wxList*)listbase;
    PyObject*   pyList;
    PyObject*   pyObj;
    wxObject*   wxObj;
    wxNode*     node = list->GetFirst();

    wxPyBlock_t blocked = wxPyBeginBlockThreads();
    pyList = PyList_New(0);
    while (node) {
        wxObj = node->GetData();
        pyObj = wxPyMake_wxShapeEvtHandler((wxShapeEvtHandler*)wxObj, false);
        PyList_Append(pyList, pyObj);
        node = node->GetNext();
    }
    wxPyEndBlockThreads(blocked);
    return pyList;
}


//---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxPyShapeCanvas, wxShapeCanvas);
IMPLEMENT_DYNAMIC_CLASS(wxPyShapeEvtHandler, wxShapeEvtHandler);
IMPLEMENT_ABSTRACT_CLASS(wxPyShape, wxShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyRectangleShape, wxRectangleShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyControlPoint, wxControlPoint);
IMPLEMENT_DYNAMIC_CLASS(wxPyBitmapShape, wxBitmapShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyDrawnShape, wxDrawnShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyCompositeShape, wxCompositeShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyDividedShape, wxDividedShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyDivisionShape, wxDivisionShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyEllipseShape, wxEllipseShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyCircleShape, wxCircleShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyLineShape, wxLineShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyPolygonShape, wxPolygonShape);
IMPLEMENT_DYNAMIC_CLASS(wxPyTextShape, wxTextShape);

//---------------------------------------------------------------------------

// extern "C" SWIGEXPORT(void) initoglbasicc();
// extern "C" SWIGEXPORT(void) initoglshapesc();
// extern "C" SWIGEXPORT(void) initoglshapes2c();
// extern "C" SWIGEXPORT(void) initoglcanvasc();

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_new_ShapeRegion(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_ShapeRegion",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxShapeRegion *)new wxShapeRegion();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxShapeRegion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "s", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShapeRegion_SetText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxFont *arg2 = (wxFont *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "f", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShapeRegion_SetFont",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxFont* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxFont"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxFont.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheFontList->FindOrCreateFont(temp->GetPointSize(),
        temp->GetFamily(),
        temp->GetStyle(),
        temp->GetWeight(),
        temp->GetUnderlined(),
        temp->GetFaceName(),
        temp->GetEncoding());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFont(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetMinSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ShapeRegion_SetMinSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMinSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ShapeRegion_SetSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ShapeRegion_SetPosition",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetProportions(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ShapeRegion_SetProportions",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetProportions(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetFormatMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShapeRegion_SetFormatMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFormatMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetName(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "s", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShapeRegion_SetName",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetName((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShapeRegion_SetColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetColour((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxFont *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetFont",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFont *)(arg1)->GetFont();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetMinSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetMinSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetMinSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetProportion(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetProportion",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetProportion(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetPosition",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetPosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetFormatMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetFormatMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFormatMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetName(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetName",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetName();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetColour",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetActualColourObject(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxColour result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetActualColourObject",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetActualColourObject();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxColour * resultptr;
        resultptr = new wxColour((wxColour &)(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxColour, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetFormattedText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxList *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetFormattedText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxList &_result_ref = (arg1)->GetFormattedText();
            result = (wxList *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetPenColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetPenColour",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetPenColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetPenStyle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetPenStyle",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetPenStyle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetPenStyle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShapeRegion_SetPenStyle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPenStyle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_SetPenColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "col", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ShapeRegion_SetPenColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPenColour((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetActualPen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    wxPen *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetActualPen",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPen *)(arg1)->GetActualPen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPen, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_GetHeight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_GetHeight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ShapeRegion_ClearText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxShapeRegion *arg1 = (wxShapeRegion *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ShapeRegion_ClearText",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearText();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ShapeRegion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxShapeRegion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_AttachmentPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    double arg2 = (double) 0.0 ;
    double arg3 = (double) 0.0 ;
    wxAttachmentPoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "id",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_AttachmentPoint",kwnames,&obj0,&obj1,&obj2)) goto fail;
    if (obj0) {
        {
            arg1 = (int)(SWIG_As_int(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (double)(SWIG_As_double(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (double)(SWIG_As_double(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxAttachmentPoint *)new wxAttachmentPoint(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxAttachmentPoint, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AttachmentPoint_m_id_set(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAttachmentPoint *arg1 = (wxAttachmentPoint *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AttachmentPoint_m_id_set",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxAttachmentPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->m_id = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AttachmentPoint_m_id_get(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAttachmentPoint *arg1 = (wxAttachmentPoint *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AttachmentPoint_m_id_get",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxAttachmentPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int) ((arg1)->m_id);
    
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AttachmentPoint_m_x_set(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAttachmentPoint *arg1 = (wxAttachmentPoint *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AttachmentPoint_m_x_set",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxAttachmentPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->m_x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AttachmentPoint_m_x_get(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAttachmentPoint *arg1 = (wxAttachmentPoint *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AttachmentPoint_m_x_get",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxAttachmentPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (double) ((arg1)->m_x);
    
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AttachmentPoint_m_y_set(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAttachmentPoint *arg1 = (wxAttachmentPoint *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "m_y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AttachmentPoint_m_y_set",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxAttachmentPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->m_y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AttachmentPoint_m_y_get(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxAttachmentPoint *arg1 = (wxAttachmentPoint *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:AttachmentPoint_m_y_get",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxAttachmentPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (double) ((arg1)->m_y);
    
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * AttachmentPoint_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxAttachmentPoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyShapeEvtHandler(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) NULL ;
    wxPyShape *arg2 = (wxPyShape *) NULL ;
    wxPyShapeEvtHandler *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "prev",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PyShapeEvtHandler",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    if (obj1) {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShapeEvtHandler *)new wxPyShapeEvtHandler(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyShapeEvtHandler, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShapeEvtHandler__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler__setOORInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "_self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler__setOORInfo",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyShapeEvtHandler__setOORInfo(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_SetShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sh", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_SetShape",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetShape(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_GetShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShapeEvtHandler_GetShape",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->GetShape();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_SetPreviousHandler(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyShapeEvtHandler *arg2 = (wxPyShapeEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_SetPreviousHandler",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPreviousHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_GetPreviousHandler(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyShapeEvtHandler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShapeEvtHandler_GetPreviousHandler",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShapeEvtHandler *)(arg1)->GetPreviousHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_CreateNewCopy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyShapeEvtHandler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShapeEvtHandler_CreateNewCopy",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShapeEvtHandler *)(arg1)->CreateNewCopy();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShapeEvtHandler_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShapeEvtHandler_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeEvtHandler_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeEvtHandler_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeEvtHandler_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShapeEvtHandler_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyShapeEvtHandler_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyShapeEvtHandler_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShapeEvtHandler_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeEvtHandler_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeEvtHandler_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShapeEvtHandler_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeEvtHandler_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeEvtHandler_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyShapeEvtHandler_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeEvtHandler_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShapeEvtHandler_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyShapeEvtHandler_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShapeEvtHandler_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShapeEvtHandler_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShapeEvtHandler_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeEvtHandler_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeEvtHandler *arg1 = (wxPyShapeEvtHandler *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShapeEvtHandler_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyShapeEvtHandler_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyShapeEvtHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) NULL ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "can", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_PyShape",kwnames,&obj0)) goto fail;
    if (obj0) {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)new wxPyShape(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBoundingBoxMax(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBoundingBoxMax",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetBoundingBoxMax(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBoundingBoxMin(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBoundingBoxMin",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetBoundingBoxMin(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetPerimeterPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double *arg6 = (double *) 0 ;
    double *arg7 = (double *) 0 ;
    bool result;
    double temp6 ;
    int res6 = 0 ;
    double temp7 ;
    int res7 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x1",(char *) "y1",(char *) "x2",(char *) "y2", NULL 
    };
    
    arg6 = &temp6; res6 = SWIG_NEWOBJ;
    arg7 = &temp7; res7 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PyShape_GetPerimeterPoint",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetPerimeterPoint(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    resultobj = t_output_helper(resultobj, ((res6 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg6)) : SWIG_NewPointerObj((void*)(arg6), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res7 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg7)) : SWIG_NewPointerObj((void*)(arg7), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeCanvas *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetCanvas",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShapeCanvas *)(arg1)->GetCanvas();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeCanvas *arg2 = (wxPyShapeCanvas *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "the_canvas", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetCanvas",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCanvas(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AddToCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeCanvas *arg2 = (wxPyShapeCanvas *) 0 ;
    wxPyShape *arg3 = (wxPyShape *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "the_canvas",(char *) "addAfter", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_AddToCanvas",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddToCanvas(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_InsertInCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeCanvas *arg2 = (wxPyShapeCanvas *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "the_canvas", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_InsertInCanvas",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertInCanvas(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_RemoveFromCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeCanvas *arg2 = (wxPyShapeCanvas *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "the_canvas", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_RemoveFromCanvas",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveFromCanvas(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetX(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetX",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetX();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetY(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetY",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetY();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetX(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetX",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetX(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetY(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetY",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetY(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetParent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetParent",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->GetParent();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetParent(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "p", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetParent",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetParent(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetTopAncestor(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetTopAncestor",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->GetTopAncestor();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetChildren(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetChildren",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyShape_GetChildren(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Unlink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_Unlink",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Unlink();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetDrawHandles(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "drawH", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetDrawHandles",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawHandles(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetDrawHandles(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetDrawHandles",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetDrawHandles();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_MakeControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_MakeControlPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MakeControlPoints();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_DeleteControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = (wxDC *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyShape_DeleteControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteControlPoints(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_ResetControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_ResetControlPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ResetControlPoints();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetEventHandler(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeEvtHandler *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetEventHandler",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShapeEvtHandler *)(arg1)->GetEventHandler();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetEventHandler(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeEvtHandler *arg2 = (wxPyShapeEvtHandler *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "handler", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetEventHandler",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeEvtHandler, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEventHandler(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_MakeMandatoryControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_MakeMandatoryControlPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MakeMandatoryControlPoints();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_ResetMandatoryControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_ResetMandatoryControlPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ResetMandatoryControlPoints();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Recompute(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_Recompute",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Recompute();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_CalculateSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_CalculateSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CalculateSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Select(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 = (bool) true ;
    wxDC *arg3 = (wxDC *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "select",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:PyShape_Select",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool)(SWIG_As_bool(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Select(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 = (bool) true ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "hi",(char *) "recurse", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:PyShape_SetHighlight",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool)(SWIG_As_bool(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHighlight(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_IsHighlighted(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_IsHighlighted",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsHighlighted();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Selected(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_Selected",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Selected();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AncestorSelected(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_AncestorSelected",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AncestorSelected();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetSensitivityFilter(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 = (int) OP_ALL ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sens",(char *) "recursive", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:PyShape_SetSensitivityFilter",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSensitivityFilter(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetSensitivityFilter(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetSensitivityFilter",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetSensitivityFilter();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetDraggable(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "drag",(char *) "recursive", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_SetDraggable",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDraggable(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetFixedSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShape_SetFixedSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFixedSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetFixedSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool *arg2 = (bool *) 0 ;
    bool *arg3 = (bool *) 0 ;
    bool temp2 ;
    int res2 = 0 ;
    bool temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetFixedSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetFixedSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_bool((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_bool, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_bool((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_bool, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetFixedWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetFixedWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetFixedWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetFixedHeight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetFixedHeight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetFixedHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetSpaceAttachments(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sp", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetSpaceAttachments",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSpaceAttachments(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetSpaceAttachments(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetSpaceAttachments",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetSpaceAttachments();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetShadowMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode",(char *) "redraw", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_SetShadowMode",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetShadowMode(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetShadowMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetShadowMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetShadowMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_HitTest(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int *arg4 = (int *) 0 ;
    double *arg5 = (double *) 0 ;
    bool result;
    int temp4 ;
    int res4 = 0 ;
    double temp5 ;
    int res5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    arg5 = &temp5; res5 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShape_HitTest",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->HitTest(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_int, 0)));
    resultobj = t_output_helper(resultobj, ((res5 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg5)) : SWIG_NewPointerObj((void*)(arg5), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetCentreResize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "cr", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetCentreResize",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCentreResize(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetCentreResize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetCentreResize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetCentreResize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetMaintainAspectRatio(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "ar", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetMaintainAspectRatio",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMaintainAspectRatio(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetMaintainAspectRatio(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetMaintainAspectRatio",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetMaintainAspectRatio();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetLines(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetLines",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyShape_GetLines(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetDisableLabel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "flag", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetDisableLabel",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDisableLabel(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetDisableLabel(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetDisableLabel",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetDisableLabel();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetAttachmentMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetAttachmentMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAttachmentMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetAttachmentMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetAttachmentMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAttachmentMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetId(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "i", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetId",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (long)(SWIG_As_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetId(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetId(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetId",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->GetId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_long((long)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetPen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPen *arg2 = (wxPen *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pen", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetPen",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxPen* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxPen"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxPen.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxThePenList->FindOrCreatePen(temp->GetColour(),
        temp->GetWidth(),
        temp->GetStyle());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPen(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetBrush(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxBrush *arg2 = (wxBrush *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "brush", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetBrush",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxBrush* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxBrush"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxBrush.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheBrushList->FindOrCreateBrush(temp->GetColour(), temp->GetStyle());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBrush(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Show(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_Show",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Show(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_IsShown(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_IsShown",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsShown();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Move(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    bool arg5 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x1",(char *) "y1",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:PyShape_Move",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (bool)(SWIG_As_bool(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Move(*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Erase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_Erase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Erase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_EraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_EraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Draw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_Draw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Draw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Flash(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_Flash",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Flash();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_MoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_MoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_DrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_DrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    bool arg4 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "recursive", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShape_SetSize",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (bool)(SWIG_As_bool(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetAttachmentSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShape_SetAttachmentSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAttachmentSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Attach(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShapeCanvas *arg2 = (wxPyShapeCanvas *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "can", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_Attach",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Attach(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Detach(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_Detach",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Detach();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Constrain(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_Constrain",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Constrain();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AddLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyLineShape *arg2 = (wxPyLineShape *) 0 ;
    wxPyShape *arg3 = (wxPyShape *) 0 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) -1 ;
    int arg7 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line",(char *) "other",(char *) "attachFrom",(char *) "attachTo",(char *) "positionFrom",(char *) "positionTo", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOOO:PyShape_AddLine",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddLine(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetLinePosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyLineShape *arg2 = (wxPyLineShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_GetLinePosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetLinePosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AddText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "string", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_AddText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddText((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyShape_GetPen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPen *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetPen",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPen *)(arg1)->GetPen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPen, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBrush(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxBrush *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBrush",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBrush *)(arg1)->GetBrush();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxBrush, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetDefaultRegionSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_SetDefaultRegionSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDefaultRegionSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_FormatText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    wxString *arg3 = 0 ;
    int arg4 = (int) 0 ;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "s",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShape_FormatText",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->FormatText(*arg2,(wxString const &)*arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_PyShape_SetFormatMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_SetFormatMode",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFormatMode(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetFormatMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 = (int) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyShape_GetFormatMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetFormatMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxFont *arg2 = (wxFont *) 0 ;
    int arg3 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "font",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_SetFont",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxFont* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxFont"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxFont.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheFontList->FindOrCreateFont(temp->GetPointSize(),
        temp->GetFamily(),
        temp->GetStyle(),
        temp->GetWeight(),
        temp->GetUnderlined(),
        temp->GetFaceName(),
        temp->GetEncoding());
        else
        arg2 = NULL;
    }
    if (obj2) {
        {
            arg3 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFont(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 = (int) 0 ;
    wxFont *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyShape_GetFont",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxFont *)(arg1)->GetFont(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetTextColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_SetTextColour",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    if (obj2) {
        {
            arg3 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTextColour((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyShape_GetTextColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 = (int) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyShape_GetTextColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetTextColour(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetNumberOfTextRegions(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetNumberOfTextRegions",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetNumberOfTextRegions();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetRegionName(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxString *arg2 = 0 ;
    int arg3 = (int) 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_SetRegionName",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    if (obj2) {
        {
            arg3 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRegionName((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyShape_GetRegionName(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    wxString result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_GetRegionName",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetRegionName(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetRegionId(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxString *arg2 = 0 ;
    int result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_GetRegionId",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetRegionId((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyShape_NameRegions(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxString const &arg2_defvalue = wxPyEmptyString ;
    wxString *arg2 = (wxString *) &arg2_defvalue ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "parentName", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyShape_NameRegions",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = wxString_in_helper(obj1);
            if (arg2 == NULL) SWIG_fail;
            temp2 = true;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->NameRegions((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyShape_GetRegions(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetRegions",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyShape_GetRegions(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AddRegion(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxShapeRegion *arg2 = (wxShapeRegion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "region", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_AddRegion",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddRegion(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_ClearRegions(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_ClearRegions",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearRegions();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AssignNewIds(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_AssignNewIds",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AssignNewIds();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_FindRegion(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxString *arg2 = 0 ;
    int *arg3 = (int *) 0 ;
    wxPyShape *result;
    bool temp2 = false ;
    int temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "regionName", NULL 
    };
    
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_FindRegion",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->FindRegion((wxString const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_int, 0)));
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyShape_FindRegionNames(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxStringList *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "list", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_FindRegionNames",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxStringList, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxStringList");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->FindRegionNames(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_ClearText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "regionId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyShape_ClearText",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearText(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_RemoveLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyLineShape *arg2 = (wxPyLineShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_RemoveLine",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveLine(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetAttachmentPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    double *arg3 = (double *) 0 ;
    double *arg4 = (double *) 0 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 1 ;
    wxPyLineShape *arg7 = (wxPyLineShape *) NULL ;
    bool result;
    double temp3 ;
    int res3 = 0 ;
    double temp4 ;
    int res4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachment",(char *) "nth",(char *) "no_arcs",(char *) "line", NULL 
    };
    
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOO:PyShape_GetAttachmentPosition",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg5 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg6 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj4) {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg7, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetAttachmentPosition(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetNumberOfAttachments(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetNumberOfAttachments",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetNumberOfAttachments();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AttachmentIsValid(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_AttachmentIsValid",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AttachmentIsValid(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetAttachments(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetAttachments",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyShape_GetAttachments(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetAttachmentPositionEdge(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    double *arg3 = (double *) 0 ;
    double *arg4 = (double *) 0 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 1 ;
    wxPyLineShape *arg7 = (wxPyLineShape *) NULL ;
    bool result;
    double temp3 ;
    int res3 = 0 ;
    double temp4 ;
    int res4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachment",(char *) "nth",(char *) "no_arcs",(char *) "line", NULL 
    };
    
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOO:PyShape_GetAttachmentPositionEdge",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg5 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg6 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj4) {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg7, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetAttachmentPositionEdge(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_CalcSimpleAttachment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxRealPoint *arg2 = 0 ;
    wxRealPoint *arg3 = 0 ;
    int arg4 ;
    int arg5 ;
    wxPyLineShape *arg6 = (wxPyLineShape *) 0 ;
    wxRealPoint result;
    wxRealPoint temp2 ;
    wxRealPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt1",(char *) "pt2",(char *) "nth",(char *) "noArcs",(char *) "line", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyShape_CalcSimpleAttachment",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRealPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxRealPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = (int)(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (int)(SWIG_As_int(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(6)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->CalcSimpleAttachment((wxRealPoint const &)*arg2,(wxRealPoint const &)*arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRealPoint * resultptr;
        resultptr = new wxRealPoint((wxRealPoint &)(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxRealPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_AttachmentSortTest(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    wxRealPoint *arg3 = 0 ;
    wxRealPoint *arg4 = 0 ;
    bool result;
    wxRealPoint temp3 ;
    wxRealPoint temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachmentPoint",(char *) "pt1",(char *) "pt2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyShape_AttachmentSortTest",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxRealPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = &temp4;
        if ( ! wxRealPoint_helper(obj3, &arg4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->AttachmentSortTest(arg2,(wxRealPoint const &)*arg3,(wxRealPoint const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_EraseLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    int arg3 = (int) -1 ;
    bool arg4 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "attachment",(char *) "recurse", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:PyShape_EraseLinks",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (bool)(SWIG_As_bool(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EraseLinks(*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_DrawLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    int arg3 = (int) -1 ;
    bool arg4 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "attachment",(char *) "recurse", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:PyShape_DrawLinks",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (bool)(SWIG_As_bool(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawLinks(*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_MoveLineToNewAttachment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    wxPyLineShape *arg3 = (wxPyLineShape *) 0 ;
    double arg4 ;
    double arg5 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "to_move",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PyShape_MoveLineToNewAttachment",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->MoveLineToNewAttachment(*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_ApplyAttachmentOrdering(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "linesToSort", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_ApplyAttachmentOrdering",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyShape_ApplyAttachmentOrdering(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBranchingAttachmentRoot(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    wxRealPoint result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_GetBranchingAttachmentRoot",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetBranchingAttachmentRoot(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxRealPoint * resultptr;
        resultptr = new wxRealPoint((wxRealPoint &)(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxRealPoint, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBranchingAttachmentInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    wxRealPoint *arg3 = 0 ;
    wxRealPoint *arg4 = 0 ;
    wxRealPoint *arg5 = 0 ;
    wxRealPoint *arg6 = 0 ;
    bool result;
    wxRealPoint temp3 ;
    wxRealPoint temp4 ;
    wxRealPoint temp5 ;
    wxRealPoint temp6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachment",(char *) "root",(char *) "neck",(char *) "shoulder1",(char *) "shoulder2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyShape_GetBranchingAttachmentInfo",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxRealPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = &temp4;
        if ( ! wxRealPoint_helper(obj3, &arg4)) SWIG_fail;
    }
    {
        arg5 = &temp5;
        if ( ! wxRealPoint_helper(obj4, &arg5)) SWIG_fail;
    }
    {
        arg6 = &temp6;
        if ( ! wxRealPoint_helper(obj5, &arg6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetBranchingAttachmentInfo(arg2,*arg3,*arg4,*arg5,*arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBranchingAttachmentPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    int arg3 ;
    wxRealPoint *arg4 = 0 ;
    wxRealPoint *arg5 = 0 ;
    bool result;
    wxRealPoint temp4 ;
    wxRealPoint temp5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachment",(char *) "n",(char *) "attachmentPoint",(char *) "stemPoint", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PyShape_GetBranchingAttachmentPoint",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (int)(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = &temp4;
        if ( ! wxRealPoint_helper(obj3, &arg4)) SWIG_fail;
    }
    {
        arg5 = &temp5;
        if ( ! wxRealPoint_helper(obj4, &arg5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetBranchingAttachmentPoint(arg2,arg3,*arg4,*arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetAttachmentLineCount(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_GetAttachmentLineCount",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAttachmentLineCount(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetBranchNeckLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "len", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetBranchNeckLength",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBranchNeckLength(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBranchNeckLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBranchNeckLength",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetBranchNeckLength();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetBranchStemLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "len", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetBranchStemLength",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBranchStemLength(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBranchStemLength(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBranchStemLength",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetBranchStemLength();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetBranchSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "len", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetBranchSpacing",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBranchSpacing(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBranchSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBranchSpacing",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetBranchSpacing();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetBranchStyle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "style", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetBranchStyle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (long)(SWIG_As_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBranchStyle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBranchStyle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBranchStyle",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->GetBranchStyle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_long((long)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_PhysicalToLogicalAttachment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "physicalAttachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_PhysicalToLogicalAttachment",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->PhysicalToLogicalAttachment(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_LogicalToPhysicalAttachment(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "logicalAttachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_LogicalToPhysicalAttachment",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->LogicalToPhysicalAttachment(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Draggable(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_Draggable",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Draggable();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_HasDescendant(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "image", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_HasDescendant",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->HasDescendant(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_CreateNewCopy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 = (bool) true ;
    bool arg3 = (bool) true ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "resetMapping",(char *) "recompute", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:PyShape_CreateNewCopy",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (bool)(SWIG_As_bool(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->CreateNewCopy(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Copy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShape *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "copy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_Copy",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxPyShape");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Copy(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_CopyWithHandler(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyShape *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "copy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_CopyWithHandler",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxPyShape");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CopyWithHandler(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Rotate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "theta", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyShape_Rotate",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Rotate(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetRotation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetRotation",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetRotation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_SetRotation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rotation", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_SetRotation",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRotation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_ClearAttachments(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_ClearAttachments",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearAttachments();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_Recentre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_Recentre",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Recentre(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_ClearPointList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxList *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "list", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_ClearPointList",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxList, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxList");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearPointList(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBackgroundPen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPen result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBackgroundPen",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetBackgroundPen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxPen * resultptr;
        resultptr = new wxPen((wxPen &)(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxPen, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_GetBackgroundBrush(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxBrush result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_GetBackgroundBrush",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetBackgroundBrush();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxBrush * resultptr;
        resultptr = new wxBrush((wxBrush &)(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_wxBrush, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShape *arg1 = (wxPyShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PseudoMetaFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PseudoMetaFile",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPseudoMetaFile *)new wxPseudoMetaFile();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 1); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PseudoMetaFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_PseudoMetaFile",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_Draw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "xoffset",(char *) "yoffset", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PseudoMetaFile_Draw",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Draw(*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_Clear(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PseudoMetaFile_Clear",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Clear();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_Copy(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPseudoMetaFile *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "copy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_Copy",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxPseudoMetaFile");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Copy(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_Scale(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sx",(char *) "sy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PseudoMetaFile_Scale",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Scale(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_ScaleTo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PseudoMetaFile_ScaleTo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ScaleTo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_Translate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PseudoMetaFile_Translate",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Translate(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_Rotate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "theta", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PseudoMetaFile_Rotate",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Rotate(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_LoadFromMetaFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxString *arg2 = 0 ;
    double *arg3 = (double *) 0 ;
    double *arg4 = (double *) 0 ;
    bool result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "filename",(char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PseudoMetaFile_LoadFromMetaFile",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_double, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_double, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadFromMetaFile((wxString const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_GetBounds(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double *arg4 = (double *) 0 ;
    double *arg5 = (double *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "minX",(char *) "minY",(char *) "maxX",(char *) "maxY", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PseudoMetaFile_GetBounds",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_double, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_double, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_double, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_double, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetBounds(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_CalculateSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPyDrawnShape *arg2 = (wxPyDrawnShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_CalculateSize",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CalculateSize(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetRotateable(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rot", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetRotateable",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRotateable(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_GetRotateable(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PseudoMetaFile_GetRotateable",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetRotateable();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PseudoMetaFile_SetSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetFillBrush(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxBrush *arg2 = (wxBrush *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "brush", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetFillBrush",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxBrush* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxBrush"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxBrush.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheBrushList->FindOrCreateBrush(temp->GetColour(), temp->GetStyle());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFillBrush(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_GetFillBrush(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxBrush *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PseudoMetaFile_GetFillBrush",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxBrush *)(arg1)->GetFillBrush();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxBrush, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetOutlinePen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPen *arg2 = (wxPen *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pen", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetOutlinePen",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxPen* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxPen"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxPen.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxThePenList->FindOrCreatePen(temp->GetColour(),
        temp->GetWidth(),
        temp->GetStyle());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOutlinePen(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_GetOutlinePen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPen *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PseudoMetaFile_GetOutlinePen",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPen *)(arg1)->GetOutlinePen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPen, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetOutlineOp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "op", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetOutlineOp",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOutlineOp(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_GetOutlineOp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PseudoMetaFile_GetOutlineOp",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetOutlineOp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_IsValid(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PseudoMetaFile_IsValid",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsValid();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint *arg3 = 0 ;
    wxPoint temp2 ;
    wxPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt1",(char *) "pt2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PseudoMetaFile_DrawLine",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawLine((wxPoint const &)*arg2,(wxPoint const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawRectangle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_DrawRectangle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawRectangle((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawRoundedRectangle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxRect *arg2 = 0 ;
    double arg3 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect",(char *) "radius", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PseudoMetaFile_DrawRoundedRectangle",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawRoundedRectangle((wxRect const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawArc(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint *arg3 = 0 ;
    wxPoint *arg4 = 0 ;
    wxPoint temp2 ;
    wxPoint temp3 ;
    wxPoint temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "centrePt",(char *) "startPt",(char *) "endPt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PseudoMetaFile_DrawArc",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = &temp4;
        if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawArc((wxPoint const &)*arg2,(wxPoint const &)*arg3,(wxPoint const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawEllipticArc(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxRect *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect",(char *) "startAngle",(char *) "endAngle", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PseudoMetaFile_DrawEllipticArc",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawEllipticArc((wxRect const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawEllipse(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_DrawEllipse",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawEllipse((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_DrawPoint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawPoint((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxString *arg2 = 0 ;
    wxPoint *arg3 = 0 ;
    bool temp2 = false ;
    wxPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text",(char *) "pt", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PseudoMetaFile_DrawText",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawText((wxString const &)*arg2,(wxPoint const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawLines(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    int arg2 ;
    wxPoint *arg3 = (wxPoint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "points", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_DrawLines",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg3 = wxPoint_LIST_helper(obj1, &arg2);
        if (arg3 == NULL) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawLines(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (arg3) delete [] arg3;
    }
    return resultobj;
    fail:
    {
        if (arg3) delete [] arg3;
    }
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawPolygon(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    int arg2 ;
    wxPoint *arg3 = (wxPoint *) 0 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "points",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PseudoMetaFile_DrawPolygon",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg3 = wxPoint_LIST_helper(obj1, &arg2);
        if (arg3 == NULL) SWIG_fail;
    }
    if (obj2) {
        {
            arg4 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawPolygon(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (arg3) delete [] arg3;
    }
    return resultobj;
    fail:
    {
        if (arg3) delete [] arg3;
    }
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DrawSpline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    int arg2 ;
    wxPoint *arg3 = (wxPoint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "points", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_DrawSpline",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg3 = wxPoint_LIST_helper(obj1, &arg2);
        if (arg3 == NULL) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawSpline(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (arg3) delete [] arg3;
    }
    return resultobj;
    fail:
    {
        if (arg3) delete [] arg3;
    }
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetClippingRect(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetClippingRect",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetClippingRect((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_DestroyClippingRect(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PseudoMetaFile_DestroyClippingRect",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DestroyClippingRect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetPen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxPen *arg2 = (wxPen *) 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pen",(char *) "isOutline", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PseudoMetaFile_SetPen",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxPen* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxPen"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxPen.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxThePenList->FindOrCreatePen(temp->GetColour(),
        temp->GetWidth(),
        temp->GetStyle());
        else
        arg2 = NULL;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPen(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetBrush(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxBrush *arg2 = (wxBrush *) 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "brush",(char *) "isFill", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PseudoMetaFile_SetBrush",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxBrush* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxBrush"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxBrush.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheBrushList->FindOrCreateBrush(temp->GetColour(), temp->GetStyle());
        else
        arg2 = NULL;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBrush(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxFont *arg2 = (wxFont *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "font", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetFont",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxFont* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxFont"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxFont.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheFontList->FindOrCreateFont(temp->GetPointSize(),
        temp->GetFamily(),
        temp->GetStyle(),
        temp->GetWeight(),
        temp->GetUnderlined(),
        temp->GetFaceName(),
        temp->GetEncoding());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFont(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetTextColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetTextColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTextColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetBackgroundColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetBackgroundColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBackgroundColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PseudoMetaFile_SetBackgroundMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPseudoMetaFile *arg1 = (wxPseudoMetaFile *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PseudoMetaFile_SetBackgroundMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBackgroundMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PseudoMetaFile_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPseudoMetaFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyRectangleShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    double arg1 = (double) 0.0 ;
    double arg2 = (double) 0.0 ;
    wxPyRectangleShape *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PyRectangleShape",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (double)(SWIG_As_double(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (double)(SWIG_As_double(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyRectangleShape *)new wxPyRectangleShape(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyRectangleShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyRectangleShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_SetCornerRadius(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "radius", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_SetCornerRadius",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCornerRadius(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_GetCornerRadius(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyRectangleShape_GetCornerRadius",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetCornerRadius();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyRectangleShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyRectangleShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyRectangleShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyRectangleShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyRectangleShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyRectangleShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyRectangleShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyRectangleShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyRectangleShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyRectangleShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyRectangleShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyRectangleShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyRectangleShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyRectangleShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyRectangleShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyRectangleShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyRectangleShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyRectangleShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyRectangleShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyRectangleShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyRectangleShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyRectangleShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyRectangleShape *arg1 = (wxPyRectangleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyRectangleShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyRectangleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyRectangleShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyRectangleShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyControlPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) NULL ;
    wxPyShape *arg2 = (wxPyShape *) NULL ;
    double arg3 = (double) 0.0 ;
    double arg4 = (double) 0.0 ;
    double arg5 = (double) 0.0 ;
    int arg6 = (int) 0 ;
    wxPyControlPoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "the_canvas",(char *) "object",(char *) "size",(char *) "the_xoffset",(char *) "the_yoffset",(char *) "the_type", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOOO:new_PyControlPoint",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if (obj0) {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    if (obj1) {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (double)(SWIG_As_double(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (double)(SWIG_As_double(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (double)(SWIG_As_double(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyControlPoint *)new wxPyControlPoint(arg1,arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyControlPoint, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyControlPoint__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_SetCornerRadius(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "radius", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_SetCornerRadius",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCornerRadius(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyControlPoint_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyControlPoint_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyControlPoint_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyControlPoint_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyControlPoint_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyControlPoint_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyControlPoint_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyControlPoint_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyControlPoint_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyControlPoint_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyControlPoint_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyControlPoint_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyControlPoint_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyControlPoint_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyControlPoint_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyControlPoint_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyControlPoint_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyControlPoint_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyControlPoint_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyControlPoint_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyControlPoint_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyControlPoint_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyControlPoint *arg1 = (wxPyControlPoint *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyControlPoint_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyControlPoint_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyControlPoint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyBitmapShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyBitmapShape",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyBitmapShape *)new wxPyBitmapShape();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyBitmapShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyBitmapShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_GetBitmap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxBitmap *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyBitmapShape_GetBitmap",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxBitmap &_result_ref = (arg1)->GetBitmap();
            result = (wxBitmap *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        wxBitmap* resultptr = new wxBitmap(*result);
        resultobj = SWIG_NewPointerObj((void*)(resultptr), SWIGTYPE_p_wxBitmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_GetFilename(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyBitmapShape_GetFilename",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetFilename();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_SetBitmap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxBitmap *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bitmap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_SetBitmap",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxBitmap, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxBitmap");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBitmap((wxBitmap const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_SetFilename(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "filename", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_SetFilename",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFilename((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyBitmapShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyBitmapShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyBitmapShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyBitmapShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyBitmapShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyBitmapShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyBitmapShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyBitmapShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyBitmapShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyBitmapShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyBitmapShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyBitmapShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyBitmapShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyBitmapShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyBitmapShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyBitmapShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyBitmapShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyBitmapShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyBitmapShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyBitmapShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyBitmapShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyBitmapShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyBitmapShape *arg1 = (wxPyBitmapShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyBitmapShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyBitmapShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyBitmapShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyBitmapShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyDrawnShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyDrawnShape",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDrawnShape *)new wxPyDrawnShape();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyDrawnShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_CalculateSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDrawnShape_CalculateSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CalculateSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DestroyClippingRect(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDrawnShape_DestroyClippingRect",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DestroyClippingRect();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawArc(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint *arg3 = 0 ;
    wxPoint *arg4 = 0 ;
    wxPoint temp2 ;
    wxPoint temp3 ;
    wxPoint temp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "centrePoint",(char *) "startPoint",(char *) "endPoint", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyDrawnShape_DrawArc",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        arg4 = &temp4;
        if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawArc((wxPoint const &)*arg2,(wxPoint const &)*arg3,(wxPoint const &)*arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawAtAngle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "angle", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_DrawAtAngle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawAtAngle(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawEllipticArc(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxRect *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect",(char *) "startAngle",(char *) "endAngle", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyDrawnShape_DrawEllipticArc",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawEllipticArc((wxRect const &)*arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawLine(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint *arg3 = 0 ;
    wxPoint temp2 ;
    wxPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "point1",(char *) "point2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_DrawLine",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawLine((wxPoint const &)*arg2,(wxPoint const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawLines(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    int arg2 ;
    wxPoint *arg3 = (wxPoint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "points", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_DrawLines",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg3 = wxPoint_LIST_helper(obj1, &arg2);
        if (arg3 == NULL) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawLines(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (arg3) delete [] arg3;
    }
    return resultobj;
    fail:
    {
        if (arg3) delete [] arg3;
    }
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPoint *arg2 = 0 ;
    wxPoint temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "point", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_DrawPoint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawPoint((wxPoint const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawPolygon(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    int arg2 ;
    wxPoint *arg3 = (wxPoint *) 0 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "points",(char *) "flags", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDrawnShape_DrawPolygon",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg3 = wxPoint_LIST_helper(obj1, &arg2);
        if (arg3 == NULL) SWIG_fail;
    }
    if (obj2) {
        {
            arg4 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawPolygon(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (arg3) delete [] arg3;
    }
    return resultobj;
    fail:
    {
        if (arg3) delete [] arg3;
    }
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawRectangle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_DrawRectangle",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawRectangle((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawRoundedRectangle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxRect *arg2 = 0 ;
    double arg3 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect",(char *) "radius", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_DrawRoundedRectangle",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawRoundedRectangle((wxRect const &)*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawSpline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    int arg2 ;
    wxPoint *arg3 = (wxPoint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "points", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_DrawSpline",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg3 = wxPoint_LIST_helper(obj1, &arg2);
        if (arg3 == NULL) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawSpline(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (arg3) delete [] arg3;
    }
    return resultobj;
    fail:
    {
        if (arg3) delete [] arg3;
    }
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_DrawText(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxString *arg2 = 0 ;
    wxPoint *arg3 = 0 ;
    bool temp2 = false ;
    wxPoint temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "text",(char *) "point", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_DrawText",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        arg3 = &temp3;
        if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawText((wxString const &)*arg2,(wxPoint const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_GetAngle(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDrawnShape_GetAngle",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAngle();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_GetMetaFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPseudoMetaFile *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDrawnShape_GetMetaFile",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        {
            wxPseudoMetaFile &_result_ref = (arg1)->GetMetaFile();
            result = (wxPseudoMetaFile *) &_result_ref;
        }
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPseudoMetaFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_GetRotation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDrawnShape_GetRotation",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetRotation();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_LoadFromMetaFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "filename", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_LoadFromMetaFile",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->LoadFromMetaFile((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_Rotate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "theta", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyDrawnShape_Rotate",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Rotate(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetClippingRect(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxRect *arg2 = 0 ;
    wxRect temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "rect", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_SetClippingRect",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxRect_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetClippingRect((wxRect const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetDrawnBackgroundColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_SetDrawnBackgroundColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawnBackgroundColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetDrawnBackgroundMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_SetDrawnBackgroundMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawnBackgroundMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetDrawnBrush(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxBrush *arg2 = (wxBrush *) 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pen",(char *) "isOutline", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDrawnShape_SetDrawnBrush",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxBrush* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxBrush"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxBrush.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheBrushList->FindOrCreateBrush(temp->GetColour(), temp->GetStyle());
        else
        arg2 = NULL;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawnBrush(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetDrawnFont(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxFont *arg2 = (wxFont *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "font", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_SetDrawnFont",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxFont* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxFont"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxFont.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxTheFontList->FindOrCreateFont(temp->GetPointSize(),
        temp->GetFamily(),
        temp->GetStyle(),
        temp->GetWeight(),
        temp->GetUnderlined(),
        temp->GetFaceName(),
        temp->GetEncoding());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawnFont(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetDrawnPen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPen *arg2 = (wxPen *) 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pen",(char *) "isOutline", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDrawnShape_SetDrawnPen",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxPen* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxPen"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxPen.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxThePenList->FindOrCreatePen(temp->GetColour(),
        temp->GetWidth(),
        temp->GetStyle());
        else
        arg2 = NULL;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawnPen(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetDrawnTextColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxColour *arg2 = 0 ;
    wxColour temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_SetDrawnTextColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = &temp2;
        if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDrawnTextColour((wxColour const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_Scale(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sx",(char *) "sy", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_Scale",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Scale(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_SetSaveToFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "save", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_SetSaveToFile",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSaveToFile(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_Translate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_Translate",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Translate(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDrawnShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDrawnShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDrawnShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDrawnShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDrawnShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyDrawnShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyDrawnShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDrawnShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDrawnShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDrawnShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDrawnShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDrawnShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDrawnShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyDrawnShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDrawnShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDrawnShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyDrawnShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDrawnShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDrawnShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDrawnShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDrawnShape *arg1 = (wxPyDrawnShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDrawnShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDrawnShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyDrawnShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyDrawnShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OGLConstraint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    wxOGLConstraint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "type",(char *) "constraining",(char *) "constrained", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:new_OGLConstraint",kwnames,&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = (int)(SWIG_As_int(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxOGLConstraint *)new_wxOGLConstraint(arg1,arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 1); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OGLConstraint_Evaluate(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxOGLConstraint *arg1 = (wxOGLConstraint *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:OGLConstraint_Evaluate",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxOGLConstraint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Evaluate();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OGLConstraint_SetSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxOGLConstraint *arg1 = (wxOGLConstraint *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:OGLConstraint_SetSpacing",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxOGLConstraint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSpacing(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OGLConstraint_Equals(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxOGLConstraint *arg1 = (wxOGLConstraint *) 0 ;
    double arg2 ;
    double arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "a",(char *) "b", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:OGLConstraint_Equals",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxOGLConstraint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Equals(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OGLConstraint_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxOGLConstraint, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyCompositeShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyCompositeShape",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyCompositeShape *)new wxPyCompositeShape();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyCompositeShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCompositeShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_AddChild(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    wxPyShape *arg3 = (wxPyShape *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child",(char *) "addAfter", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyCompositeShape_AddChild",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddChild(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_AddConstraint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxOGLConstraint *arg2 = (wxOGLConstraint *) 0 ;
    wxOGLConstraint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "constraint", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_AddConstraint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxOGLConstraint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxOGLConstraint *)(arg1)->AddConstraint(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_AddConstrainedShapes(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    int arg2 ;
    wxPyShape *arg3 = (wxPyShape *) 0 ;
    PyObject *arg4 = (PyObject *) 0 ;
    wxOGLConstraint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "type",(char *) "constraining",(char *) "constrained", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyCompositeShape_AddConstrainedShapes",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    arg4 = obj3;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxOGLConstraint *)wxPyCompositeShape_AddConstrainedShapes(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_AddSimpleConstraint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    int arg2 ;
    wxPyShape *arg3 = (wxPyShape *) 0 ;
    wxPyShape *arg4 = (wxPyShape *) 0 ;
    wxOGLConstraint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "type",(char *) "constraining",(char *) "constrained", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyCompositeShape_AddSimpleConstraint",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxOGLConstraint *)(arg1)->AddConstraint(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_CalculateSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCompositeShape_CalculateSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CalculateSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_ContainsDivision(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyDivisionShape *arg2 = (wxPyDivisionShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "division", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_ContainsDivision",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->ContainsDivision(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_DeleteConstraint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxOGLConstraint *arg2 = (wxOGLConstraint *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "constraint", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_DeleteConstraint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxOGLConstraint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteConstraint(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_DeleteConstraintsInvolvingChild(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_DeleteConstraintsInvolvingChild",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteConstraintsInvolvingChild(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_FindContainerImage(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCompositeShape_FindContainerImage",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->FindContainerImage();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_GetConstraints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCompositeShape_GetConstraints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyCompositeShape_GetConstraints(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_GetDivisions(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCompositeShape_GetDivisions",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyCompositeShape_GetDivisions(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_MakeContainer(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCompositeShape_MakeContainer",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MakeContainer();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_Recompute(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCompositeShape_Recompute",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->Recompute();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_RemoveChild(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "child", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_RemoveChild",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveChild(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyCompositeShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyCompositeShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCompositeShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCompositeShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCompositeShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCompositeShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyCompositeShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyCompositeShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCompositeShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCompositeShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCompositeShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCompositeShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCompositeShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCompositeShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyCompositeShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCompositeShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyCompositeShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyCompositeShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCompositeShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCompositeShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCompositeShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCompositeShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCompositeShape *arg1 = (wxPyCompositeShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCompositeShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCompositeShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyCompositeShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyCompositeShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyDividedShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    double arg1 = (double) 0.0 ;
    double arg2 = (double) 0.0 ;
    wxPyDividedShape *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PyDividedShape",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (double)(SWIG_As_double(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (double)(SWIG_As_double(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDividedShape *)new wxPyDividedShape(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyDividedShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDividedShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_EditRegions(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDividedShape_EditRegions",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EditRegions();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_SetRegionSizes(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDividedShape_SetRegionSizes",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRegionSizes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDividedShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDividedShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDividedShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDividedShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDividedShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDividedShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyDividedShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyDividedShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDividedShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDividedShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDividedShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDividedShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDividedShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDividedShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyDividedShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDividedShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDividedShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyDividedShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDividedShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDividedShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDividedShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDividedShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDividedShape *arg1 = (wxPyDividedShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDividedShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDividedShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyDividedShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyDividedShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyDivisionShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyDivisionShape",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDivisionShape *)new wxPyDivisionShape();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyDivisionShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_AdjustBottom(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "bottom",(char *) "test", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_AdjustBottom",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AdjustBottom(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_AdjustLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "left",(char *) "test", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_AdjustLeft",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AdjustLeft(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_AdjustRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "right",(char *) "test", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_AdjustRight",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AdjustRight(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_AdjustTop(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "top",(char *) "test", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_AdjustTop",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AdjustTop(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_Divide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "direction", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_Divide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Divide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_EditEdge(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "side", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_EditEdge",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EditEdge(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetBottomSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetBottomSide",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDivisionShape *)(arg1)->GetBottomSide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetHandleSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetHandleSide",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetHandleSide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetLeftSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetLeftSide",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDivisionShape *)(arg1)->GetLeftSide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetLeftSideColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetLeftSideColour",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetLeftSideColour();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetLeftSidePen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPen *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetLeftSidePen",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPen *)(arg1)->GetLeftSidePen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPen, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetRightSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetRightSide",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDivisionShape *)(arg1)->GetRightSide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetTopSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetTopSide",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyDivisionShape *)(arg1)->GetTopSide();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_GetTopSidePen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPen *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_GetTopSidePen",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPen *)(arg1)->GetTopSidePen();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPen, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_ResizeAdjoining(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    int arg2 ;
    double arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "side",(char *) "newPos",(char *) "test", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyDivisionShape_ResizeAdjoining",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (bool)(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ResizeAdjoining(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_PopupMenu(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_PopupMenu",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->PopupMenu(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetBottomSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *arg2 = (wxPyDivisionShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetBottomSide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetBottomSide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetHandleSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "side", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetHandleSide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetHandleSide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetLeftSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *arg2 = (wxPyDivisionShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetLeftSide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLeftSide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetLeftSideColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetLeftSideColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLeftSideColour((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetLeftSidePen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPen *arg2 = (wxPen *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pen", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetLeftSidePen",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxPen* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxPen"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxPen.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxThePenList->FindOrCreatePen(temp->GetColour(),
        temp->GetWidth(),
        temp->GetStyle());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetLeftSidePen(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetRightSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *arg2 = (wxPyDivisionShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetRightSide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetRightSide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetTopSide(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyDivisionShape *arg2 = (wxPyDivisionShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetTopSide",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTopSide(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetTopSideColour(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxString *arg2 = 0 ;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "colour", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetTopSideColour",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTopSideColour((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_SetTopSidePen(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPen *arg2 = (wxPen *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pen", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_SetTopSidePen",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        wxPen* temp;
        if (obj1) {
            if (obj1 == Py_None) {
                temp = NULL; 
            }
            else if (! wxPyConvertSwigPtr(obj1, (void **) &temp, wxT("wxPen"))) {
                PyErr_SetString(PyExc_TypeError, "Type error, expected wxPen.");
                return NULL;
            }
        }
        if (temp)
        arg2 = wxThePenList->FindOrCreatePen(temp->GetColour(),
        temp->GetWidth(),
        temp->GetStyle());
        else
        arg2 = NULL;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTopSidePen(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyDivisionShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDivisionShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDivisionShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDivisionShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDivisionShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyDivisionShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyDivisionShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDivisionShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDivisionShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDivisionShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDivisionShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDivisionShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyDivisionShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyDivisionShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyDivisionShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyDivisionShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyDivisionShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDivisionShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyDivisionShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyDivisionShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyDivisionShape *arg1 = (wxPyDivisionShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyDivisionShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyDivisionShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyDivisionShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyDivisionShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyEllipseShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    double arg1 = (double) 0.0 ;
    double arg2 = (double) 0.0 ;
    wxPyEllipseShape *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PyEllipseShape",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (double)(SWIG_As_double(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (double)(SWIG_As_double(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyEllipseShape *)new wxPyEllipseShape(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyEllipseShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyEllipseShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyEllipseShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyEllipseShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyEllipseShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyEllipseShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyEllipseShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyEllipseShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyEllipseShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyEllipseShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyEllipseShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyEllipseShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyEllipseShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyEllipseShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyEllipseShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyEllipseShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEllipseShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyEllipseShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyEllipseShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyEllipseShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyEllipseShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyEllipseShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyEllipseShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyEllipseShape *arg1 = (wxPyEllipseShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyEllipseShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyEllipseShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyEllipseShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyEllipseShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyCircleShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    double arg1 = (double) 0.0 ;
    wxPyCircleShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "width", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:new_PyCircleShape",kwnames,&obj0)) goto fail;
    if (obj0) {
        {
            arg1 = (double)(SWIG_As_double(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyCircleShape *)new wxPyCircleShape(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyCircleShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCircleShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyCircleShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCircleShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCircleShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCircleShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCircleShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyCircleShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyCircleShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCircleShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCircleShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCircleShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCircleShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCircleShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyCircleShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyCircleShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyCircleShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyCircleShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyCircleShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCircleShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyCircleShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCircleShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyCircleShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyCircleShape *arg1 = (wxPyCircleShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyCircleShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyCircleShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyCircleShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyCircleShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ArrowHead(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    int arg1 = (int) 0 ;
    int arg2 = (int) 0 ;
    double arg3 = (double) 0.0 ;
    double arg4 = (double) 0.0 ;
    wxString const &arg5_defvalue = wxPyEmptyString ;
    wxString *arg5 = (wxString *) &arg5_defvalue ;
    wxPseudoMetaFile *arg6 = (wxPseudoMetaFile *) NULL ;
    long arg7 = (long) -1 ;
    wxArrowHead *result;
    bool temp5 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "type",(char *) "end",(char *) "size",(char *) "dist",(char *) "name",(char *) "mf",(char *) "arrowId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOOOO:new_ArrowHead",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if (obj0) {
        {
            arg1 = (int)(SWIG_As_int(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = (double)(SWIG_As_double(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (double)(SWIG_As_double(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = wxString_in_helper(obj4);
            if (arg5 == NULL) SWIG_fail;
            temp5 = true;
        }
    }
    if (obj5) {
        SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (long)(SWIG_As_long(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxArrowHead *)new wxArrowHead(arg1,arg2,arg3,arg4,(wxString const &)*arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 1); 
    }
    {
        if (temp5)
        delete arg5;
    }
    return resultobj;
    fail:
    {
        if (temp5)
        delete arg5;
    }
    return NULL;
}


static PyObject *_wrap_delete_ArrowHead(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:delete_ArrowHead",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        delete arg1;
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead__GetType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead__GetType",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->_GetType();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetPosition",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetPosition();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_SetPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ArrowHead_SetPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetXOffset(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetXOffset",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetXOffset();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetYOffset(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetYOffset",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetYOffset();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetSpacing",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetSpacing();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetName(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    wxString result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetName",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (arg1)->GetName();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
#if wxUSE_UNICODE
        resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
        resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_SetXOffset(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ArrowHead_SetXOffset",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetXOffset(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_SetYOffset(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ArrowHead_SetYOffset",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetYOffset(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetMetaFile(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    wxPseudoMetaFile *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetMetaFile",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPseudoMetaFile *)(arg1)->GetMetaFile();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetId(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetId",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (long)(arg1)->GetId();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_long((long)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetArrowEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetArrowEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetArrowEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_GetArrowSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:ArrowHead_GetArrowSize",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetArrowSize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_SetSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "size", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ArrowHead_SetSize",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSize(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ArrowHead_SetSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxArrowHead *arg1 = (wxArrowHead *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "sp", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ArrowHead_SetSpacing",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSpacing(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ArrowHead_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxArrowHead, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyLineShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyLineShape",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyLineShape *)new wxPyLineShape();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyLineShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_AddArrow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    int arg3 = (int) ARROW_POSITION_END ;
    double arg4 = (double) 10.0 ;
    double arg5 = (double) 0.0 ;
    wxString const &arg6_defvalue = wxPyEmptyString ;
    wxString *arg6 = (wxString *) &arg6_defvalue ;
    wxPseudoMetaFile *arg7 = (wxPseudoMetaFile *) NULL ;
    long arg8 = (long) -1 ;
    bool temp6 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "type",(char *) "end",(char *) "arrowSize",(char *) "xOffset",(char *) "name",(char *) "mf",(char *) "arrowId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOOO:PyLineShape_AddArrow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (int)(SWIG_As_int(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = (double)(SWIG_As_double(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (double)(SWIG_As_double(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = wxString_in_helper(obj5);
            if (arg6 == NULL) SWIG_fail;
            temp6 = true;
        }
    }
    if (obj6) {
        SWIG_Python_ConvertPtr(obj6, (void **)&arg7, SWIGTYPE_p_wxPseudoMetaFile, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    if (obj7) {
        {
            arg8 = (long)(SWIG_As_long(obj7)); 
            if (SWIG_arg_fail(8)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddArrow(arg2,arg3,arg4,arg5,(wxString const &)*arg6,arg7,arg8);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        if (temp6)
        delete arg6;
    }
    return resultobj;
    fail:
    {
        if (temp6)
        delete arg6;
    }
    return NULL;
}


static PyObject *_wrap_PyLineShape_AddArrowOrdered(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxArrowHead *arg2 = (wxArrowHead *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "arrow",(char *) "referenceList",(char *) "end", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyLineShape_AddArrowOrdered",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    arg3 = obj2;
    {
        arg4 = (int)(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyLineShape_AddArrowOrdered(arg1,arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_ClearArrow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxString *arg2 = 0 ;
    bool result;
    bool temp2 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_ClearArrow",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = wxString_in_helper(obj1);
        if (arg2 == NULL) SWIG_fail;
        temp2 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->ClearArrow((wxString const &)*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp2)
        delete arg2;
    }
    return resultobj;
    fail:
    {
        if (temp2)
        delete arg2;
    }
    return NULL;
}


static PyObject *_wrap_PyLineShape_ClearArrowsAtPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "position", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyLineShape_ClearArrowsAtPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ClearArrowsAtPosition(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_DrawArrow(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    wxArrowHead *arg3 = (wxArrowHead *) 0 ;
    double arg4 ;
    bool arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "arrow",(char *) "xOffset",(char *) "proportionalOffset", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PyLineShape_DrawArrow",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxArrowHead, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (bool)(SWIG_As_bool(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawArrow(*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_DeleteArrowHeadId(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    long arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "arrowId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_DeleteArrowHeadId",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (long)(SWIG_As_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->DeleteArrowHead(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_DeleteArrowHead(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    bool result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "position",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_DeleteArrowHead",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->DeleteArrowHead(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_PyLineShape_DeleteLineControlPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_DeleteLineControlPoint",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->DeleteLineControlPoint();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_DrawArrows(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_DrawArrows",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawArrows(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_DrawRegion(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    wxShapeRegion *arg3 = (wxShapeRegion *) 0 ;
    double arg4 ;
    double arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "region",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PyLineShape_DrawRegion",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawRegion(*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_EraseRegion(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    wxShapeRegion *arg3 = (wxShapeRegion *) 0 ;
    double arg4 ;
    double arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "region",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PyLineShape_EraseRegion",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxShapeRegion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->EraseRegion(*arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_FindArrowHeadId(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    long arg2 ;
    wxArrowHead *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "arrowId", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_FindArrowHeadId",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (long)(SWIG_As_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxArrowHead *)(arg1)->FindArrowHead(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_FindArrowHead(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    wxString *arg3 = 0 ;
    wxArrowHead *result;
    bool temp3 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "position",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_FindArrowHead",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = wxString_in_helper(obj2);
        if (arg3 == NULL) SWIG_fail;
        temp3 = true;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxArrowHead *)(arg1)->FindArrowHead(arg2,(wxString const &)*arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    {
        if (temp3)
        delete arg3;
    }
    return resultobj;
    fail:
    {
        if (temp3)
        delete arg3;
    }
    return NULL;
}


static PyObject *_wrap_PyLineShape_FindLineEndPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double *arg4 = (double *) 0 ;
    double *arg5 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    double temp4 ;
    int res4 = 0 ;
    double temp5 ;
    int res5 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    arg5 = &temp5; res5 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_FindLineEndPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->FindLineEndPoints(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res5 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg5)) : SWIG_NewPointerObj((void*)(arg5), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_FindLinePosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_FindLinePosition",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->FindLinePosition(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_FindMinimumWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_FindMinimumWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->FindMinimumWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_FindNth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    int *arg3 = (int *) 0 ;
    int *arg4 = (int *) 0 ;
    bool arg5 ;
    int temp3 ;
    int res3 = 0 ;
    int temp4 ;
    int res4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "image",(char *) "incoming", NULL 
    };
    
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_FindNth",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg5 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->FindNth(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_int, 0)));
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_int, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetAttachmentFrom(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetAttachmentFrom",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAttachmentFrom();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetAttachmentTo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetAttachmentTo",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAttachmentTo();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetEnds(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double *arg4 = (double *) 0 ;
    double *arg5 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    double temp4 ;
    int res4 = 0 ;
    double temp5 ;
    int res5 = 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    arg2 = &temp2; res2 = SWIG_NEWOBJ;
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    arg5 = &temp5; res5 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetEnds",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetEnds(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res5 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg5)) : SWIG_NewPointerObj((void*)(arg5), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetFrom(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetFrom",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->GetFrom();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetLabelPosition(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    double *arg3 = (double *) 0 ;
    double *arg4 = (double *) 0 ;
    double temp3 ;
    int res3 = 0 ;
    double temp4 ;
    int res4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "position", NULL 
    };
    
    arg3 = &temp3; res3 = SWIG_NEWOBJ;
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_GetLabelPosition",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->GetLabelPosition(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetNextControlPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    wxRealPoint *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_GetNextControlPoint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxRealPoint *)(arg1)->GetNextControlPoint(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxRealPoint, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetTo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetTo",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->GetTo();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_Initialise(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_Initialise",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Initialise();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_InsertLineControlPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = (wxDC *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_InsertLineControlPoint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertLineControlPoint(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_IsEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_IsEnd",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsEnd(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_IsSpline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_IsSpline",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->IsSpline();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_MakeLineControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "n", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_MakeLineControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->MakeLineControlPoints(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetLineControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetLineControlPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyLineShape_GetLineControlPoints(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetLineControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "list", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_SetLineControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxPyLineShape_SetLineControlPoints(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetAttachmentFrom(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fromAttach", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_SetAttachmentFrom",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAttachmentFrom(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetAttachments(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "fromAttach",(char *) "toAttach", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_SetAttachments",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (int)(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAttachments(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetAttachmentTo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "toAttach", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_SetAttachmentTo",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAttachmentTo(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetEnds(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x1",(char *) "y1",(char *) "x2",(char *) "y2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PyLineShape_SetEnds",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetEnds(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetFrom(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "object", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_SetFrom",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetFrom(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetIgnoreOffsets(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "ignore", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_SetIgnoreOffsets",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetIgnoreOffsets(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetSpline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "spline", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_SetSpline",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSpline(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetTo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "object", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_SetTo",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetTo(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_Straighten(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = (wxDC *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyLineShape_Straighten",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Straighten(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_Unlink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_Unlink",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Unlink();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetAlignmentOrientation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "isEnd",(char *) "isHoriz", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_SetAlignmentOrientation",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAlignmentOrientation(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_SetAlignmentType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "isEnd",(char *) "alignType", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_SetAlignmentType",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (int)(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetAlignmentType(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetAlignmentOrientation(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "isEnd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_GetAlignmentOrientation",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetAlignmentOrientation(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetAlignmentType(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "isEnd", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_GetAlignmentType",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetAlignmentType(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetAlignmentStart(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetAlignmentStart",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxPyLineShape const *)arg1)->GetAlignmentStart();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_GetAlignmentEnd(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyLineShape_GetAlignmentEnd",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)((wxPyLineShape const *)arg1)->GetAlignmentEnd();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyLineShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyLineShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyLineShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyLineShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyLineShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyLineShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyLineShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyLineShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyLineShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyLineShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyLineShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyLineShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyLineShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLineShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyLineShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyLineShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyLineShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyLineShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyLineShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyLineShape *arg1 = (wxPyLineShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyLineShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyLineShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyLineShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyLineShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyPolygonShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_PyPolygonShape",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyPolygonShape *)new wxPyPolygonShape();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyPolygonShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyPolygonShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_Create(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "points", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_Create",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyPolygonShape_Create(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_AddPolygonPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    int arg2 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyPolygonShape_AddPolygonPoint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddPolygonPoint(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_CalculatePolygonCentre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyPolygonShape_CalculatePolygonCentre",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->CalculatePolygonCentre();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_DeletePolygonPoint(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    int arg2 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pos", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PyPolygonShape_DeletePolygonPoint",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeletePolygonPoint(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_GetPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyPolygonShape_GetPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyPolygonShape_GetPoints(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_GetOriginalPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyPolygonShape_GetOriginalPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxPyPolygonShape_GetOriginalPoints(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_GetOriginalWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyPolygonShape_GetOriginalWidth",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPyPolygonShape const *)arg1)->GetOriginalWidth();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_GetOriginalHeight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyPolygonShape_GetOriginalHeight",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)((wxPyPolygonShape const *)arg1)->GetOriginalHeight();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_SetOriginalWidth(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_SetOriginalWidth",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOriginalWidth(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_SetOriginalHeight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_SetOriginalHeight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetOriginalHeight(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_UpdateOriginalPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyPolygonShape_UpdateOriginalPoints",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->UpdateOriginalPoints();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyPolygonShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyPolygonShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyPolygonShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyPolygonShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyPolygonShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyPolygonShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyPolygonShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyPolygonShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyPolygonShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyPolygonShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyPolygonShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyPolygonShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyPolygonShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyPolygonShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyPolygonShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyPolygonShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyPolygonShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyPolygonShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyPolygonShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyPolygonShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyPolygonShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyPolygonShape *arg1 = (wxPyPolygonShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyPolygonShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyPolygonShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyPolygonShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyPolygonShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyTextShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    double arg1 = (double) 0.0 ;
    double arg2 = (double) 0.0 ;
    wxPyTextShape *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "width",(char *) "height", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PyTextShape",kwnames,&obj0,&obj1)) goto fail;
    if (obj0) {
        {
            arg1 = (double)(SWIG_As_double(obj0)); 
            if (SWIG_arg_fail(1)) SWIG_fail;
        }
    }
    if (obj1) {
        {
            arg2 = (double)(SWIG_As_double(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyTextShape *)new wxPyTextShape(arg1,arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyTextShape, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyTextShape__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDelete(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyTextShape_base_OnDelete",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDelete();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnDraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDrawContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnDrawContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDrawBranches(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) FALSE ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "erase", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyTextShape_base_OnDrawBranches",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawBranches(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnMoveLinks(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnMoveLinks",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLinks(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnErase(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnErase",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnErase(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnEraseContents(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnEraseContents",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseContents(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnHighlight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnHighlight",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnHighlight(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyTextShape_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnLeftDoubleClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyTextShape_base_OnLeftDoubleClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftDoubleClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyTextShape_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyTextShape_base_OnSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnMovePre(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyTextShape_base_OnMovePre",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->base_OnMovePre(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnMovePost(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    bool arg7 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "old_x",(char *) "old_y",(char *) "display", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO|O:PyTextShape_base_OnMovePost",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    if (obj6) {
        {
            arg7 = (bool)(SWIG_As_bool(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMovePost(*arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyTextShape_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyTextShape_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyTextShape_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyTextShape_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyTextShape_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyTextShape_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x",(char *) "y",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PyTextShape_base_OnDrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnDrawControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnDrawControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDrawControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnEraseControlPoints(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextShape_base_OnEraseControlPoints",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEraseControlPoints(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnMoveLink(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxDC *arg2 = 0 ;
    bool arg3 = (bool) true ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "moveControlPoints", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyTextShape_base_OnMoveLink",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (obj2) {
        {
            arg3 = (bool)(SWIG_As_bool(obj2)); 
            if (SWIG_arg_fail(3)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnMoveLink(*arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnSizingDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    bool arg3 ;
    double arg4 ;
    double arg5 ;
    int arg6 = (int) 0 ;
    int arg7 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OO:PyTextShape_base_OnSizingDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (bool)(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    if (obj6) {
        {
            arg7 = (int)(SWIG_As_int(obj6)); 
            if (SWIG_arg_fail(7)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingDragLeft(arg2,arg3,arg4,arg5,arg6,arg7);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnSizingBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyTextShape_base_OnSizingBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingBeginDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnSizingEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    wxPyControlPoint *arg2 = (wxPyControlPoint *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "pt",(char *) "x",(char *) "y",(char *) "keys",(char *) "attachment", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OO:PyTextShape_base_OnSizingEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyControlPoint, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = (int)(SWIG_As_int(obj5)); 
            if (SWIG_arg_fail(6)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnSizingEndDragLeft(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnBeginSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyTextShape_base_OnBeginSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTextShape_base_OnEndSize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyTextShape *arg1 = (wxPyTextShape *) 0 ;
    double arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "w",(char *) "h", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyTextShape_base_OnEndSize",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyTextShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndSize(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyTextShape_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyTextShape, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Diagram(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *result;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":new_Diagram",kwnames)) goto fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDiagram *)new wxDiagram();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 1); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_AddShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    wxPyShape *arg3 = (wxPyShape *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape",(char *) "addAfter", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:Diagram_AddShape",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddShape(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_Clear(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_Clear",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Clear(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_DeleteAllShapes(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_DeleteAllShapes",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DeleteAllShapes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_DrawOutline(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxDC *arg2 = 0 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc",(char *) "x1",(char *) "y1",(char *) "x2",(char *) "y2", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:Diagram_DrawOutline",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = (double)(SWIG_As_double(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        arg6 = (double)(SWIG_As_double(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->DrawOutline(*arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_FindShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    long arg2 ;
    wxPyShape *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "id", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_FindShape",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (long)(SWIG_As_long(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->FindShape(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_GetCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxPyShapeCanvas *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_GetCanvas",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShapeCanvas *)(arg1)->GetCanvas();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_GetCount(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_GetCount",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetCount();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_GetGridSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_GetGridSpacing",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (double)(arg1)->GetGridSpacing();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_double((double)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_GetMouseTolerance(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_GetMouseTolerance",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (int)(arg1)->GetMouseTolerance();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = SWIG_From_int((int)(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_GetShapeList(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_GetShapeList",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (PyObject *)wxDiagram_GetShapeList(arg1);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_GetQuickEditMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_GetQuickEditMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetQuickEditMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_GetSnapToGrid(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_GetSnapToGrid",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetSnapToGrid();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_InsertShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_InsertShape",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertShape(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_RecentreAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_RecentreAll",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RecentreAll(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_Redraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_Redraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Redraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_RemoveAllShapes(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Diagram_RemoveAllShapes",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveAllShapes();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_RemoveShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_RemoveShape",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveShape(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_SetCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    wxPyShapeCanvas *arg2 = (wxPyShapeCanvas *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "canvas", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_SetCanvas",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetCanvas(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_SetGridSpacing(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    double arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "spacing", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_SetGridSpacing",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetGridSpacing(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_SetMouseTolerance(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "tolerance", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_SetMouseTolerance",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (int)(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetMouseTolerance(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_SetQuickEditMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "mode", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_SetQuickEditMode",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetQuickEditMode(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_SetSnapToGrid(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "snap", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_SetSnapToGrid",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetSnapToGrid(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_ShowAll(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "show", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Diagram_ShowAll",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->ShowAll(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Diagram_Snap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxDiagram *arg1 = (wxDiagram *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "INOUT",(char *) "INOUT", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Diagram_Snap",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if (!(SWIG_ConvertPtr(obj1,(void **)(&arg2),SWIGTYPE_p_double,0) != -1)) {
            temp2 = SWIG_As_double(obj1);
            if (SWIG_arg_fail(2)) SWIG_fail;
            arg2 = &temp2;
            res2 = SWIG_NEWOBJ;
        }
    }
    {
        if (!(SWIG_ConvertPtr(obj2,(void **)(&arg3),SWIGTYPE_p_double,0) != -1)) {
            temp3 = SWIG_As_double(obj2);
            if (SWIG_arg_fail(3)) SWIG_fail;
            arg3 = &temp3;
            res3 = SWIG_NEWOBJ;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Snap(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Diagram_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxDiagram, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyShapeCanvas(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxWindow *arg1 = (wxWindow *) NULL ;
    int arg2 = (int) -1 ;
    wxPoint const &arg3_defvalue = wxDefaultPosition ;
    wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
    wxSize const &arg4_defvalue = wxDefaultSize ;
    wxSize *arg4 = (wxSize *) &arg4_defvalue ;
    long arg5 = (long) wxBORDER ;
    wxString const &arg6_defvalue = wxPyShapeCanvasNameStr ;
    wxString *arg6 = (wxString *) &arg6_defvalue ;
    wxPyShapeCanvas *result;
    wxPoint temp3 ;
    wxSize temp4 ;
    bool temp6 = false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    char *kwnames[] = {
        (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOOO:new_PyShapeCanvas",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if (obj0) {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxWindow, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    if (obj1) {
        {
            arg2 = (int)(SWIG_As_int(obj1)); 
            if (SWIG_arg_fail(2)) SWIG_fail;
        }
    }
    if (obj2) {
        {
            arg3 = &temp3;
            if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
        }
    }
    if (obj3) {
        {
            arg4 = &temp4;
            if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
        }
    }
    if (obj4) {
        {
            arg5 = (long)(SWIG_As_long(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    if (obj5) {
        {
            arg6 = wxString_in_helper(obj5);
            if (arg6 == NULL) SWIG_fail;
            temp6 = true;
        }
    }
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShapeCanvas *)new wxPyShapeCanvas(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxString const &)*arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_wxPyShapeCanvas, 1);
    {
        if (temp6)
        delete arg6;
    }
    return resultobj;
    fail:
    {
        if (temp6)
        delete arg6;
    }
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas__setCallbackInfo(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *arg3 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "self",(char *) "_class", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShapeCanvas__setCallbackInfo",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    arg3 = obj2;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->_setCallbackInfo(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_AddShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    wxPyShape *arg3 = (wxPyShape *) NULL ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape",(char *) "addAfter", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PyShapeCanvas_AddShape",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (obj2) {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->AddShape(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_FindShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int *arg4 = (int *) 0 ;
    wxClassInfo *arg5 = (wxClassInfo *) NULL ;
    wxPyShape *arg6 = (wxPyShape *) NULL ;
    wxPyShape *result;
    int temp4 ;
    int res4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x1",(char *) "y",(char *) "info",(char *) "notImage", NULL 
    };
    
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PyShapeCanvas_FindShape",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg5, SWIGTYPE_p_wxClassInfo, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    if (obj4) {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg6, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->FindShape(arg2,arg3,arg4,arg5,arg6);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_int, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_FindFirstSensitiveShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int *arg4 = (int *) 0 ;
    int arg5 ;
    wxPyShape *result;
    int temp4 ;
    int res4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x1",(char *) "y",(char *) "op", NULL 
    };
    
    arg4 = &temp4; res4 = SWIG_NEWOBJ;
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PyShapeCanvas_FindFirstSensitiveShape",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg5 = (int)(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxPyShape *)(arg1)->FindFirstSensitiveShape(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxShapeEvtHandler(result, 0); 
    }
    resultobj = t_output_helper(resultobj, ((res4 == SWIG_NEWOBJ) ?
    SWIG_From_int((*arg4)) : SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_int, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_GetDiagram(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    wxDiagram *result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShapeCanvas_GetDiagram",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (wxDiagram *)(arg1)->GetDiagram();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = wxPyMake_wxObject(result, 0); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_GetQuickEditMode(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    char *kwnames[] = {
        (char *) "self", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PyShapeCanvas_GetQuickEditMode",kwnames,&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        result = (bool)(arg1)->GetQuickEditMode();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    {
        resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_InsertShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeCanvas_InsertShape",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->InsertShape(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnBeginDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShapeCanvas_base_OnBeginDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragLeft(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnBeginDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShapeCanvas_base_OnBeginDragRight",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnBeginDragRight(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnEndDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShapeCanvas_base_OnEndDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragLeft(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnEndDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShapeCanvas_base_OnEndDragRight",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnEndDragRight(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnDragLeft(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:PyShapeCanvas_base_OnDragLeft",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragLeft(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnDragRight(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    bool arg2 ;
    double arg3 ;
    double arg4 ;
    int arg5 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "draw",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:PyShapeCanvas_base_OnDragRight",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (bool)(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = (double)(SWIG_As_double(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    if (obj4) {
        {
            arg5 = (int)(SWIG_As_int(obj4)); 
            if (SWIG_arg_fail(5)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnDragRight(arg2,arg3,arg4,arg5);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnLeftClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShapeCanvas_base_OnLeftClick",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnLeftClick(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_base_OnRightClick(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double arg2 ;
    double arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "x",(char *) "y",(char *) "keys", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PyShapeCanvas_base_OnRightClick",kwnames,&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = (double)(SWIG_As_double(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = (double)(SWIG_As_double(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (obj3) {
        {
            arg4 = (int)(SWIG_As_int(obj3)); 
            if (SWIG_arg_fail(4)) SWIG_fail;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->base_OnRightClick(arg2,arg3,arg4);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_Redraw(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    wxDC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "dc", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeCanvas_Redraw",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDC, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("wxDC");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Redraw(*arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_RemoveShape(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    wxPyShape *arg2 = (wxPyShape *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "shape", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeCanvas_RemoveShape",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxPyShape, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->RemoveShape(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_SetDiagram(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    wxDiagram *arg2 = (wxDiagram *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "diagram", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyShapeCanvas_SetDiagram",kwnames,&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_wxDiagram, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->SetDiagram(arg2);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyShapeCanvas_Snap(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    wxPyShapeCanvas *arg1 = (wxPyShapeCanvas *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    double temp2 ;
    int res2 = 0 ;
    double temp3 ;
    int res3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    char *kwnames[] = {
        (char *) "self",(char *) "INOUT",(char *) "INOUT", NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PyShapeCanvas_Snap",kwnames,&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_wxPyShapeCanvas, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if (!(SWIG_ConvertPtr(obj1,(void **)(&arg2),SWIGTYPE_p_double,0) != -1)) {
            temp2 = SWIG_As_double(obj1);
            if (SWIG_arg_fail(2)) SWIG_fail;
            arg2 = &temp2;
            res2 = SWIG_NEWOBJ;
        }
    }
    {
        if (!(SWIG_ConvertPtr(obj2,(void **)(&arg3),SWIGTYPE_p_double,0) != -1)) {
            temp3 = SWIG_As_double(obj2);
            if (SWIG_arg_fail(3)) SWIG_fail;
            arg3 = &temp3;
            res3 = SWIG_NEWOBJ;
        }
    }
    {
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        (arg1)->Snap(arg2,arg3);
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    resultobj = t_output_helper(resultobj, ((res2 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg2)) : SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_double, 0)));
    resultobj = t_output_helper(resultobj, ((res3 == SWIG_NEWOBJ) ?
    SWIG_From_double((*arg3)) : SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_double, 0)));
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyShapeCanvas_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_wxPyShapeCanvas, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_OGLInitialize(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":OGLInitialize",kwnames)) goto fail;
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxOGLInitialize();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OGLCleanUp(PyObject *, PyObject *args, PyObject *kwargs) {
    PyObject *resultobj;
    char *kwnames[] = {
        NULL 
    };
    
    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)":OGLCleanUp",kwnames)) goto fail;
    {
        if (!wxPyCheckForApp()) SWIG_fail;
        PyThreadState* __tstate = wxPyBeginAllowThreads();
        wxOGLCleanUp();
        
        wxPyEndAllowThreads(__tstate);
        if (PyErr_Occurred()) SWIG_fail;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"new_ShapeRegion", (PyCFunction) _wrap_new_ShapeRegion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetText", (PyCFunction) _wrap_ShapeRegion_SetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetFont", (PyCFunction) _wrap_ShapeRegion_SetFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetMinSize", (PyCFunction) _wrap_ShapeRegion_SetMinSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetSize", (PyCFunction) _wrap_ShapeRegion_SetSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetPosition", (PyCFunction) _wrap_ShapeRegion_SetPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetProportions", (PyCFunction) _wrap_ShapeRegion_SetProportions, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetFormatMode", (PyCFunction) _wrap_ShapeRegion_SetFormatMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetName", (PyCFunction) _wrap_ShapeRegion_SetName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetColour", (PyCFunction) _wrap_ShapeRegion_SetColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetText", (PyCFunction) _wrap_ShapeRegion_GetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetFont", (PyCFunction) _wrap_ShapeRegion_GetFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetMinSize", (PyCFunction) _wrap_ShapeRegion_GetMinSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetProportion", (PyCFunction) _wrap_ShapeRegion_GetProportion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetSize", (PyCFunction) _wrap_ShapeRegion_GetSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetPosition", (PyCFunction) _wrap_ShapeRegion_GetPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetFormatMode", (PyCFunction) _wrap_ShapeRegion_GetFormatMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetName", (PyCFunction) _wrap_ShapeRegion_GetName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetColour", (PyCFunction) _wrap_ShapeRegion_GetColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetActualColourObject", (PyCFunction) _wrap_ShapeRegion_GetActualColourObject, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetFormattedText", (PyCFunction) _wrap_ShapeRegion_GetFormattedText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetPenColour", (PyCFunction) _wrap_ShapeRegion_GetPenColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetPenStyle", (PyCFunction) _wrap_ShapeRegion_GetPenStyle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetPenStyle", (PyCFunction) _wrap_ShapeRegion_SetPenStyle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_SetPenColour", (PyCFunction) _wrap_ShapeRegion_SetPenColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetActualPen", (PyCFunction) _wrap_ShapeRegion_GetActualPen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetWidth", (PyCFunction) _wrap_ShapeRegion_GetWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_GetHeight", (PyCFunction) _wrap_ShapeRegion_GetHeight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_ClearText", (PyCFunction) _wrap_ShapeRegion_ClearText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ShapeRegion_swigregister", ShapeRegion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AttachmentPoint", (PyCFunction) _wrap_new_AttachmentPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"AttachmentPoint_m_id_set", (PyCFunction) _wrap_AttachmentPoint_m_id_set, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"AttachmentPoint_m_id_get", (PyCFunction) _wrap_AttachmentPoint_m_id_get, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"AttachmentPoint_m_x_set", (PyCFunction) _wrap_AttachmentPoint_m_x_set, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"AttachmentPoint_m_x_get", (PyCFunction) _wrap_AttachmentPoint_m_x_get, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"AttachmentPoint_m_y_set", (PyCFunction) _wrap_AttachmentPoint_m_y_set, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"AttachmentPoint_m_y_get", (PyCFunction) _wrap_AttachmentPoint_m_y_get, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"AttachmentPoint_swigregister", AttachmentPoint_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyShapeEvtHandler", (PyCFunction) _wrap_new_PyShapeEvtHandler, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler__setCallbackInfo", (PyCFunction) _wrap_PyShapeEvtHandler__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler__setOORInfo", (PyCFunction) _wrap_PyShapeEvtHandler__setOORInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_SetShape", (PyCFunction) _wrap_PyShapeEvtHandler_SetShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_GetShape", (PyCFunction) _wrap_PyShapeEvtHandler_GetShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_SetPreviousHandler", (PyCFunction) _wrap_PyShapeEvtHandler_SetPreviousHandler, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_GetPreviousHandler", (PyCFunction) _wrap_PyShapeEvtHandler_GetPreviousHandler, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_CreateNewCopy", (PyCFunction) _wrap_PyShapeEvtHandler_CreateNewCopy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDelete", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDraw", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDrawContents", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDrawBranches", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnMoveLinks", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnErase", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnEraseContents", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnHighlight", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnLeftClick", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnRightClick", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnSize", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnMovePre", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnMovePost", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDragLeft", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnBeginDragLeft", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnEndDragLeft", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDragRight", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnBeginDragRight", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnEndDragRight", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDrawOutline", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnDrawControlPoints", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnEraseControlPoints", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnMoveLink", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnSizingDragLeft", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnBeginSize", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_base_OnEndSize", (PyCFunction) _wrap_PyShapeEvtHandler_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeEvtHandler_swigregister", PyShapeEvtHandler_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyShape", (PyCFunction) _wrap_new_PyShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape__setCallbackInfo", (PyCFunction) _wrap_PyShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBoundingBoxMax", (PyCFunction) _wrap_PyShape_GetBoundingBoxMax, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBoundingBoxMin", (PyCFunction) _wrap_PyShape_GetBoundingBoxMin, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetPerimeterPoint", (PyCFunction) _wrap_PyShape_GetPerimeterPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetCanvas", (PyCFunction) _wrap_PyShape_GetCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetCanvas", (PyCFunction) _wrap_PyShape_SetCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AddToCanvas", (PyCFunction) _wrap_PyShape_AddToCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_InsertInCanvas", (PyCFunction) _wrap_PyShape_InsertInCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_RemoveFromCanvas", (PyCFunction) _wrap_PyShape_RemoveFromCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetX", (PyCFunction) _wrap_PyShape_GetX, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetY", (PyCFunction) _wrap_PyShape_GetY, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetX", (PyCFunction) _wrap_PyShape_SetX, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetY", (PyCFunction) _wrap_PyShape_SetY, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetParent", (PyCFunction) _wrap_PyShape_GetParent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetParent", (PyCFunction) _wrap_PyShape_SetParent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetTopAncestor", (PyCFunction) _wrap_PyShape_GetTopAncestor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetChildren", (PyCFunction) _wrap_PyShape_GetChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Unlink", (PyCFunction) _wrap_PyShape_Unlink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetDrawHandles", (PyCFunction) _wrap_PyShape_SetDrawHandles, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetDrawHandles", (PyCFunction) _wrap_PyShape_GetDrawHandles, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_MakeControlPoints", (PyCFunction) _wrap_PyShape_MakeControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_DeleteControlPoints", (PyCFunction) _wrap_PyShape_DeleteControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_ResetControlPoints", (PyCFunction) _wrap_PyShape_ResetControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetEventHandler", (PyCFunction) _wrap_PyShape_GetEventHandler, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetEventHandler", (PyCFunction) _wrap_PyShape_SetEventHandler, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_MakeMandatoryControlPoints", (PyCFunction) _wrap_PyShape_MakeMandatoryControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_ResetMandatoryControlPoints", (PyCFunction) _wrap_PyShape_ResetMandatoryControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Recompute", (PyCFunction) _wrap_PyShape_Recompute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_CalculateSize", (PyCFunction) _wrap_PyShape_CalculateSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Select", (PyCFunction) _wrap_PyShape_Select, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetHighlight", (PyCFunction) _wrap_PyShape_SetHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_IsHighlighted", (PyCFunction) _wrap_PyShape_IsHighlighted, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Selected", (PyCFunction) _wrap_PyShape_Selected, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AncestorSelected", (PyCFunction) _wrap_PyShape_AncestorSelected, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetSensitivityFilter", (PyCFunction) _wrap_PyShape_SetSensitivityFilter, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetSensitivityFilter", (PyCFunction) _wrap_PyShape_GetSensitivityFilter, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetDraggable", (PyCFunction) _wrap_PyShape_SetDraggable, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetFixedSize", (PyCFunction) _wrap_PyShape_SetFixedSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetFixedSize", (PyCFunction) _wrap_PyShape_GetFixedSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetFixedWidth", (PyCFunction) _wrap_PyShape_GetFixedWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetFixedHeight", (PyCFunction) _wrap_PyShape_GetFixedHeight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetSpaceAttachments", (PyCFunction) _wrap_PyShape_SetSpaceAttachments, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetSpaceAttachments", (PyCFunction) _wrap_PyShape_GetSpaceAttachments, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetShadowMode", (PyCFunction) _wrap_PyShape_SetShadowMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetShadowMode", (PyCFunction) _wrap_PyShape_GetShadowMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_HitTest", (PyCFunction) _wrap_PyShape_HitTest, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetCentreResize", (PyCFunction) _wrap_PyShape_SetCentreResize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetCentreResize", (PyCFunction) _wrap_PyShape_GetCentreResize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetMaintainAspectRatio", (PyCFunction) _wrap_PyShape_SetMaintainAspectRatio, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetMaintainAspectRatio", (PyCFunction) _wrap_PyShape_GetMaintainAspectRatio, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetLines", (PyCFunction) _wrap_PyShape_GetLines, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetDisableLabel", (PyCFunction) _wrap_PyShape_SetDisableLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetDisableLabel", (PyCFunction) _wrap_PyShape_GetDisableLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetAttachmentMode", (PyCFunction) _wrap_PyShape_SetAttachmentMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetAttachmentMode", (PyCFunction) _wrap_PyShape_GetAttachmentMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetId", (PyCFunction) _wrap_PyShape_SetId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetId", (PyCFunction) _wrap_PyShape_GetId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetPen", (PyCFunction) _wrap_PyShape_SetPen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetBrush", (PyCFunction) _wrap_PyShape_SetBrush, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Show", (PyCFunction) _wrap_PyShape_Show, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_IsShown", (PyCFunction) _wrap_PyShape_IsShown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Move", (PyCFunction) _wrap_PyShape_Move, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Erase", (PyCFunction) _wrap_PyShape_Erase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_EraseContents", (PyCFunction) _wrap_PyShape_EraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Draw", (PyCFunction) _wrap_PyShape_Draw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Flash", (PyCFunction) _wrap_PyShape_Flash, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_MoveLinks", (PyCFunction) _wrap_PyShape_MoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_DrawContents", (PyCFunction) _wrap_PyShape_DrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetSize", (PyCFunction) _wrap_PyShape_SetSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetAttachmentSize", (PyCFunction) _wrap_PyShape_SetAttachmentSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Attach", (PyCFunction) _wrap_PyShape_Attach, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Detach", (PyCFunction) _wrap_PyShape_Detach, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Constrain", (PyCFunction) _wrap_PyShape_Constrain, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AddLine", (PyCFunction) _wrap_PyShape_AddLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetLinePosition", (PyCFunction) _wrap_PyShape_GetLinePosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AddText", (PyCFunction) _wrap_PyShape_AddText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetPen", (PyCFunction) _wrap_PyShape_GetPen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBrush", (PyCFunction) _wrap_PyShape_GetBrush, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetDefaultRegionSize", (PyCFunction) _wrap_PyShape_SetDefaultRegionSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_FormatText", (PyCFunction) _wrap_PyShape_FormatText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetFormatMode", (PyCFunction) _wrap_PyShape_SetFormatMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetFormatMode", (PyCFunction) _wrap_PyShape_GetFormatMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetFont", (PyCFunction) _wrap_PyShape_SetFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetFont", (PyCFunction) _wrap_PyShape_GetFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetTextColour", (PyCFunction) _wrap_PyShape_SetTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetTextColour", (PyCFunction) _wrap_PyShape_GetTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetNumberOfTextRegions", (PyCFunction) _wrap_PyShape_GetNumberOfTextRegions, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetRegionName", (PyCFunction) _wrap_PyShape_SetRegionName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetRegionName", (PyCFunction) _wrap_PyShape_GetRegionName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetRegionId", (PyCFunction) _wrap_PyShape_GetRegionId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_NameRegions", (PyCFunction) _wrap_PyShape_NameRegions, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetRegions", (PyCFunction) _wrap_PyShape_GetRegions, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AddRegion", (PyCFunction) _wrap_PyShape_AddRegion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_ClearRegions", (PyCFunction) _wrap_PyShape_ClearRegions, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AssignNewIds", (PyCFunction) _wrap_PyShape_AssignNewIds, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_FindRegion", (PyCFunction) _wrap_PyShape_FindRegion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_FindRegionNames", (PyCFunction) _wrap_PyShape_FindRegionNames, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_ClearText", (PyCFunction) _wrap_PyShape_ClearText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_RemoveLine", (PyCFunction) _wrap_PyShape_RemoveLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetAttachmentPosition", (PyCFunction) _wrap_PyShape_GetAttachmentPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetNumberOfAttachments", (PyCFunction) _wrap_PyShape_GetNumberOfAttachments, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AttachmentIsValid", (PyCFunction) _wrap_PyShape_AttachmentIsValid, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetAttachments", (PyCFunction) _wrap_PyShape_GetAttachments, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetAttachmentPositionEdge", (PyCFunction) _wrap_PyShape_GetAttachmentPositionEdge, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_CalcSimpleAttachment", (PyCFunction) _wrap_PyShape_CalcSimpleAttachment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_AttachmentSortTest", (PyCFunction) _wrap_PyShape_AttachmentSortTest, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_EraseLinks", (PyCFunction) _wrap_PyShape_EraseLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_DrawLinks", (PyCFunction) _wrap_PyShape_DrawLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_MoveLineToNewAttachment", (PyCFunction) _wrap_PyShape_MoveLineToNewAttachment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_ApplyAttachmentOrdering", (PyCFunction) _wrap_PyShape_ApplyAttachmentOrdering, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBranchingAttachmentRoot", (PyCFunction) _wrap_PyShape_GetBranchingAttachmentRoot, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBranchingAttachmentInfo", (PyCFunction) _wrap_PyShape_GetBranchingAttachmentInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBranchingAttachmentPoint", (PyCFunction) _wrap_PyShape_GetBranchingAttachmentPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetAttachmentLineCount", (PyCFunction) _wrap_PyShape_GetAttachmentLineCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetBranchNeckLength", (PyCFunction) _wrap_PyShape_SetBranchNeckLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBranchNeckLength", (PyCFunction) _wrap_PyShape_GetBranchNeckLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetBranchStemLength", (PyCFunction) _wrap_PyShape_SetBranchStemLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBranchStemLength", (PyCFunction) _wrap_PyShape_GetBranchStemLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetBranchSpacing", (PyCFunction) _wrap_PyShape_SetBranchSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBranchSpacing", (PyCFunction) _wrap_PyShape_GetBranchSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetBranchStyle", (PyCFunction) _wrap_PyShape_SetBranchStyle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBranchStyle", (PyCFunction) _wrap_PyShape_GetBranchStyle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_PhysicalToLogicalAttachment", (PyCFunction) _wrap_PyShape_PhysicalToLogicalAttachment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_LogicalToPhysicalAttachment", (PyCFunction) _wrap_PyShape_LogicalToPhysicalAttachment, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Draggable", (PyCFunction) _wrap_PyShape_Draggable, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_HasDescendant", (PyCFunction) _wrap_PyShape_HasDescendant, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_CreateNewCopy", (PyCFunction) _wrap_PyShape_CreateNewCopy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Copy", (PyCFunction) _wrap_PyShape_Copy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_CopyWithHandler", (PyCFunction) _wrap_PyShape_CopyWithHandler, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Rotate", (PyCFunction) _wrap_PyShape_Rotate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetRotation", (PyCFunction) _wrap_PyShape_GetRotation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_SetRotation", (PyCFunction) _wrap_PyShape_SetRotation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_ClearAttachments", (PyCFunction) _wrap_PyShape_ClearAttachments, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_Recentre", (PyCFunction) _wrap_PyShape_Recentre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_ClearPointList", (PyCFunction) _wrap_PyShape_ClearPointList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBackgroundPen", (PyCFunction) _wrap_PyShape_GetBackgroundPen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_GetBackgroundBrush", (PyCFunction) _wrap_PyShape_GetBackgroundBrush, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDelete", (PyCFunction) _wrap_PyShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDraw", (PyCFunction) _wrap_PyShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDrawContents", (PyCFunction) _wrap_PyShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDrawBranches", (PyCFunction) _wrap_PyShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnMoveLinks", (PyCFunction) _wrap_PyShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnErase", (PyCFunction) _wrap_PyShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnEraseContents", (PyCFunction) _wrap_PyShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnHighlight", (PyCFunction) _wrap_PyShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnLeftClick", (PyCFunction) _wrap_PyShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnRightClick", (PyCFunction) _wrap_PyShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnSize", (PyCFunction) _wrap_PyShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnMovePre", (PyCFunction) _wrap_PyShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnMovePost", (PyCFunction) _wrap_PyShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDragLeft", (PyCFunction) _wrap_PyShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDragRight", (PyCFunction) _wrap_PyShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnEndDragRight", (PyCFunction) _wrap_PyShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDrawOutline", (PyCFunction) _wrap_PyShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnMoveLink", (PyCFunction) _wrap_PyShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnBeginSize", (PyCFunction) _wrap_PyShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_base_OnEndSize", (PyCFunction) _wrap_PyShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShape_swigregister", PyShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PseudoMetaFile", (PyCFunction) _wrap_new_PseudoMetaFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_PseudoMetaFile", (PyCFunction) _wrap_delete_PseudoMetaFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_Draw", (PyCFunction) _wrap_PseudoMetaFile_Draw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_Clear", (PyCFunction) _wrap_PseudoMetaFile_Clear, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_Copy", (PyCFunction) _wrap_PseudoMetaFile_Copy, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_Scale", (PyCFunction) _wrap_PseudoMetaFile_Scale, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_ScaleTo", (PyCFunction) _wrap_PseudoMetaFile_ScaleTo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_Translate", (PyCFunction) _wrap_PseudoMetaFile_Translate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_Rotate", (PyCFunction) _wrap_PseudoMetaFile_Rotate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_LoadFromMetaFile", (PyCFunction) _wrap_PseudoMetaFile_LoadFromMetaFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_GetBounds", (PyCFunction) _wrap_PseudoMetaFile_GetBounds, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_CalculateSize", (PyCFunction) _wrap_PseudoMetaFile_CalculateSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetRotateable", (PyCFunction) _wrap_PseudoMetaFile_SetRotateable, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_GetRotateable", (PyCFunction) _wrap_PseudoMetaFile_GetRotateable, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetSize", (PyCFunction) _wrap_PseudoMetaFile_SetSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetFillBrush", (PyCFunction) _wrap_PseudoMetaFile_SetFillBrush, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_GetFillBrush", (PyCFunction) _wrap_PseudoMetaFile_GetFillBrush, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetOutlinePen", (PyCFunction) _wrap_PseudoMetaFile_SetOutlinePen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_GetOutlinePen", (PyCFunction) _wrap_PseudoMetaFile_GetOutlinePen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetOutlineOp", (PyCFunction) _wrap_PseudoMetaFile_SetOutlineOp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_GetOutlineOp", (PyCFunction) _wrap_PseudoMetaFile_GetOutlineOp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_IsValid", (PyCFunction) _wrap_PseudoMetaFile_IsValid, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawLine", (PyCFunction) _wrap_PseudoMetaFile_DrawLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawRectangle", (PyCFunction) _wrap_PseudoMetaFile_DrawRectangle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawRoundedRectangle", (PyCFunction) _wrap_PseudoMetaFile_DrawRoundedRectangle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawArc", (PyCFunction) _wrap_PseudoMetaFile_DrawArc, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawEllipticArc", (PyCFunction) _wrap_PseudoMetaFile_DrawEllipticArc, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawEllipse", (PyCFunction) _wrap_PseudoMetaFile_DrawEllipse, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawPoint", (PyCFunction) _wrap_PseudoMetaFile_DrawPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawText", (PyCFunction) _wrap_PseudoMetaFile_DrawText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawLines", (PyCFunction) _wrap_PseudoMetaFile_DrawLines, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawPolygon", (PyCFunction) _wrap_PseudoMetaFile_DrawPolygon, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DrawSpline", (PyCFunction) _wrap_PseudoMetaFile_DrawSpline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetClippingRect", (PyCFunction) _wrap_PseudoMetaFile_SetClippingRect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_DestroyClippingRect", (PyCFunction) _wrap_PseudoMetaFile_DestroyClippingRect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetPen", (PyCFunction) _wrap_PseudoMetaFile_SetPen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetBrush", (PyCFunction) _wrap_PseudoMetaFile_SetBrush, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetFont", (PyCFunction) _wrap_PseudoMetaFile_SetFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetTextColour", (PyCFunction) _wrap_PseudoMetaFile_SetTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetBackgroundColour", (PyCFunction) _wrap_PseudoMetaFile_SetBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_SetBackgroundMode", (PyCFunction) _wrap_PseudoMetaFile_SetBackgroundMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PseudoMetaFile_swigregister", PseudoMetaFile_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyRectangleShape", (PyCFunction) _wrap_new_PyRectangleShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape__setCallbackInfo", (PyCFunction) _wrap_PyRectangleShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_SetCornerRadius", (PyCFunction) _wrap_PyRectangleShape_SetCornerRadius, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_GetCornerRadius", (PyCFunction) _wrap_PyRectangleShape_GetCornerRadius, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDelete", (PyCFunction) _wrap_PyRectangleShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDraw", (PyCFunction) _wrap_PyRectangleShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDrawContents", (PyCFunction) _wrap_PyRectangleShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDrawBranches", (PyCFunction) _wrap_PyRectangleShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnMoveLinks", (PyCFunction) _wrap_PyRectangleShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnErase", (PyCFunction) _wrap_PyRectangleShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnEraseContents", (PyCFunction) _wrap_PyRectangleShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnHighlight", (PyCFunction) _wrap_PyRectangleShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnLeftClick", (PyCFunction) _wrap_PyRectangleShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyRectangleShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnRightClick", (PyCFunction) _wrap_PyRectangleShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnSize", (PyCFunction) _wrap_PyRectangleShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnMovePre", (PyCFunction) _wrap_PyRectangleShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnMovePost", (PyCFunction) _wrap_PyRectangleShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDragLeft", (PyCFunction) _wrap_PyRectangleShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyRectangleShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyRectangleShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDragRight", (PyCFunction) _wrap_PyRectangleShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyRectangleShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnEndDragRight", (PyCFunction) _wrap_PyRectangleShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDrawOutline", (PyCFunction) _wrap_PyRectangleShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyRectangleShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyRectangleShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnMoveLink", (PyCFunction) _wrap_PyRectangleShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyRectangleShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyRectangleShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyRectangleShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnBeginSize", (PyCFunction) _wrap_PyRectangleShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_base_OnEndSize", (PyCFunction) _wrap_PyRectangleShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyRectangleShape_swigregister", PyRectangleShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyControlPoint", (PyCFunction) _wrap_new_PyControlPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint__setCallbackInfo", (PyCFunction) _wrap_PyControlPoint__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_SetCornerRadius", (PyCFunction) _wrap_PyControlPoint_SetCornerRadius, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDelete", (PyCFunction) _wrap_PyControlPoint_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDraw", (PyCFunction) _wrap_PyControlPoint_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDrawContents", (PyCFunction) _wrap_PyControlPoint_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDrawBranches", (PyCFunction) _wrap_PyControlPoint_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnMoveLinks", (PyCFunction) _wrap_PyControlPoint_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnErase", (PyCFunction) _wrap_PyControlPoint_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnEraseContents", (PyCFunction) _wrap_PyControlPoint_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnHighlight", (PyCFunction) _wrap_PyControlPoint_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnLeftClick", (PyCFunction) _wrap_PyControlPoint_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyControlPoint_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnRightClick", (PyCFunction) _wrap_PyControlPoint_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnSize", (PyCFunction) _wrap_PyControlPoint_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnMovePre", (PyCFunction) _wrap_PyControlPoint_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnMovePost", (PyCFunction) _wrap_PyControlPoint_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDragLeft", (PyCFunction) _wrap_PyControlPoint_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnBeginDragLeft", (PyCFunction) _wrap_PyControlPoint_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnEndDragLeft", (PyCFunction) _wrap_PyControlPoint_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDragRight", (PyCFunction) _wrap_PyControlPoint_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnBeginDragRight", (PyCFunction) _wrap_PyControlPoint_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnEndDragRight", (PyCFunction) _wrap_PyControlPoint_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDrawOutline", (PyCFunction) _wrap_PyControlPoint_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnDrawControlPoints", (PyCFunction) _wrap_PyControlPoint_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnEraseControlPoints", (PyCFunction) _wrap_PyControlPoint_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnMoveLink", (PyCFunction) _wrap_PyControlPoint_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnSizingDragLeft", (PyCFunction) _wrap_PyControlPoint_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyControlPoint_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyControlPoint_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnBeginSize", (PyCFunction) _wrap_PyControlPoint_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_base_OnEndSize", (PyCFunction) _wrap_PyControlPoint_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyControlPoint_swigregister", PyControlPoint_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyBitmapShape", (PyCFunction) _wrap_new_PyBitmapShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape__setCallbackInfo", (PyCFunction) _wrap_PyBitmapShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_GetBitmap", (PyCFunction) _wrap_PyBitmapShape_GetBitmap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_GetFilename", (PyCFunction) _wrap_PyBitmapShape_GetFilename, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_SetBitmap", (PyCFunction) _wrap_PyBitmapShape_SetBitmap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_SetFilename", (PyCFunction) _wrap_PyBitmapShape_SetFilename, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDelete", (PyCFunction) _wrap_PyBitmapShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDraw", (PyCFunction) _wrap_PyBitmapShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDrawContents", (PyCFunction) _wrap_PyBitmapShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDrawBranches", (PyCFunction) _wrap_PyBitmapShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnMoveLinks", (PyCFunction) _wrap_PyBitmapShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnErase", (PyCFunction) _wrap_PyBitmapShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnEraseContents", (PyCFunction) _wrap_PyBitmapShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnHighlight", (PyCFunction) _wrap_PyBitmapShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnLeftClick", (PyCFunction) _wrap_PyBitmapShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyBitmapShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnRightClick", (PyCFunction) _wrap_PyBitmapShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnSize", (PyCFunction) _wrap_PyBitmapShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnMovePre", (PyCFunction) _wrap_PyBitmapShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnMovePost", (PyCFunction) _wrap_PyBitmapShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDragLeft", (PyCFunction) _wrap_PyBitmapShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyBitmapShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyBitmapShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDragRight", (PyCFunction) _wrap_PyBitmapShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyBitmapShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnEndDragRight", (PyCFunction) _wrap_PyBitmapShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDrawOutline", (PyCFunction) _wrap_PyBitmapShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyBitmapShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyBitmapShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnMoveLink", (PyCFunction) _wrap_PyBitmapShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyBitmapShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyBitmapShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyBitmapShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnBeginSize", (PyCFunction) _wrap_PyBitmapShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_base_OnEndSize", (PyCFunction) _wrap_PyBitmapShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyBitmapShape_swigregister", PyBitmapShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyDrawnShape", (PyCFunction) _wrap_new_PyDrawnShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape__setCallbackInfo", (PyCFunction) _wrap_PyDrawnShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_CalculateSize", (PyCFunction) _wrap_PyDrawnShape_CalculateSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DestroyClippingRect", (PyCFunction) _wrap_PyDrawnShape_DestroyClippingRect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawArc", (PyCFunction) _wrap_PyDrawnShape_DrawArc, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawAtAngle", (PyCFunction) _wrap_PyDrawnShape_DrawAtAngle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawEllipticArc", (PyCFunction) _wrap_PyDrawnShape_DrawEllipticArc, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawLine", (PyCFunction) _wrap_PyDrawnShape_DrawLine, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawLines", (PyCFunction) _wrap_PyDrawnShape_DrawLines, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawPoint", (PyCFunction) _wrap_PyDrawnShape_DrawPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawPolygon", (PyCFunction) _wrap_PyDrawnShape_DrawPolygon, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawRectangle", (PyCFunction) _wrap_PyDrawnShape_DrawRectangle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawRoundedRectangle", (PyCFunction) _wrap_PyDrawnShape_DrawRoundedRectangle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawSpline", (PyCFunction) _wrap_PyDrawnShape_DrawSpline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_DrawText", (PyCFunction) _wrap_PyDrawnShape_DrawText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_GetAngle", (PyCFunction) _wrap_PyDrawnShape_GetAngle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_GetMetaFile", (PyCFunction) _wrap_PyDrawnShape_GetMetaFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_GetRotation", (PyCFunction) _wrap_PyDrawnShape_GetRotation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_LoadFromMetaFile", (PyCFunction) _wrap_PyDrawnShape_LoadFromMetaFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_Rotate", (PyCFunction) _wrap_PyDrawnShape_Rotate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetClippingRect", (PyCFunction) _wrap_PyDrawnShape_SetClippingRect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetDrawnBackgroundColour", (PyCFunction) _wrap_PyDrawnShape_SetDrawnBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetDrawnBackgroundMode", (PyCFunction) _wrap_PyDrawnShape_SetDrawnBackgroundMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetDrawnBrush", (PyCFunction) _wrap_PyDrawnShape_SetDrawnBrush, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetDrawnFont", (PyCFunction) _wrap_PyDrawnShape_SetDrawnFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetDrawnPen", (PyCFunction) _wrap_PyDrawnShape_SetDrawnPen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetDrawnTextColour", (PyCFunction) _wrap_PyDrawnShape_SetDrawnTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_Scale", (PyCFunction) _wrap_PyDrawnShape_Scale, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_SetSaveToFile", (PyCFunction) _wrap_PyDrawnShape_SetSaveToFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_Translate", (PyCFunction) _wrap_PyDrawnShape_Translate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDelete", (PyCFunction) _wrap_PyDrawnShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDraw", (PyCFunction) _wrap_PyDrawnShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDrawContents", (PyCFunction) _wrap_PyDrawnShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDrawBranches", (PyCFunction) _wrap_PyDrawnShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnMoveLinks", (PyCFunction) _wrap_PyDrawnShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnErase", (PyCFunction) _wrap_PyDrawnShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnEraseContents", (PyCFunction) _wrap_PyDrawnShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnHighlight", (PyCFunction) _wrap_PyDrawnShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnLeftClick", (PyCFunction) _wrap_PyDrawnShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyDrawnShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnRightClick", (PyCFunction) _wrap_PyDrawnShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnSize", (PyCFunction) _wrap_PyDrawnShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnMovePre", (PyCFunction) _wrap_PyDrawnShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnMovePost", (PyCFunction) _wrap_PyDrawnShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDragLeft", (PyCFunction) _wrap_PyDrawnShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyDrawnShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyDrawnShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDragRight", (PyCFunction) _wrap_PyDrawnShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyDrawnShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnEndDragRight", (PyCFunction) _wrap_PyDrawnShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDrawOutline", (PyCFunction) _wrap_PyDrawnShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyDrawnShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyDrawnShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnMoveLink", (PyCFunction) _wrap_PyDrawnShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyDrawnShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyDrawnShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyDrawnShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnBeginSize", (PyCFunction) _wrap_PyDrawnShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_base_OnEndSize", (PyCFunction) _wrap_PyDrawnShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDrawnShape_swigregister", PyDrawnShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_OGLConstraint", (PyCFunction) _wrap_new_OGLConstraint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"OGLConstraint_Evaluate", (PyCFunction) _wrap_OGLConstraint_Evaluate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"OGLConstraint_SetSpacing", (PyCFunction) _wrap_OGLConstraint_SetSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"OGLConstraint_Equals", (PyCFunction) _wrap_OGLConstraint_Equals, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"OGLConstraint_swigregister", OGLConstraint_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyCompositeShape", (PyCFunction) _wrap_new_PyCompositeShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape__setCallbackInfo", (PyCFunction) _wrap_PyCompositeShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_AddChild", (PyCFunction) _wrap_PyCompositeShape_AddChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_AddConstraint", (PyCFunction) _wrap_PyCompositeShape_AddConstraint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_AddConstrainedShapes", (PyCFunction) _wrap_PyCompositeShape_AddConstrainedShapes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_AddSimpleConstraint", (PyCFunction) _wrap_PyCompositeShape_AddSimpleConstraint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_CalculateSize", (PyCFunction) _wrap_PyCompositeShape_CalculateSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_ContainsDivision", (PyCFunction) _wrap_PyCompositeShape_ContainsDivision, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_DeleteConstraint", (PyCFunction) _wrap_PyCompositeShape_DeleteConstraint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_DeleteConstraintsInvolvingChild", (PyCFunction) _wrap_PyCompositeShape_DeleteConstraintsInvolvingChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_FindContainerImage", (PyCFunction) _wrap_PyCompositeShape_FindContainerImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_GetConstraints", (PyCFunction) _wrap_PyCompositeShape_GetConstraints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_GetDivisions", (PyCFunction) _wrap_PyCompositeShape_GetDivisions, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_MakeContainer", (PyCFunction) _wrap_PyCompositeShape_MakeContainer, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_Recompute", (PyCFunction) _wrap_PyCompositeShape_Recompute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_RemoveChild", (PyCFunction) _wrap_PyCompositeShape_RemoveChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDelete", (PyCFunction) _wrap_PyCompositeShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDraw", (PyCFunction) _wrap_PyCompositeShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDrawContents", (PyCFunction) _wrap_PyCompositeShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDrawBranches", (PyCFunction) _wrap_PyCompositeShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnMoveLinks", (PyCFunction) _wrap_PyCompositeShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnErase", (PyCFunction) _wrap_PyCompositeShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnEraseContents", (PyCFunction) _wrap_PyCompositeShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnHighlight", (PyCFunction) _wrap_PyCompositeShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnLeftClick", (PyCFunction) _wrap_PyCompositeShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyCompositeShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnRightClick", (PyCFunction) _wrap_PyCompositeShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnSize", (PyCFunction) _wrap_PyCompositeShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnMovePre", (PyCFunction) _wrap_PyCompositeShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnMovePost", (PyCFunction) _wrap_PyCompositeShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDragLeft", (PyCFunction) _wrap_PyCompositeShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyCompositeShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyCompositeShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDragRight", (PyCFunction) _wrap_PyCompositeShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyCompositeShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnEndDragRight", (PyCFunction) _wrap_PyCompositeShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDrawOutline", (PyCFunction) _wrap_PyCompositeShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyCompositeShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyCompositeShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnMoveLink", (PyCFunction) _wrap_PyCompositeShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyCompositeShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyCompositeShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyCompositeShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnBeginSize", (PyCFunction) _wrap_PyCompositeShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_base_OnEndSize", (PyCFunction) _wrap_PyCompositeShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCompositeShape_swigregister", PyCompositeShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyDividedShape", (PyCFunction) _wrap_new_PyDividedShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape__setCallbackInfo", (PyCFunction) _wrap_PyDividedShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_EditRegions", (PyCFunction) _wrap_PyDividedShape_EditRegions, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_SetRegionSizes", (PyCFunction) _wrap_PyDividedShape_SetRegionSizes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDelete", (PyCFunction) _wrap_PyDividedShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDraw", (PyCFunction) _wrap_PyDividedShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDrawContents", (PyCFunction) _wrap_PyDividedShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDrawBranches", (PyCFunction) _wrap_PyDividedShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnMoveLinks", (PyCFunction) _wrap_PyDividedShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnErase", (PyCFunction) _wrap_PyDividedShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnEraseContents", (PyCFunction) _wrap_PyDividedShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnHighlight", (PyCFunction) _wrap_PyDividedShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnLeftClick", (PyCFunction) _wrap_PyDividedShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyDividedShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnRightClick", (PyCFunction) _wrap_PyDividedShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnSize", (PyCFunction) _wrap_PyDividedShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnMovePre", (PyCFunction) _wrap_PyDividedShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnMovePost", (PyCFunction) _wrap_PyDividedShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDragLeft", (PyCFunction) _wrap_PyDividedShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyDividedShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyDividedShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDragRight", (PyCFunction) _wrap_PyDividedShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyDividedShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnEndDragRight", (PyCFunction) _wrap_PyDividedShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDrawOutline", (PyCFunction) _wrap_PyDividedShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyDividedShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyDividedShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnMoveLink", (PyCFunction) _wrap_PyDividedShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyDividedShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyDividedShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyDividedShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnBeginSize", (PyCFunction) _wrap_PyDividedShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_base_OnEndSize", (PyCFunction) _wrap_PyDividedShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDividedShape_swigregister", PyDividedShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyDivisionShape", (PyCFunction) _wrap_new_PyDivisionShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape__setCallbackInfo", (PyCFunction) _wrap_PyDivisionShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_AdjustBottom", (PyCFunction) _wrap_PyDivisionShape_AdjustBottom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_AdjustLeft", (PyCFunction) _wrap_PyDivisionShape_AdjustLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_AdjustRight", (PyCFunction) _wrap_PyDivisionShape_AdjustRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_AdjustTop", (PyCFunction) _wrap_PyDivisionShape_AdjustTop, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_Divide", (PyCFunction) _wrap_PyDivisionShape_Divide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_EditEdge", (PyCFunction) _wrap_PyDivisionShape_EditEdge, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetBottomSide", (PyCFunction) _wrap_PyDivisionShape_GetBottomSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetHandleSide", (PyCFunction) _wrap_PyDivisionShape_GetHandleSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetLeftSide", (PyCFunction) _wrap_PyDivisionShape_GetLeftSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetLeftSideColour", (PyCFunction) _wrap_PyDivisionShape_GetLeftSideColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetLeftSidePen", (PyCFunction) _wrap_PyDivisionShape_GetLeftSidePen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetRightSide", (PyCFunction) _wrap_PyDivisionShape_GetRightSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetTopSide", (PyCFunction) _wrap_PyDivisionShape_GetTopSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_GetTopSidePen", (PyCFunction) _wrap_PyDivisionShape_GetTopSidePen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_ResizeAdjoining", (PyCFunction) _wrap_PyDivisionShape_ResizeAdjoining, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_PopupMenu", (PyCFunction) _wrap_PyDivisionShape_PopupMenu, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetBottomSide", (PyCFunction) _wrap_PyDivisionShape_SetBottomSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetHandleSide", (PyCFunction) _wrap_PyDivisionShape_SetHandleSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetLeftSide", (PyCFunction) _wrap_PyDivisionShape_SetLeftSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetLeftSideColour", (PyCFunction) _wrap_PyDivisionShape_SetLeftSideColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetLeftSidePen", (PyCFunction) _wrap_PyDivisionShape_SetLeftSidePen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetRightSide", (PyCFunction) _wrap_PyDivisionShape_SetRightSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetTopSide", (PyCFunction) _wrap_PyDivisionShape_SetTopSide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetTopSideColour", (PyCFunction) _wrap_PyDivisionShape_SetTopSideColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_SetTopSidePen", (PyCFunction) _wrap_PyDivisionShape_SetTopSidePen, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDelete", (PyCFunction) _wrap_PyDivisionShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDraw", (PyCFunction) _wrap_PyDivisionShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDrawContents", (PyCFunction) _wrap_PyDivisionShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDrawBranches", (PyCFunction) _wrap_PyDivisionShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnMoveLinks", (PyCFunction) _wrap_PyDivisionShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnErase", (PyCFunction) _wrap_PyDivisionShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnEraseContents", (PyCFunction) _wrap_PyDivisionShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnHighlight", (PyCFunction) _wrap_PyDivisionShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnLeftClick", (PyCFunction) _wrap_PyDivisionShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyDivisionShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnRightClick", (PyCFunction) _wrap_PyDivisionShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnSize", (PyCFunction) _wrap_PyDivisionShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnMovePre", (PyCFunction) _wrap_PyDivisionShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnMovePost", (PyCFunction) _wrap_PyDivisionShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDragLeft", (PyCFunction) _wrap_PyDivisionShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyDivisionShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyDivisionShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDragRight", (PyCFunction) _wrap_PyDivisionShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyDivisionShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnEndDragRight", (PyCFunction) _wrap_PyDivisionShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDrawOutline", (PyCFunction) _wrap_PyDivisionShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyDivisionShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyDivisionShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnMoveLink", (PyCFunction) _wrap_PyDivisionShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyDivisionShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyDivisionShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyDivisionShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnBeginSize", (PyCFunction) _wrap_PyDivisionShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_base_OnEndSize", (PyCFunction) _wrap_PyDivisionShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyDivisionShape_swigregister", PyDivisionShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyEllipseShape", (PyCFunction) _wrap_new_PyEllipseShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape__setCallbackInfo", (PyCFunction) _wrap_PyEllipseShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnDraw", (PyCFunction) _wrap_PyEllipseShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnDrawContents", (PyCFunction) _wrap_PyEllipseShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnDrawBranches", (PyCFunction) _wrap_PyEllipseShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnMoveLinks", (PyCFunction) _wrap_PyEllipseShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnErase", (PyCFunction) _wrap_PyEllipseShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnEraseContents", (PyCFunction) _wrap_PyEllipseShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnHighlight", (PyCFunction) _wrap_PyEllipseShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnLeftClick", (PyCFunction) _wrap_PyEllipseShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyEllipseShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnRightClick", (PyCFunction) _wrap_PyEllipseShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnSize", (PyCFunction) _wrap_PyEllipseShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnMovePre", (PyCFunction) _wrap_PyEllipseShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnMovePost", (PyCFunction) _wrap_PyEllipseShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnDragLeft", (PyCFunction) _wrap_PyEllipseShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyEllipseShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyEllipseShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnDragRight", (PyCFunction) _wrap_PyEllipseShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyEllipseShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnEndDragRight", (PyCFunction) _wrap_PyEllipseShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnDrawOutline", (PyCFunction) _wrap_PyEllipseShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyEllipseShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyEllipseShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnMoveLink", (PyCFunction) _wrap_PyEllipseShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyEllipseShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyEllipseShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyEllipseShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnBeginSize", (PyCFunction) _wrap_PyEllipseShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_base_OnEndSize", (PyCFunction) _wrap_PyEllipseShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEllipseShape_swigregister", PyEllipseShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyCircleShape", (PyCFunction) _wrap_new_PyCircleShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape__setCallbackInfo", (PyCFunction) _wrap_PyCircleShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnDraw", (PyCFunction) _wrap_PyCircleShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnDrawContents", (PyCFunction) _wrap_PyCircleShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnDrawBranches", (PyCFunction) _wrap_PyCircleShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnMoveLinks", (PyCFunction) _wrap_PyCircleShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnErase", (PyCFunction) _wrap_PyCircleShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnEraseContents", (PyCFunction) _wrap_PyCircleShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnHighlight", (PyCFunction) _wrap_PyCircleShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnLeftClick", (PyCFunction) _wrap_PyCircleShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyCircleShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnRightClick", (PyCFunction) _wrap_PyCircleShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnSize", (PyCFunction) _wrap_PyCircleShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnMovePre", (PyCFunction) _wrap_PyCircleShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnMovePost", (PyCFunction) _wrap_PyCircleShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnDragLeft", (PyCFunction) _wrap_PyCircleShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyCircleShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyCircleShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnDragRight", (PyCFunction) _wrap_PyCircleShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyCircleShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnEndDragRight", (PyCFunction) _wrap_PyCircleShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnDrawOutline", (PyCFunction) _wrap_PyCircleShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyCircleShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyCircleShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnMoveLink", (PyCFunction) _wrap_PyCircleShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyCircleShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyCircleShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyCircleShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnBeginSize", (PyCFunction) _wrap_PyCircleShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_base_OnEndSize", (PyCFunction) _wrap_PyCircleShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyCircleShape_swigregister", PyCircleShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ArrowHead", (PyCFunction) _wrap_new_ArrowHead, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_ArrowHead", (PyCFunction) _wrap_delete_ArrowHead, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead__GetType", (PyCFunction) _wrap_ArrowHead__GetType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetPosition", (PyCFunction) _wrap_ArrowHead_GetPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_SetPosition", (PyCFunction) _wrap_ArrowHead_SetPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetXOffset", (PyCFunction) _wrap_ArrowHead_GetXOffset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetYOffset", (PyCFunction) _wrap_ArrowHead_GetYOffset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetSpacing", (PyCFunction) _wrap_ArrowHead_GetSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetSize", (PyCFunction) _wrap_ArrowHead_GetSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetName", (PyCFunction) _wrap_ArrowHead_GetName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_SetXOffset", (PyCFunction) _wrap_ArrowHead_SetXOffset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_SetYOffset", (PyCFunction) _wrap_ArrowHead_SetYOffset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetMetaFile", (PyCFunction) _wrap_ArrowHead_GetMetaFile, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetId", (PyCFunction) _wrap_ArrowHead_GetId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetArrowEnd", (PyCFunction) _wrap_ArrowHead_GetArrowEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_GetArrowSize", (PyCFunction) _wrap_ArrowHead_GetArrowSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_SetSize", (PyCFunction) _wrap_ArrowHead_SetSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_SetSpacing", (PyCFunction) _wrap_ArrowHead_SetSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrowHead_swigregister", ArrowHead_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyLineShape", (PyCFunction) _wrap_new_PyLineShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape__setCallbackInfo", (PyCFunction) _wrap_PyLineShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_AddArrow", (PyCFunction) _wrap_PyLineShape_AddArrow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_AddArrowOrdered", (PyCFunction) _wrap_PyLineShape_AddArrowOrdered, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_ClearArrow", (PyCFunction) _wrap_PyLineShape_ClearArrow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_ClearArrowsAtPosition", (PyCFunction) _wrap_PyLineShape_ClearArrowsAtPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_DrawArrow", (PyCFunction) _wrap_PyLineShape_DrawArrow, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_DeleteArrowHeadId", (PyCFunction) _wrap_PyLineShape_DeleteArrowHeadId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_DeleteArrowHead", (PyCFunction) _wrap_PyLineShape_DeleteArrowHead, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_DeleteLineControlPoint", (PyCFunction) _wrap_PyLineShape_DeleteLineControlPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_DrawArrows", (PyCFunction) _wrap_PyLineShape_DrawArrows, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_DrawRegion", (PyCFunction) _wrap_PyLineShape_DrawRegion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_EraseRegion", (PyCFunction) _wrap_PyLineShape_EraseRegion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_FindArrowHeadId", (PyCFunction) _wrap_PyLineShape_FindArrowHeadId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_FindArrowHead", (PyCFunction) _wrap_PyLineShape_FindArrowHead, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_FindLineEndPoints", (PyCFunction) _wrap_PyLineShape_FindLineEndPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_FindLinePosition", (PyCFunction) _wrap_PyLineShape_FindLinePosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_FindMinimumWidth", (PyCFunction) _wrap_PyLineShape_FindMinimumWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_FindNth", (PyCFunction) _wrap_PyLineShape_FindNth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetAttachmentFrom", (PyCFunction) _wrap_PyLineShape_GetAttachmentFrom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetAttachmentTo", (PyCFunction) _wrap_PyLineShape_GetAttachmentTo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetEnds", (PyCFunction) _wrap_PyLineShape_GetEnds, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetFrom", (PyCFunction) _wrap_PyLineShape_GetFrom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetLabelPosition", (PyCFunction) _wrap_PyLineShape_GetLabelPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetNextControlPoint", (PyCFunction) _wrap_PyLineShape_GetNextControlPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetTo", (PyCFunction) _wrap_PyLineShape_GetTo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_Initialise", (PyCFunction) _wrap_PyLineShape_Initialise, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_InsertLineControlPoint", (PyCFunction) _wrap_PyLineShape_InsertLineControlPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_IsEnd", (PyCFunction) _wrap_PyLineShape_IsEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_IsSpline", (PyCFunction) _wrap_PyLineShape_IsSpline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_MakeLineControlPoints", (PyCFunction) _wrap_PyLineShape_MakeLineControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetLineControlPoints", (PyCFunction) _wrap_PyLineShape_GetLineControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetLineControlPoints", (PyCFunction) _wrap_PyLineShape_SetLineControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetAttachmentFrom", (PyCFunction) _wrap_PyLineShape_SetAttachmentFrom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetAttachments", (PyCFunction) _wrap_PyLineShape_SetAttachments, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetAttachmentTo", (PyCFunction) _wrap_PyLineShape_SetAttachmentTo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetEnds", (PyCFunction) _wrap_PyLineShape_SetEnds, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetFrom", (PyCFunction) _wrap_PyLineShape_SetFrom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetIgnoreOffsets", (PyCFunction) _wrap_PyLineShape_SetIgnoreOffsets, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetSpline", (PyCFunction) _wrap_PyLineShape_SetSpline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetTo", (PyCFunction) _wrap_PyLineShape_SetTo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_Straighten", (PyCFunction) _wrap_PyLineShape_Straighten, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_Unlink", (PyCFunction) _wrap_PyLineShape_Unlink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetAlignmentOrientation", (PyCFunction) _wrap_PyLineShape_SetAlignmentOrientation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_SetAlignmentType", (PyCFunction) _wrap_PyLineShape_SetAlignmentType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetAlignmentOrientation", (PyCFunction) _wrap_PyLineShape_GetAlignmentOrientation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetAlignmentType", (PyCFunction) _wrap_PyLineShape_GetAlignmentType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetAlignmentStart", (PyCFunction) _wrap_PyLineShape_GetAlignmentStart, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_GetAlignmentEnd", (PyCFunction) _wrap_PyLineShape_GetAlignmentEnd, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnDraw", (PyCFunction) _wrap_PyLineShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnDrawContents", (PyCFunction) _wrap_PyLineShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnDrawBranches", (PyCFunction) _wrap_PyLineShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnMoveLinks", (PyCFunction) _wrap_PyLineShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnErase", (PyCFunction) _wrap_PyLineShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnEraseContents", (PyCFunction) _wrap_PyLineShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnHighlight", (PyCFunction) _wrap_PyLineShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnLeftClick", (PyCFunction) _wrap_PyLineShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyLineShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnRightClick", (PyCFunction) _wrap_PyLineShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnSize", (PyCFunction) _wrap_PyLineShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnMovePre", (PyCFunction) _wrap_PyLineShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnMovePost", (PyCFunction) _wrap_PyLineShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnDragLeft", (PyCFunction) _wrap_PyLineShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyLineShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyLineShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnDragRight", (PyCFunction) _wrap_PyLineShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyLineShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnEndDragRight", (PyCFunction) _wrap_PyLineShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnDrawOutline", (PyCFunction) _wrap_PyLineShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyLineShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyLineShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnMoveLink", (PyCFunction) _wrap_PyLineShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyLineShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyLineShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyLineShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnBeginSize", (PyCFunction) _wrap_PyLineShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_base_OnEndSize", (PyCFunction) _wrap_PyLineShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLineShape_swigregister", PyLineShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyPolygonShape", (PyCFunction) _wrap_new_PyPolygonShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape__setCallbackInfo", (PyCFunction) _wrap_PyPolygonShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_Create", (PyCFunction) _wrap_PyPolygonShape_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_AddPolygonPoint", (PyCFunction) _wrap_PyPolygonShape_AddPolygonPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_CalculatePolygonCentre", (PyCFunction) _wrap_PyPolygonShape_CalculatePolygonCentre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_DeletePolygonPoint", (PyCFunction) _wrap_PyPolygonShape_DeletePolygonPoint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_GetPoints", (PyCFunction) _wrap_PyPolygonShape_GetPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_GetOriginalPoints", (PyCFunction) _wrap_PyPolygonShape_GetOriginalPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_GetOriginalWidth", (PyCFunction) _wrap_PyPolygonShape_GetOriginalWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_GetOriginalHeight", (PyCFunction) _wrap_PyPolygonShape_GetOriginalHeight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_SetOriginalWidth", (PyCFunction) _wrap_PyPolygonShape_SetOriginalWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_SetOriginalHeight", (PyCFunction) _wrap_PyPolygonShape_SetOriginalHeight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_UpdateOriginalPoints", (PyCFunction) _wrap_PyPolygonShape_UpdateOriginalPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnDraw", (PyCFunction) _wrap_PyPolygonShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnDrawContents", (PyCFunction) _wrap_PyPolygonShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnDrawBranches", (PyCFunction) _wrap_PyPolygonShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnMoveLinks", (PyCFunction) _wrap_PyPolygonShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnErase", (PyCFunction) _wrap_PyPolygonShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnEraseContents", (PyCFunction) _wrap_PyPolygonShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnHighlight", (PyCFunction) _wrap_PyPolygonShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnLeftClick", (PyCFunction) _wrap_PyPolygonShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyPolygonShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnRightClick", (PyCFunction) _wrap_PyPolygonShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnSize", (PyCFunction) _wrap_PyPolygonShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnMovePre", (PyCFunction) _wrap_PyPolygonShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnMovePost", (PyCFunction) _wrap_PyPolygonShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnDragLeft", (PyCFunction) _wrap_PyPolygonShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyPolygonShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyPolygonShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnDragRight", (PyCFunction) _wrap_PyPolygonShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyPolygonShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnEndDragRight", (PyCFunction) _wrap_PyPolygonShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnDrawOutline", (PyCFunction) _wrap_PyPolygonShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyPolygonShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyPolygonShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnMoveLink", (PyCFunction) _wrap_PyPolygonShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyPolygonShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyPolygonShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyPolygonShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnBeginSize", (PyCFunction) _wrap_PyPolygonShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_base_OnEndSize", (PyCFunction) _wrap_PyPolygonShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyPolygonShape_swigregister", PyPolygonShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyTextShape", (PyCFunction) _wrap_new_PyTextShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape__setCallbackInfo", (PyCFunction) _wrap_PyTextShape__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDelete", (PyCFunction) _wrap_PyTextShape_base_OnDelete, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDraw", (PyCFunction) _wrap_PyTextShape_base_OnDraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDrawContents", (PyCFunction) _wrap_PyTextShape_base_OnDrawContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDrawBranches", (PyCFunction) _wrap_PyTextShape_base_OnDrawBranches, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnMoveLinks", (PyCFunction) _wrap_PyTextShape_base_OnMoveLinks, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnErase", (PyCFunction) _wrap_PyTextShape_base_OnErase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnEraseContents", (PyCFunction) _wrap_PyTextShape_base_OnEraseContents, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnHighlight", (PyCFunction) _wrap_PyTextShape_base_OnHighlight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnLeftClick", (PyCFunction) _wrap_PyTextShape_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnLeftDoubleClick", (PyCFunction) _wrap_PyTextShape_base_OnLeftDoubleClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnRightClick", (PyCFunction) _wrap_PyTextShape_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnSize", (PyCFunction) _wrap_PyTextShape_base_OnSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnMovePre", (PyCFunction) _wrap_PyTextShape_base_OnMovePre, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnMovePost", (PyCFunction) _wrap_PyTextShape_base_OnMovePost, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDragLeft", (PyCFunction) _wrap_PyTextShape_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnBeginDragLeft", (PyCFunction) _wrap_PyTextShape_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnEndDragLeft", (PyCFunction) _wrap_PyTextShape_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDragRight", (PyCFunction) _wrap_PyTextShape_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnBeginDragRight", (PyCFunction) _wrap_PyTextShape_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnEndDragRight", (PyCFunction) _wrap_PyTextShape_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDrawOutline", (PyCFunction) _wrap_PyTextShape_base_OnDrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnDrawControlPoints", (PyCFunction) _wrap_PyTextShape_base_OnDrawControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnEraseControlPoints", (PyCFunction) _wrap_PyTextShape_base_OnEraseControlPoints, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnMoveLink", (PyCFunction) _wrap_PyTextShape_base_OnMoveLink, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnSizingDragLeft", (PyCFunction) _wrap_PyTextShape_base_OnSizingDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnSizingBeginDragLeft", (PyCFunction) _wrap_PyTextShape_base_OnSizingBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnSizingEndDragLeft", (PyCFunction) _wrap_PyTextShape_base_OnSizingEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnBeginSize", (PyCFunction) _wrap_PyTextShape_base_OnBeginSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_base_OnEndSize", (PyCFunction) _wrap_PyTextShape_base_OnEndSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextShape_swigregister", PyTextShape_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Diagram", (PyCFunction) _wrap_new_Diagram, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_AddShape", (PyCFunction) _wrap_Diagram_AddShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_Clear", (PyCFunction) _wrap_Diagram_Clear, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_DeleteAllShapes", (PyCFunction) _wrap_Diagram_DeleteAllShapes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_DrawOutline", (PyCFunction) _wrap_Diagram_DrawOutline, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_FindShape", (PyCFunction) _wrap_Diagram_FindShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_GetCanvas", (PyCFunction) _wrap_Diagram_GetCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_GetCount", (PyCFunction) _wrap_Diagram_GetCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_GetGridSpacing", (PyCFunction) _wrap_Diagram_GetGridSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_GetMouseTolerance", (PyCFunction) _wrap_Diagram_GetMouseTolerance, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_GetShapeList", (PyCFunction) _wrap_Diagram_GetShapeList, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_GetQuickEditMode", (PyCFunction) _wrap_Diagram_GetQuickEditMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_GetSnapToGrid", (PyCFunction) _wrap_Diagram_GetSnapToGrid, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_InsertShape", (PyCFunction) _wrap_Diagram_InsertShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_RecentreAll", (PyCFunction) _wrap_Diagram_RecentreAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_Redraw", (PyCFunction) _wrap_Diagram_Redraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_RemoveAllShapes", (PyCFunction) _wrap_Diagram_RemoveAllShapes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_RemoveShape", (PyCFunction) _wrap_Diagram_RemoveShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_SetCanvas", (PyCFunction) _wrap_Diagram_SetCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_SetGridSpacing", (PyCFunction) _wrap_Diagram_SetGridSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_SetMouseTolerance", (PyCFunction) _wrap_Diagram_SetMouseTolerance, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_SetQuickEditMode", (PyCFunction) _wrap_Diagram_SetQuickEditMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_SetSnapToGrid", (PyCFunction) _wrap_Diagram_SetSnapToGrid, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_ShowAll", (PyCFunction) _wrap_Diagram_ShowAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_Snap", (PyCFunction) _wrap_Diagram_Snap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"Diagram_swigregister", Diagram_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyShapeCanvas", (PyCFunction) _wrap_new_PyShapeCanvas, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas__setCallbackInfo", (PyCFunction) _wrap_PyShapeCanvas__setCallbackInfo, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_AddShape", (PyCFunction) _wrap_PyShapeCanvas_AddShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_FindShape", (PyCFunction) _wrap_PyShapeCanvas_FindShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_FindFirstSensitiveShape", (PyCFunction) _wrap_PyShapeCanvas_FindFirstSensitiveShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_GetDiagram", (PyCFunction) _wrap_PyShapeCanvas_GetDiagram, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_GetQuickEditMode", (PyCFunction) _wrap_PyShapeCanvas_GetQuickEditMode, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_InsertShape", (PyCFunction) _wrap_PyShapeCanvas_InsertShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnBeginDragLeft", (PyCFunction) _wrap_PyShapeCanvas_base_OnBeginDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnBeginDragRight", (PyCFunction) _wrap_PyShapeCanvas_base_OnBeginDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnEndDragLeft", (PyCFunction) _wrap_PyShapeCanvas_base_OnEndDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnEndDragRight", (PyCFunction) _wrap_PyShapeCanvas_base_OnEndDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnDragLeft", (PyCFunction) _wrap_PyShapeCanvas_base_OnDragLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnDragRight", (PyCFunction) _wrap_PyShapeCanvas_base_OnDragRight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnLeftClick", (PyCFunction) _wrap_PyShapeCanvas_base_OnLeftClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_base_OnRightClick", (PyCFunction) _wrap_PyShapeCanvas_base_OnRightClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_Redraw", (PyCFunction) _wrap_PyShapeCanvas_Redraw, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_RemoveShape", (PyCFunction) _wrap_PyShapeCanvas_RemoveShape, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_SetDiagram", (PyCFunction) _wrap_PyShapeCanvas_SetDiagram, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_Snap", (PyCFunction) _wrap_PyShapeCanvas_Snap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyShapeCanvas_swigregister", PyShapeCanvas_swigregister, METH_VARARGS, NULL},
	 { (char *)"OGLInitialize", (PyCFunction) _wrap_OGLInitialize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"OGLCleanUp", (PyCFunction) _wrap_OGLCleanUp, METH_VARARGS | METH_KEYWORDS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_wxScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxScrolledWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyVScrolledWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxPyVListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyPanelTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyPanel *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxPyShapeCanvasTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxPyShapeCanvas *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxScrolledWindow(void *x) {
    return (void *)((wxScrolledWindow *)  ((wxPyScrolledWindow *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxScrolledWindow(void *x) {
    return (void *)((wxScrolledWindow *)  ((wxPreviewCanvas *) x));
}
static void *_p_wxPyShapeCanvasTo_p_wxScrolledWindow(void *x) {
    return (void *)((wxScrolledWindow *)  ((wxPyShapeCanvas *) x));
}
static void *_p_wxSplashScreenTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxMiniFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxPyPanelTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxMenuBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMenuBar *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxProgressDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxPanelTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPanel *) x));
}
static void *_p_wxStatusBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxStatusBar *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxTipWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPopupWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxTopLevelWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSplashScreenWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSplitterWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSashWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMDIClientWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxControl *) x));
}
static void *_p_wxPreviewFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxControlWithItemsTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPyWindow *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxPyShapeCanvasTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxPyShapeCanvas *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxFontDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxLayoutConstraintsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutConstraints *) x));
}
static void *_p_wxQueryLayoutInfoEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryLayoutInfoEvent *) x));
}
static void *_p_wxPyControlPointTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyRectangleShape *) ((wxPyControlPoint *) x));
}
static void *_p_wxPreviewFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxGBSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizerItem *) ((wxGBSizerItem *) x));
}
static void *_p_wxSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizerItem *) x));
}
static void *_p_wxScrollEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxIndividualLayoutConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxIndividualLayoutConstraint *) x));
}
static void *_p_wxOGLConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxOGLConstraint *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxBoxSizer *) x));
}
static void *_p_wxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizer *) x));
}
static void *_p_wxPyDrawnShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyRectangleShape *) ((wxPyDrawnShape *) x));
}
static void *_p_wxPyDivisionShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyRectangleShape *)(wxPyCompositeShape *) ((wxPyDivisionShape *) x));
}
static void *_p_wxPyPolygonShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *) ((wxPyPolygonShape *) x));
}
static void *_p_wxGridBagSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxArrowHeadTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxArrowHead *) x));
}
static void *_p_wxPyPanelTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvent *) x));
}
static void *_p_wxFontDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFontData *) x));
}
static void *_p_wxPrintDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintData *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxGridSizer *) x));
}
static void *_p_wxInitDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxInitDialogEvent *) x));
}
static void *_p_wxLayoutAlgorithmTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutAlgorithm *) x));
}
static void *_p_wxPyTaskBarIconTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyTaskBarIcon *) x));
}
static void *_p_wxFindDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxFindDialogEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNcPaintEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSysColourChangedEvent *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxPyShapeCanvasTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyShapeCanvas *) x));
}
static void *_p_wxControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxControl *) x));
}
static void *_p_wxPyEllipseShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *) ((wxPyEllipseShape *) x));
}
static void *_p_wxSetCursorEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSetCursorEvent *) x));
}
static void *_p_wxSplitterEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxSplitterEvent *) x));
}
static void *_p_wxFSFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFSFile *) x));
}
static void *_p_wxFindReplaceDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFindReplaceData *) x));
}
static void *_p_wxPyBitmapShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyRectangleShape *) ((wxPyBitmapShape *) x));
}
static void *_p_wxPySizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxPySizer *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxColourDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxColourData *) x));
}
static void *_p_wxPyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPyEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxPyWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPyWindow *) x));
}
static void *_p_wxSplashScreenTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxFileDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxProgressDialog *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxShowEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxShowEvent *) x));
}
static void *_p_wxPrinterTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrinter *) x));
}
static void *_p_wxMenuItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxMenuItem *) x));
}
static void *_p_wxDateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxDateEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIdleEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIconizeEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMoveEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxActivateEvent *) x));
}
static void *_p_wxXPMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxXPMHandler *) x));
}
static void *_p_wxPNMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNMHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxJPEGHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPCXHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxGIFHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNGHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxBMPHandler *) x));
}
static void *_p_wxImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImageHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTIFFHandler *) x));
}
static void *_p_wxEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvtHandler *) x));
}
static void *_p_wxCalculateLayoutEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCalculateLayoutEvent *) x));
}
static void *_p_wxPyShapeEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPyShapeEvtHandler *) x));
}
static void *_p_wxPyVListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyTextShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyRectangleShape *) ((wxPyTextShape *) x));
}
static void *_p_wxStdDialogButtonSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStdDialogButtonSizer *) x));
}
static void *_p_wxAcceleratorTableTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxAcceleratorTable *) x));
}
static void *_p_wxPyDividedShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyRectangleShape *) ((wxPyDividedShape *) x));
}
static void *_p_wxMiniFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImage *) x));
}
static void *_p_wxFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxPyPrintoutTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPyPrintout *) x));
}
static void *_p_wxScrollWinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxScrollWinEvent *) x));
}
static void *_p_wxTaskBarIconEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxTaskBarIconEvent *) x));
}
static void *_p_wxDiagramTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxDiagram *) x));
}
static void *_p_wxStatusBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxStatusBar *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxKeyEvent *) x));
}
static void *_p_wxWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxWindow *) x));
}
static void *_p_wxMenuTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxMenu *) x));
}
static void *_p_wxMenuBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxTopLevelWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSplashScreenWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSplitterWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSashWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPopupWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxTipWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMDIClientWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxSashEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxSashEvent *) x));
}
static void *_p_wxPrintPreviewTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintPreview *) x));
}
static void *_p_wxPyPrintPreviewTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPrintPreview *) ((wxPyPrintPreview *) x));
}
static void *_p_wxPanelTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPanel *) x));
}
static void *_p_wxDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxPageSetupDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPageSetupDialog *) x));
}
static void *_p_wxPrintDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintDialog *) x));
}
static void *_p_wxAttachmentPointTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxAttachmentPoint *) x));
}
static void *_p_wxPyShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *) ((wxPyShape *) x));
}
static void *_p_wxFileSystemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileSystem *) x));
}
static void *_p_wxContextMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMenuEvent *) x));
}
static void *_p_wxPyAppTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyApp *) x));
}
static void *_p_wxCloseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxEraseEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCommandEvent *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxDropFilesEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDropFilesEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxPyRectangleShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *) ((wxPyRectangleShape *) x));
}
static void *_p_wxPyCompositeShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyRectangleShape *) ((wxPyCompositeShape *) x));
}
static void *_p_wxPyCircleShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *)(wxPyEllipseShape *) ((wxPyCircleShape *) x));
}
static void *_p_wxPyLineShapeTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPyShapeEvtHandler *)(wxPyShape *) ((wxPyLineShape *) x));
}
static void *_p_wxPseudoMetaFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPseudoMetaFile *) x));
}
static void *_p_wxControlWithItemsTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPageSetupDialogDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPageSetupDialogData *) x));
}
static void *_p_wxPrintDialogDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintDialogData *) x));
}
static void *_p_wxPyValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxValidator *) x));
}
static void *_p_wxShapeRegionTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxShapeRegion *) x));
}
static void *_p_wxPyRectangleShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *) ((wxPyRectangleShape *) x));
}
static void *_p_wxPyBitmapShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyRectangleShape *) ((wxPyBitmapShape *) x));
}
static void *_p_wxPyCompositeShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyRectangleShape *) ((wxPyCompositeShape *) x));
}
static void *_p_wxPyCircleShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyEllipseShape *) ((wxPyCircleShape *) x));
}
static void *_p_wxPyLineShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *) ((wxPyLineShape *) x));
}
static void *_p_wxPyTextShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyRectangleShape *) ((wxPyTextShape *) x));
}
static void *_p_wxPyControlPointTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyRectangleShape *) ((wxPyControlPoint *) x));
}
static void *_p_wxPyDrawnShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyRectangleShape *) ((wxPyDrawnShape *) x));
}
static void *_p_wxPyDivisionShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyRectangleShape *)(wxPyCompositeShape *) ((wxPyDivisionShape *) x));
}
static void *_p_wxPyPolygonShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *) ((wxPyPolygonShape *) x));
}
static void *_p_wxPyDividedShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *)(wxPyRectangleShape *) ((wxPyDividedShape *) x));
}
static void *_p_wxPyShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *)  ((wxPyShape *) x));
}
static void *_p_wxPyEllipseShapeTo_p_wxPyShapeEvtHandler(void *x) {
    return (void *)((wxPyShapeEvtHandler *) (wxPyShape *) ((wxPyEllipseShape *) x));
}
static void *_p_wxSplashScreenTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxMiniFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxPyPanelTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxMenuBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxMenuTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxMenu *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxProgressDialog *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxPanelTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPanel *) x));
}
static void *_p_wxStatusBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxStatusBar *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxTipWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPopupWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSashWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSplitterWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSplashScreenWindow *) x));
}
static void *_p_wxWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxTopLevelWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMDIClientWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxControl *) x));
}
static void *_p_wxPreviewFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxPyAppTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyApp *) x));
}
static void *_p_wxControlWithItemsTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPyWindow *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxPyShapeCanvasTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyShapeCanvas *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxPyTaskBarIconTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyTaskBarIcon *) x));
}
static void *_p_wxFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxDirDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxPyCircleShapeTo_p_wxPyEllipseShape(void *x) {
    return (void *)((wxPyEllipseShape *)  ((wxPyCircleShape *) x));
}
static void *_p_wxPyRectangleShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *)  ((wxPyRectangleShape *) x));
}
static void *_p_wxPyBitmapShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyRectangleShape *) ((wxPyBitmapShape *) x));
}
static void *_p_wxPyCompositeShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyRectangleShape *) ((wxPyCompositeShape *) x));
}
static void *_p_wxPyCircleShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyEllipseShape *) ((wxPyCircleShape *) x));
}
static void *_p_wxPyLineShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *)  ((wxPyLineShape *) x));
}
static void *_p_wxPyTextShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyRectangleShape *) ((wxPyTextShape *) x));
}
static void *_p_wxPyControlPointTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyRectangleShape *) ((wxPyControlPoint *) x));
}
static void *_p_wxPyDrawnShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyRectangleShape *) ((wxPyDrawnShape *) x));
}
static void *_p_wxPyDivisionShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyRectangleShape *)(wxPyCompositeShape *) ((wxPyDivisionShape *) x));
}
static void *_p_wxPyPolygonShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *)  ((wxPyPolygonShape *) x));
}
static void *_p_wxPyDividedShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *) (wxPyRectangleShape *) ((wxPyDividedShape *) x));
}
static void *_p_wxPyEllipseShapeTo_p_wxPyShape(void *x) {
    return (void *)((wxPyShape *)  ((wxPyEllipseShape *) x));
}
static void *_p_wxPyBitmapShapeTo_p_wxPyRectangleShape(void *x) {
    return (void *)((wxPyRectangleShape *)  ((wxPyBitmapShape *) x));
}
static void *_p_wxPyCompositeShapeTo_p_wxPyRectangleShape(void *x) {
    return (void *)((wxPyRectangleShape *)  ((wxPyCompositeShape *) x));
}
static void *_p_wxPyTextShapeTo_p_wxPyRectangleShape(void *x) {
    return (void *)((wxPyRectangleShape *)  ((wxPyTextShape *) x));
}
static void *_p_wxPyControlPointTo_p_wxPyRectangleShape(void *x) {
    return (void *)((wxPyRectangleShape *)  ((wxPyControlPoint *) x));
}
static void *_p_wxPyDrawnShapeTo_p_wxPyRectangleShape(void *x) {
    return (void *)((wxPyRectangleShape *)  ((wxPyDrawnShape *) x));
}
static void *_p_wxPyDivisionShapeTo_p_wxPyRectangleShape(void *x) {
    return (void *)((wxPyRectangleShape *) (wxPyCompositeShape *) ((wxPyDivisionShape *) x));
}
static void *_p_wxPyDividedShapeTo_p_wxPyRectangleShape(void *x) {
    return (void *)((wxPyRectangleShape *)  ((wxPyDividedShape *) x));
}
static void *_p_wxPyDivisionShapeTo_p_wxPyCompositeShape(void *x) {
    return (void *)((wxPyCompositeShape *)  ((wxPyDivisionShape *) x));
}
static swig_type_info _swigt__p_wxOGLConstraint[] = {{"_p_wxOGLConstraint", 0, "wxOGLConstraint *", 0, 0, 0, 0},{"_p_wxOGLConstraint", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxBrush[] = {{"_p_wxBrush", 0, "wxBrush *", 0, 0, 0, 0},{"_p_wxBrush", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxColour[] = {{"_p_wxColour", 0, "wxColour *", 0, 0, 0, 0},{"_p_wxColour", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxShapeRegion[] = {{"_p_wxShapeRegion", 0, "wxShapeRegion *", 0, 0, 0, 0},{"_p_wxShapeRegion", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxDC[] = {{"_p_wxDC", 0, "wxDC *", 0, 0, 0, 0},{"_p_wxDC", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyControlPoint[] = {{"_p_wxPyControlPoint", 0, "wxPyControlPoint *", 0, 0, 0, 0},{"_p_wxPyControlPoint", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxRealPoint[] = {{"_p_wxRealPoint", 0, "wxRealPoint *", 0, 0, 0, 0},{"_p_wxRealPoint", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_form_ops_t[] = {{"_p_form_ops_t", 0, "enum form_ops_t *|form_ops_t *", 0, 0, 0, 0},{"_p_form_ops_t", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxDuplexMode[] = {{"_p_wxDuplexMode", 0, "enum wxDuplexMode *|wxDuplexMode *", 0, 0, 0, 0},{"_p_wxDuplexMode", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxArrowHead[] = {{"_p_wxArrowHead", 0, "wxArrowHead *", 0, 0, 0, 0},{"_p_wxArrowHead", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_char[] = {{"_p_char", 0, "char *", 0, 0, 0, 0},{"_p_char", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPanel[] = {{"_p_wxPanel", 0, "wxPanel *", 0, 0, 0, 0},{"_p_wxPanel", 0, 0, 0, 0, 0, 0},{"_p_wxScrolledWindow", _p_wxScrolledWindowTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPyScrolledWindow", _p_wxPyScrolledWindowTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPyVScrolledWindow", _p_wxPyVScrolledWindowTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPyVListBox", _p_wxPyVListBoxTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPyHtmlListBox", _p_wxPyHtmlListBoxTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPyPanel", _p_wxPyPanelTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPreviewCanvas", _p_wxPreviewCanvasTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPyShapeCanvas", _p_wxPyShapeCanvasTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPreviewControlBar", _p_wxPreviewControlBarTo_p_wxPanel, 0, 0, 0, 0, 0},{"_p_wxPyPreviewControlBar", _p_wxPyPreviewControlBarTo_p_wxPanel, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_bool[] = {{"_p_bool", 0, "bool *", 0, 0, 0, 0},{"_p_bool", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxStringList[] = {{"_p_wxStringList", 0, "wxStringList *", 0, 0, 0, 0},{"_p_wxStringList", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxList[] = {{"_p_wxList", 0, "wxList *", 0, 0, 0, 0},{"_p_wxList", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxFont[] = {{"_p_wxFont", 0, "wxFont *", 0, 0, 0, 0},{"_p_wxFont", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxScrolledWindow[] = {{"_p_wxScrolledWindow", 0, "wxScrolledWindow *", 0, 0, 0, 0},{"_p_wxScrolledWindow", 0, 0, 0, 0, 0, 0},{"_p_wxPyScrolledWindow", _p_wxPyScrolledWindowTo_p_wxScrolledWindow, 0, 0, 0, 0, 0},{"_p_wxPreviewCanvas", _p_wxPreviewCanvasTo_p_wxScrolledWindow, 0, 0, 0, 0, 0},{"_p_wxPyShapeCanvas", _p_wxPyShapeCanvasTo_p_wxScrolledWindow, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxWindow[] = {{"_p_wxWindow", 0, "wxWindow *", 0, 0, 0, 0},{"_p_wxSplashScreen", _p_wxSplashScreenTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxMiniFrame", _p_wxMiniFrameTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyPanel", _p_wxPyPanelTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxFindReplaceDialog", _p_wxFindReplaceDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxProgressDialog", _p_wxProgressDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxMessageDialog", _p_wxMessageDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPasswordEntryDialog", _p_wxPasswordEntryDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxTextEntryDialog", _p_wxTextEntryDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxSingleChoiceDialog", _p_wxSingleChoiceDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxMultiChoiceDialog", _p_wxMultiChoiceDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxFileDialog", _p_wxFileDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPanel", _p_wxPanelTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxStatusBar", _p_wxStatusBarTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxTipWindow", _p_wxTipWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyPopupTransientWindow", _p_wxPyPopupTransientWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPopupWindow", _p_wxPopupWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxSashLayoutWindow", _p_wxSashLayoutWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxTopLevelWindow", _p_wxTopLevelWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxSplashScreenWindow", _p_wxSplashScreenWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxSplitterWindow", _p_wxSplitterWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxSashWindow", _p_wxSashWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxMDIClientWindow", _p_wxMDIClientWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyVScrolledWindow", _p_wxPyVScrolledWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyScrolledWindow", _p_wxPyScrolledWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxScrolledWindow", _p_wxScrolledWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxWindow", 0, 0, 0, 0, 0, 0},{"_p_wxPyPreviewFrame", _p_wxPyPreviewFrameTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPreviewFrame", _p_wxPreviewFrameTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxControl", _p_wxControlTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxMDIChildFrame", _p_wxMDIChildFrameTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyShapeCanvas", _p_wxPyShapeCanvasTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPreviewCanvas", _p_wxPreviewCanvasTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyWindow", _p_wxPyWindowTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyHtmlListBox", _p_wxPyHtmlListBoxTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyVListBox", _p_wxPyVListBoxTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPyPreviewControlBar", _p_wxPyPreviewControlBarTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxPreviewControlBar", _p_wxPreviewControlBarTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxFrame", _p_wxFrameTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxFontDialog", _p_wxFontDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxDirDialog", _p_wxDirDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxColourDialog", _p_wxColourDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxDialog", _p_wxDialogTo_p_wxWindow, 0, 0, 0, 0, 0},{"_p_wxMDIParentFrame", _p_wxMDIParentFrameTo_p_wxWindow, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_double[] = {{"_p_double", 0, "double *", 0, 0, 0, 0},{"_p_double", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyDrawnShape[] = {{"_p_wxPyDrawnShape", 0, "wxPyDrawnShape *", 0, 0, 0, 0},{"_p_wxPyDrawnShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyDivisionShape[] = {{"_p_wxPyDivisionShape", 0, "wxPyDivisionShape *", 0, 0, 0, 0},{"_p_wxPyDivisionShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyPolygonShape[] = {{"_p_wxPyPolygonShape", 0, "wxPyPolygonShape *", 0, 0, 0, 0},{"_p_wxPyPolygonShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxObject[] = {{"_p_wxObject", 0, "wxObject *", 0, 0, 0, 0},{"_p_wxQueryLayoutInfoEvent", _p_wxQueryLayoutInfoEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxLayoutConstraints", _p_wxLayoutConstraintsTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyControlPoint", _p_wxPyControlPointTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPreviewFrame", _p_wxPreviewFrameTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyPreviewFrame", _p_wxPyPreviewFrameTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxGBSizerItem", _p_wxGBSizerItemTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSizerItem", _p_wxSizerItemTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxScrollEvent", _p_wxScrollEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxIndividualLayoutConstraint", _p_wxIndividualLayoutConstraintTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxOGLConstraint", _p_wxOGLConstraintTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyPolygonShape", _p_wxPyPolygonShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyDivisionShape", _p_wxPyDivisionShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyDrawnShape", _p_wxPyDrawnShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSizer", _p_wxSizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxBoxSizer", _p_wxBoxSizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxStaticBoxSizer", _p_wxStaticBoxSizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxGridBagSizer", _p_wxGridBagSizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxUpdateUIEvent", _p_wxUpdateUIEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxArrowHead", _p_wxArrowHeadTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyPanel", _p_wxPyPanelTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMenu", _p_wxMenuTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFontData", _p_wxFontDataTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPrintData", _p_wxPrintDataTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxEvent", _p_wxEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFlexGridSizer", _p_wxFlexGridSizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxGridSizer", _p_wxGridSizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyTaskBarIcon", _p_wxPyTaskBarIconTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxLayoutAlgorithm", _p_wxLayoutAlgorithmTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxInitDialogEvent", _p_wxInitDialogEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFindDialogEvent", _p_wxFindDialogEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPaintEvent", _p_wxPaintEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxNcPaintEvent", _p_wxNcPaintEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxDisplayChangedEvent", _p_wxDisplayChangedEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPaletteChangedEvent", _p_wxPaletteChangedEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMouseCaptureChangedEvent", _p_wxMouseCaptureChangedEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSysColourChangedEvent", _p_wxSysColourChangedEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPreviewCanvas", _p_wxPreviewCanvasTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyShapeCanvas", _p_wxPyShapeCanvasTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxControl", _p_wxControlTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyEllipseShape", _p_wxPyEllipseShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSetCursorEvent", _p_wxSetCursorEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSplitterEvent", _p_wxSplitterEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFSFile", _p_wxFSFileTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFindReplaceData", _p_wxFindReplaceDataTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyBitmapShape", _p_wxPyBitmapShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPySizer", _p_wxPySizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMDIChildFrame", _p_wxMDIChildFrameTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxColourData", _p_wxColourDataTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyEvent", _p_wxPyEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxNotifyEvent", _p_wxNotifyEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyWindow", _p_wxPyWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSplashScreen", _p_wxSplashScreenTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFileDialog", _p_wxFileDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMultiChoiceDialog", _p_wxMultiChoiceDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSingleChoiceDialog", _p_wxSingleChoiceDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxTextEntryDialog", _p_wxTextEntryDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPasswordEntryDialog", _p_wxPasswordEntryDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMessageDialog", _p_wxMessageDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxProgressDialog", _p_wxProgressDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFindReplaceDialog", _p_wxFindReplaceDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxShowEvent", _p_wxShowEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPrinter", _p_wxPrinterTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMenuItem", _p_wxMenuItemTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxDateEvent", _p_wxDateEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxIdleEvent", _p_wxIdleEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxWindowCreateEvent", _p_wxWindowCreateEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxQueryNewPaletteEvent", _p_wxQueryNewPaletteEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMaximizeEvent", _p_wxMaximizeEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxIconizeEvent", _p_wxIconizeEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSizeEvent", _p_wxSizeEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMoveEvent", _p_wxMoveEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxActivateEvent", _p_wxActivateEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPNMHandler", _p_wxPNMHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxXPMHandler", _p_wxXPMHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxJPEGHandler", _p_wxJPEGHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPCXHandler", _p_wxPCXHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxGIFHandler", _p_wxGIFHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPNGHandler", _p_wxPNGHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxANIHandler", _p_wxANIHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxCURHandler", _p_wxCURHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxICOHandler", _p_wxICOHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxBMPHandler", _p_wxBMPHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxImageHandler", _p_wxImageHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxTIFFHandler", _p_wxTIFFHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxEvtHandler", _p_wxEvtHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxCalculateLayoutEvent", _p_wxCalculateLayoutEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyShapeEvtHandler", _p_wxPyShapeEvtHandlerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyVListBox", _p_wxPyVListBoxTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyHtmlListBox", _p_wxPyHtmlListBoxTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyTextShape", _p_wxPyTextShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyDividedShape", _p_wxPyDividedShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxStdDialogButtonSizer", _p_wxStdDialogButtonSizerTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxAcceleratorTable", _p_wxAcceleratorTableTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMiniFrame", _p_wxMiniFrameTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxImage", _p_wxImageTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFrame", _p_wxFrameTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyPrintout", _p_wxPyPrintoutTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxScrollWinEvent", _p_wxScrollWinEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxTaskBarIconEvent", _p_wxTaskBarIconEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxDiagram", _p_wxDiagramTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxStatusBar", _p_wxStatusBarTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMDIParentFrame", _p_wxMDIParentFrameTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxObject", 0, 0, 0, 0, 0, 0},{"_p_wxWindowDestroyEvent", _p_wxWindowDestroyEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxNavigationKeyEvent", _p_wxNavigationKeyEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxKeyEvent", _p_wxKeyEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxScrolledWindow", _p_wxScrolledWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyScrolledWindow", _p_wxPyScrolledWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyVScrolledWindow", _p_wxPyVScrolledWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMDIClientWindow", _p_wxMDIClientWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxTopLevelWindow", _p_wxTopLevelWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxWindow", _p_wxWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSashWindow", _p_wxSashWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSplitterWindow", _p_wxSplitterWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSplashScreenWindow", _p_wxSplashScreenWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSashLayoutWindow", _p_wxSashLayoutWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPopupWindow", _p_wxPopupWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyPopupTransientWindow", _p_wxPyPopupTransientWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxTipWindow", _p_wxTipWindowTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxSashEvent", _p_wxSashEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPrintPreview", _p_wxPrintPreviewTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyPrintPreview", _p_wxPyPrintPreviewTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPanel", _p_wxPanelTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFontDialog", _p_wxFontDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxDirDialog", _p_wxDirDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxColourDialog", _p_wxColourDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxDialog", _p_wxDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyShape", _p_wxPyShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPageSetupDialog", _p_wxPageSetupDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPrintDialog", _p_wxPrintDialogTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxAttachmentPoint", _p_wxAttachmentPointTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFileSystem", _p_wxFileSystemTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxContextMenuEvent", _p_wxContextMenuEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMenuEvent", _p_wxMenuEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyApp", _p_wxPyAppTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxCloseEvent", _p_wxCloseEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxMouseEvent", _p_wxMouseEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxEraseEvent", _p_wxEraseEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyCommandEvent", _p_wxPyCommandEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxCommandEvent", _p_wxCommandEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPreviewControlBar", _p_wxPreviewControlBarTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyPreviewControlBar", _p_wxPyPreviewControlBarTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyCircleShape", _p_wxPyCircleShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyLineShape", _p_wxPyLineShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyCompositeShape", _p_wxPyCompositeShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyRectangleShape", _p_wxPyRectangleShapeTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxDropFilesEvent", _p_wxDropFilesEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxFocusEvent", _p_wxFocusEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxChildFocusEvent", _p_wxChildFocusEventTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPseudoMetaFile", _p_wxPseudoMetaFileTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPageSetupDialogData", _p_wxPageSetupDialogDataTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPrintDialogData", _p_wxPrintDialogDataTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxValidator", _p_wxValidatorTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxObject, 0, 0, 0, 0, 0},{"_p_wxShapeRegion", _p_wxShapeRegionTo_p_wxObject, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxBitmap[] = {{"_p_wxBitmap", 0, "wxBitmap *", 0, 0, 0, 0},{"_p_wxBitmap", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPaperSize[] = {{"_p_wxPaperSize", 0, "enum wxPaperSize *|wxPaperSize *", 0, 0, 0, 0},{"_p_wxPaperSize", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_unsigned_int[] = {{"_p_unsigned_int", 0, "unsigned int *|time_t *", 0, 0, 0, 0},{"_p_unsigned_int", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__unsigned_int[] = {{"_unsigned_int", 0, "unsigned int|std::size_t", 0, 0, 0, 0},{"_unsigned_int", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyBitmapShape[] = {{"_p_wxPyBitmapShape", 0, "wxPyBitmapShape *", 0, 0, 0, 0},{"_p_wxPyBitmapShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyShapeEvtHandler[] = {{"_p_wxPyShapeEvtHandler", 0, "wxPyShapeEvtHandler *", 0, 0, 0, 0},{"_p_wxPyControlPoint", _p_wxPyControlPointTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyRectangleShape", _p_wxPyRectangleShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyCompositeShape", _p_wxPyCompositeShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyCircleShape", _p_wxPyCircleShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyLineShape", _p_wxPyLineShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyDividedShape", _p_wxPyDividedShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyEllipseShape", _p_wxPyEllipseShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyPolygonShape", _p_wxPyPolygonShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyDrawnShape", _p_wxPyDrawnShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyDivisionShape", _p_wxPyDivisionShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyShape", _p_wxPyShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyShapeEvtHandler", 0, 0, 0, 0, 0, 0},{"_p_wxPyBitmapShape", _p_wxPyBitmapShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyTextShape", _p_wxPyTextShapeTo_p_wxPyShapeEvtHandler, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxEvtHandler[] = {{"_p_wxEvtHandler", 0, "wxEvtHandler *", 0, 0, 0, 0},{"_p_wxSplashScreen", _p_wxSplashScreenTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMiniFrame", _p_wxMiniFrameTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyPanel", _p_wxPyPanelTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMenuBar", _p_wxMenuBarTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxValidator", _p_wxValidatorTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyValidator", _p_wxPyValidatorTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMessageDialog", _p_wxMessageDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxFindReplaceDialog", _p_wxFindReplaceDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxProgressDialog", _p_wxProgressDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPasswordEntryDialog", _p_wxPasswordEntryDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxTextEntryDialog", _p_wxTextEntryDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxSingleChoiceDialog", _p_wxSingleChoiceDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMultiChoiceDialog", _p_wxMultiChoiceDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxFileDialog", _p_wxFileDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPanel", _p_wxPanelTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxStatusBar", _p_wxStatusBarTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPopupWindow", _p_wxPopupWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxSashLayoutWindow", _p_wxSashLayoutWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxSplashScreenWindow", _p_wxSplashScreenWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxSplitterWindow", _p_wxSplitterWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxSashWindow", _p_wxSashWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxWindow", _p_wxWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxTopLevelWindow", _p_wxTopLevelWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMDIClientWindow", _p_wxMDIClientWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyVScrolledWindow", _p_wxPyVScrolledWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyScrolledWindow", _p_wxPyScrolledWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxScrolledWindow", _p_wxScrolledWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyPopupTransientWindow", _p_wxPyPopupTransientWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxTipWindow", _p_wxTipWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyPreviewFrame", _p_wxPyPreviewFrameTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPreviewFrame", _p_wxPreviewFrameTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxControl", _p_wxControlTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMDIChildFrame", _p_wxMDIChildFrameTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyApp", _p_wxPyAppTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxControlWithItems", _p_wxControlWithItemsTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxEvtHandler", 0, 0, 0, 0, 0, 0},{"_p_wxPyShapeCanvas", _p_wxPyShapeCanvasTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPreviewCanvas", _p_wxPreviewCanvasTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyWindow", _p_wxPyWindowTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyHtmlListBox", _p_wxPyHtmlListBoxTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyVListBox", _p_wxPyVListBoxTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyPreviewControlBar", _p_wxPyPreviewControlBarTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPreviewControlBar", _p_wxPreviewControlBarTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxPyTaskBarIcon", _p_wxPyTaskBarIconTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxFrame", _p_wxFrameTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxFontDialog", _p_wxFontDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxDirDialog", _p_wxDirDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxColourDialog", _p_wxColourDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxDialog", _p_wxDialogTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMenu", _p_wxMenuTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{"_p_wxMDIParentFrame", _p_wxMDIParentFrameTo_p_wxEvtHandler, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyEllipseShape[] = {{"_p_wxPyEllipseShape", 0, "wxPyEllipseShape *", 0, 0, 0, 0},{"_p_wxPyCircleShape", _p_wxPyCircleShapeTo_p_wxPyEllipseShape, 0, 0, 0, 0, 0},{"_p_wxPyEllipseShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyShapeCanvas[] = {{"_p_wxPyShapeCanvas", 0, "wxPyShapeCanvas *", 0, 0, 0, 0},{"_p_wxPyShapeCanvas", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPoint[] = {{"_p_wxPoint", 0, "wxPoint *", 0, 0, 0, 0},{"_p_wxPoint", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxDiagram[] = {{"_p_wxDiagram", 0, "wxDiagram *", 0, 0, 0, 0},{"_p_wxDiagram", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyShape[] = {{"_p_wxPyShape", 0, "wxPyShape *", 0, 0, 0, 0},{"_p_wxPyRectangleShape", _p_wxPyRectangleShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyBitmapShape", _p_wxPyBitmapShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyCompositeShape", _p_wxPyCompositeShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyCircleShape", _p_wxPyCircleShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyLineShape", _p_wxPyLineShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyTextShape", _p_wxPyTextShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyDivisionShape", _p_wxPyDivisionShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyControlPoint", _p_wxPyControlPointTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyDrawnShape", _p_wxPyDrawnShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyPolygonShape", _p_wxPyPolygonShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyDividedShape", _p_wxPyDividedShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{"_p_wxPyShape", 0, 0, 0, 0, 0, 0},{"_p_wxPyEllipseShape", _p_wxPyEllipseShapeTo_p_wxPyShape, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxAttachmentPoint[] = {{"_p_wxAttachmentPoint", 0, "wxAttachmentPoint *", 0, 0, 0, 0},{"_p_wxAttachmentPoint", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_unsigned_char[] = {{"_p_unsigned_char", 0, "unsigned char *|byte *", 0, 0, 0, 0},{"_p_unsigned_char", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__ptrdiff_t[] = {{"_ptrdiff_t", 0, "ptrdiff_t", 0, 0, 0, 0},{"_ptrdiff_t", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__std__ptrdiff_t[] = {{"_std__ptrdiff_t", 0, "std::ptrdiff_t", 0, 0, 0, 0},{"_std__ptrdiff_t", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxClassInfo[] = {{"_p_wxClassInfo", 0, "wxClassInfo *", 0, 0, 0, 0},{"_p_wxClassInfo", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyLineShape[] = {{"_p_wxPyLineShape", 0, "wxPyLineShape *", 0, 0, 0, 0},{"_p_wxPyLineShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyRectangleShape[] = {{"_p_wxPyRectangleShape", 0, "wxPyRectangleShape *", 0, 0, 0, 0},{"_p_wxPyRectangleShape", 0, 0, 0, 0, 0, 0},{"_p_wxPyBitmapShape", _p_wxPyBitmapShapeTo_p_wxPyRectangleShape, 0, 0, 0, 0, 0},{"_p_wxPyCompositeShape", _p_wxPyCompositeShapeTo_p_wxPyRectangleShape, 0, 0, 0, 0, 0},{"_p_wxPyTextShape", _p_wxPyTextShapeTo_p_wxPyRectangleShape, 0, 0, 0, 0, 0},{"_p_wxPyDivisionShape", _p_wxPyDivisionShapeTo_p_wxPyRectangleShape, 0, 0, 0, 0, 0},{"_p_wxPyControlPoint", _p_wxPyControlPointTo_p_wxPyRectangleShape, 0, 0, 0, 0, 0},{"_p_wxPyDrawnShape", _p_wxPyDrawnShapeTo_p_wxPyRectangleShape, 0, 0, 0, 0, 0},{"_p_wxPyDividedShape", _p_wxPyDividedShapeTo_p_wxPyRectangleShape, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyCompositeShape[] = {{"_p_wxPyCompositeShape", 0, "wxPyCompositeShape *", 0, 0, 0, 0},{"_p_wxPyCompositeShape", 0, 0, 0, 0, 0, 0},{"_p_wxPyDivisionShape", _p_wxPyDivisionShapeTo_p_wxPyCompositeShape, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyCircleShape[] = {{"_p_wxPyCircleShape", 0, "wxPyCircleShape *", 0, 0, 0, 0},{"_p_wxPyCircleShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPen[] = {{"_p_wxPen", 0, "wxPen *", 0, 0, 0, 0},{"_p_wxPen", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0, 0, 0, 0},{"_p_int", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPseudoMetaFile[] = {{"_p_wxPseudoMetaFile", 0, "wxPseudoMetaFile *", 0, 0, 0, 0},{"_p_wxPseudoMetaFile", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyTextShape[] = {{"_p_wxPyTextShape", 0, "wxPyTextShape *", 0, 0, 0, 0},{"_p_wxPyTextShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_unsigned_long[] = {{"_p_unsigned_long", 0, "unsigned long *|wxUIntPtr *", 0, 0, 0, 0},{"_p_unsigned_long", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};
static swig_type_info _swigt__p_wxPyDividedShape[] = {{"_p_wxPyDividedShape", 0, "wxPyDividedShape *", 0, 0, 0, 0},{"_p_wxPyDividedShape", 0, 0, 0, 0, 0, 0},{0, 0, 0, 0, 0, 0, 0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_wxOGLConstraint, 
_swigt__p_wxBrush, 
_swigt__p_wxColour, 
_swigt__p_wxShapeRegion, 
_swigt__p_wxDC, 
_swigt__p_wxPyControlPoint, 
_swigt__p_wxRealPoint, 
_swigt__p_form_ops_t, 
_swigt__p_wxDuplexMode, 
_swigt__p_wxArrowHead, 
_swigt__p_char, 
_swigt__p_wxPanel, 
_swigt__p_bool, 
_swigt__p_wxStringList, 
_swigt__p_wxList, 
_swigt__p_wxFont, 
_swigt__p_wxScrolledWindow, 
_swigt__p_wxWindow, 
_swigt__p_double, 
_swigt__p_wxPyDrawnShape, 
_swigt__p_wxPyDivisionShape, 
_swigt__p_wxPyPolygonShape, 
_swigt__p_wxObject, 
_swigt__p_wxBitmap, 
_swigt__p_wxPaperSize, 
_swigt__p_unsigned_int, 
_swigt__unsigned_int, 
_swigt__p_wxPyBitmapShape, 
_swigt__p_wxPyShapeEvtHandler, 
_swigt__p_wxEvtHandler, 
_swigt__p_wxPyEllipseShape, 
_swigt__p_wxPyShapeCanvas, 
_swigt__p_wxPoint, 
_swigt__p_wxDiagram, 
_swigt__p_wxPyShape, 
_swigt__p_wxAttachmentPoint, 
_swigt__p_unsigned_char, 
_swigt__ptrdiff_t, 
_swigt__std__ptrdiff_t, 
_swigt__p_wxClassInfo, 
_swigt__p_wxPyLineShape, 
_swigt__p_wxPyRectangleShape, 
_swigt__p_wxPyCompositeShape, 
_swigt__p_wxPyCircleShape, 
_swigt__p_wxPen, 
_swigt__p_int, 
_swigt__p_wxPseudoMetaFile, 
_swigt__p_wxPyTextShape, 
_swigt__p_unsigned_long, 
_swigt__p_wxPyDividedShape, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif


#ifdef __cplusplus
extern "C" {
#endif
    
    /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
    
    /* -----------------------------------------------------------------------------
     * global variable support code.
     * ----------------------------------------------------------------------------- */
    
    typedef struct swig_globalvar {
        char       *name;                  /* Name of global variable */
        PyObject *(*get_attr)();           /* Return the current value */
        int       (*set_attr)(PyObject *); /* Set the value */
        struct swig_globalvar *next;
    } swig_globalvar;
    
    typedef struct swig_varlinkobject {
        PyObject_HEAD
        swig_globalvar *vars;
    } swig_varlinkobject;
    
    static PyObject *
    swig_varlink_repr(swig_varlinkobject *v) {
        v = v;
        return PyString_FromString("<Swig global variables>");
    }
    
    static int
    swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
        swig_globalvar  *var;
        flags = flags;
        fprintf(fp,"Swig global variables { ");
        for (var = v->vars; var; var=var->next) {
            fprintf(fp,"%s", var->name);
            if (var->next) fprintf(fp,", ");
        }
        fprintf(fp," }\n");
        return 0;
    }
    
    static PyObject *
    swig_varlink_getattr(swig_varlinkobject *v, char *n) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->get_attr)();
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return NULL;
    }
    
    static int
    swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->set_attr)(p);
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return 1;
    }
    
    static PyTypeObject varlinktype = {
        PyObject_HEAD_INIT(0)              
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        0,                                  /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        0,                                  /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        0,                                  /* tp_doc */
#if PY_VERSION_HEX >= 0x02000000
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };
    
    /* Create a variable linking object for use later */
    static PyObject *
    SWIG_Python_newvarlink(void) {
        swig_varlinkobject *result = 0;
        result = PyMem_NEW(swig_varlinkobject,1);
        varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
        result->ob_type = &varlinktype;
        result->vars = 0;
        result->ob_refcnt = 0;
        Py_XINCREF((PyObject *) result);
        return ((PyObject*) result);
    }
    
    static void
    SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
        swig_varlinkobject *v;
        swig_globalvar *gv;
        v= (swig_varlinkobject *) p;
        gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
        gv->name = (char *) malloc(strlen(name)+1);
        strcpy(gv->name,name);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
        v->vars = gv;
    }
    
    /* -----------------------------------------------------------------------------
     * constants/methods manipulation
     * ----------------------------------------------------------------------------- */
    
    /* Install Constants */
    static void
    SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
        PyObject *obj = 0;
        size_t i;
        for (i = 0; constants[i].type; i++) {
            switch(constants[i].type) {
                case SWIG_PY_INT:
                obj = PyInt_FromLong(constants[i].lvalue);
                break;
                case SWIG_PY_FLOAT:
                obj = PyFloat_FromDouble(constants[i].dvalue);
                break;
                case SWIG_PY_STRING:
                if (constants[i].pvalue) {
                    obj = PyString_FromString((char *) constants[i].pvalue);
                } else {
                    Py_INCREF(Py_None);
                    obj = Py_None;
                }
                break;
                case SWIG_PY_POINTER:
                obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
                break;
                case SWIG_PY_BINARY:
                obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
                break;
                default:
                obj = 0;
                break;
            }
            if (obj) {
                PyDict_SetItemString(d,constants[i].name,obj);
                Py_DECREF(obj);
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*/
    /* Fix SwigMethods to carry the callback ptrs when needed */
    /* -----------------------------------------------------------------------------*/
    
    static void
    SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
        size_t i;
        for (i = 0; methods[i].ml_name; ++i) {
            char *c = methods[i].ml_doc;
            if (c && (c = strstr(c, "swig_ptr: "))) {
                int j;
                swig_const_info *ci = 0;
                char *name = c + 10;
                for (j = 0; const_table[j].type; j++) {
                    if (strncmp(const_table[j].name, name, 
                    strlen(const_table[j].name)) == 0) {
                        ci = &(const_table[j]);
                        break;
                    }
                }
                if (ci) {
                    size_t shift = (ci->ptype) - types;
                    swig_type_info *ty = types_initial[shift];
                    size_t ldoc = (c - methods[i].ml_doc);
                    size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
                    char *ndoc = (char*)malloc(ldoc + lptr + 10);
                    char *buff = ndoc;
                    void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue: (void *)(ci->lvalue);
                    strncpy(buff, methods[i].ml_doc, ldoc);
                    buff += ldoc;
                    strncpy(buff, "swig_ptr: ", 10);
                    buff += 10;
                    SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
                    methods[i].ml_doc = ndoc;
                }
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*
     *  Initialize type list
     * -----------------------------------------------------------------------------*/
    
#if PY_MAJOR_VERSION < 2
    /* PyModule_AddObject function was introduced in Python 2.0.  The following function
    is copied out of Python/modsupport.c in python version 2.3.4 */
    static int
    PyModule_AddObject(PyObject *m, char *name, PyObject *o)
    {
        PyObject *dict;
        if (!PyModule_Check(m)) {
            PyErr_SetString(PyExc_TypeError,
            "PyModule_AddObject() needs module as first arg");
            return -1;
        }
        if (!o) {
            PyErr_SetString(PyExc_TypeError,
            "PyModule_AddObject() needs non-NULL value");
            return -1;
        }
        
        dict = PyModule_GetDict(m);
        if (dict == NULL) {
            /* Internal error -- modules must have a dict! */
            PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
            PyModule_GetName(m));
            return -1;
        }
        if (PyDict_SetItemString(dict, name, o))
        return -1;
        Py_DECREF(o);
        return 0;
    }
#endif
    
    static swig_type_info **
    SWIG_Python_SetTypeListHandle(swig_type_info **type_list_handle) {
        static PyMethodDef swig_empty_runtime_method_table[] = {
            {
                NULL, NULL, 0, NULL
            } 
        };/* Sentinel */
        
        PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
        swig_empty_runtime_method_table);
        PyObject *pointer = PyCObject_FromVoidPtr((void *) type_list_handle, NULL);
        if (pointer && module) {
            PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
        }
        return type_list_handle;
    } 
    
    static swig_type_info **
    SWIG_Python_LookupTypePointer(swig_type_info **type_list_handle) {
        swig_type_info **type_pointer;
        
        /* first check if module already created */
        type_pointer = SWIG_Python_GetTypeListHandle();
        if (type_pointer) {
            return type_pointer;
        } else {
            /* create a new module and variable */
            return SWIG_Python_SetTypeListHandle(type_list_handle);
        }
    }
    
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void *) SWIG_ReturnGlobalTypeList(void *);
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    
    /* Fix SwigMethods to carry the callback ptrs when needed */
    SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_types_initial);
    
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
#ifdef SWIG_LINK_RUNTIME
        swig_type_list_handle = (swig_type_info **) SWIG_ReturnGlobalTypeList(swig_type_list_handle);
#else
#  ifndef SWIG_STATIC_RUNTIME
        swig_type_list_handle = SWIG_Python_LookupTypePointer(swig_type_list_handle);
#  endif
#endif
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    {
        PyDict_SetItemString(d,"oglMETAFLAGS_OUTLINE", SWIG_From_int((int)(oglMETAFLAGS_OUTLINE))); 
    }
    {
        PyDict_SetItemString(d,"oglMETAFLAGS_ATTACHMENTS", SWIG_From_int((int)(oglMETAFLAGS_ATTACHMENTS))); 
    }
    {
        PyDict_SetItemString(d,"KEY_SHIFT", SWIG_From_int((int)(KEY_SHIFT))); 
    }
    {
        PyDict_SetItemString(d,"KEY_CTRL", SWIG_From_int((int)(KEY_CTRL))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_NONE", SWIG_From_int((int)(ARROW_NONE))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_END", SWIG_From_int((int)(ARROW_END))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_BOTH", SWIG_From_int((int)(ARROW_BOTH))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_MIDDLE", SWIG_From_int((int)(ARROW_MIDDLE))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_START", SWIG_From_int((int)(ARROW_START))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_HOLLOW_CIRCLE", SWIG_From_int((int)(ARROW_HOLLOW_CIRCLE))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_FILLED_CIRCLE", SWIG_From_int((int)(ARROW_FILLED_CIRCLE))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_ARROW", SWIG_From_int((int)(ARROW_ARROW))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_SINGLE_OBLIQUE", SWIG_From_int((int)(ARROW_SINGLE_OBLIQUE))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_DOUBLE_OBLIQUE", SWIG_From_int((int)(ARROW_DOUBLE_OBLIQUE))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_METAFILE", SWIG_From_int((int)(ARROW_METAFILE))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_POSITION_END", SWIG_From_int((int)(ARROW_POSITION_END))); 
    }
    {
        PyDict_SetItemString(d,"ARROW_POSITION_START", SWIG_From_int((int)(ARROW_POSITION_START))); 
    }
    {
        PyDict_SetItemString(d,"CONTROL_POINT_VERTICAL", SWIG_From_int((int)(CONTROL_POINT_VERTICAL))); 
    }
    {
        PyDict_SetItemString(d,"CONTROL_POINT_HORIZONTAL", SWIG_From_int((int)(CONTROL_POINT_HORIZONTAL))); 
    }
    {
        PyDict_SetItemString(d,"CONTROL_POINT_DIAGONAL", SWIG_From_int((int)(CONTROL_POINT_DIAGONAL))); 
    }
    {
        PyDict_SetItemString(d,"CONTROL_POINT_ENDPOINT_TO", SWIG_From_int((int)(CONTROL_POINT_ENDPOINT_TO))); 
    }
    {
        PyDict_SetItemString(d,"CONTROL_POINT_ENDPOINT_FROM", SWIG_From_int((int)(CONTROL_POINT_ENDPOINT_FROM))); 
    }
    {
        PyDict_SetItemString(d,"CONTROL_POINT_LINE", SWIG_From_int((int)(CONTROL_POINT_LINE))); 
    }
    {
        PyDict_SetItemString(d,"FORMAT_NONE", SWIG_From_int((int)(FORMAT_NONE))); 
    }
    {
        PyDict_SetItemString(d,"FORMAT_CENTRE_HORIZ", SWIG_From_int((int)(FORMAT_CENTRE_HORIZ))); 
    }
    {
        PyDict_SetItemString(d,"FORMAT_CENTRE_VERT", SWIG_From_int((int)(FORMAT_CENTRE_VERT))); 
    }
    {
        PyDict_SetItemString(d,"FORMAT_SIZE_TO_CONTENTS", SWIG_From_int((int)(FORMAT_SIZE_TO_CONTENTS))); 
    }
    {
        PyDict_SetItemString(d,"LINE_ALIGNMENT_HORIZ", SWIG_From_int((int)(LINE_ALIGNMENT_HORIZ))); 
    }
    {
        PyDict_SetItemString(d,"LINE_ALIGNMENT_VERT", SWIG_From_int((int)(LINE_ALIGNMENT_VERT))); 
    }
    {
        PyDict_SetItemString(d,"LINE_ALIGNMENT_TO_NEXT_HANDLE", SWIG_From_int((int)(LINE_ALIGNMENT_TO_NEXT_HANDLE))); 
    }
    {
        PyDict_SetItemString(d,"LINE_ALIGNMENT_NONE", SWIG_From_int((int)(LINE_ALIGNMENT_NONE))); 
    }
    {
        PyDict_SetItemString(d,"SHADOW_NONE", SWIG_From_int((int)(SHADOW_NONE))); 
    }
    {
        PyDict_SetItemString(d,"SHADOW_LEFT", SWIG_From_int((int)(SHADOW_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"SHADOW_RIGHT", SWIG_From_int((int)(SHADOW_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"OP_CLICK_LEFT", SWIG_From_int((int)(OP_CLICK_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"OP_CLICK_RIGHT", SWIG_From_int((int)(OP_CLICK_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"OP_DRAG_LEFT", SWIG_From_int((int)(OP_DRAG_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"OP_DRAG_RIGHT", SWIG_From_int((int)(OP_DRAG_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"OP_ALL", SWIG_From_int((int)(OP_ALL))); 
    }
    {
        PyDict_SetItemString(d,"ATTACHMENT_MODE_NONE", SWIG_From_int((int)(ATTACHMENT_MODE_NONE))); 
    }
    {
        PyDict_SetItemString(d,"ATTACHMENT_MODE_EDGE", SWIG_From_int((int)(ATTACHMENT_MODE_EDGE))); 
    }
    {
        PyDict_SetItemString(d,"ATTACHMENT_MODE_BRANCHING", SWIG_From_int((int)(ATTACHMENT_MODE_BRANCHING))); 
    }
    {
        PyDict_SetItemString(d,"BRANCHING_ATTACHMENT_NORMAL", SWIG_From_int((int)(BRANCHING_ATTACHMENT_NORMAL))); 
    }
    {
        PyDict_SetItemString(d,"BRANCHING_ATTACHMENT_BLOB", SWIG_From_int((int)(BRANCHING_ATTACHMENT_BLOB))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_CENTRED_VERTICALLY", SWIG_From_int((int)(gyCONSTRAINT_CENTRED_VERTICALLY))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_CENTRED_HORIZONTALLY", SWIG_From_int((int)(gyCONSTRAINT_CENTRED_HORIZONTALLY))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_CENTRED_BOTH", SWIG_From_int((int)(gyCONSTRAINT_CENTRED_BOTH))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_LEFT_OF", SWIG_From_int((int)(gyCONSTRAINT_LEFT_OF))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_RIGHT_OF", SWIG_From_int((int)(gyCONSTRAINT_RIGHT_OF))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_ABOVE", SWIG_From_int((int)(gyCONSTRAINT_ABOVE))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_BELOW", SWIG_From_int((int)(gyCONSTRAINT_BELOW))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_ALIGNED_TOP", SWIG_From_int((int)(gyCONSTRAINT_ALIGNED_TOP))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_ALIGNED_BOTTOM", SWIG_From_int((int)(gyCONSTRAINT_ALIGNED_BOTTOM))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_ALIGNED_LEFT", SWIG_From_int((int)(gyCONSTRAINT_ALIGNED_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_ALIGNED_RIGHT", SWIG_From_int((int)(gyCONSTRAINT_ALIGNED_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_MIDALIGNED_TOP", SWIG_From_int((int)(gyCONSTRAINT_MIDALIGNED_TOP))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_MIDALIGNED_BOTTOM", SWIG_From_int((int)(gyCONSTRAINT_MIDALIGNED_BOTTOM))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_MIDALIGNED_LEFT", SWIG_From_int((int)(gyCONSTRAINT_MIDALIGNED_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"gyCONSTRAINT_MIDALIGNED_RIGHT", SWIG_From_int((int)(gyCONSTRAINT_MIDALIGNED_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"DIVISION_SIDE_NONE", SWIG_From_int((int)(DIVISION_SIDE_NONE))); 
    }
    {
        PyDict_SetItemString(d,"DIVISION_SIDE_LEFT", SWIG_From_int((int)(DIVISION_SIDE_LEFT))); 
    }
    {
        PyDict_SetItemString(d,"DIVISION_SIDE_TOP", SWIG_From_int((int)(DIVISION_SIDE_TOP))); 
    }
    {
        PyDict_SetItemString(d,"DIVISION_SIDE_RIGHT", SWIG_From_int((int)(DIVISION_SIDE_RIGHT))); 
    }
    {
        PyDict_SetItemString(d,"DIVISION_SIDE_BOTTOM", SWIG_From_int((int)(DIVISION_SIDE_BOTTOM))); 
    }
    
    
    //     initoglbasicc();
    //     initoglshapesc();
    //     initoglshapes2c();
    //     initoglcanvasc();
    
    
    wxPyPtrTypeMap_Add("wxControlPoint", "wxPyControlPoint");
    wxPyPtrTypeMap_Add("wxShapeCanvas", "wxPyShapeCanvas");
    wxPyPtrTypeMap_Add("wxShapeEvtHandler", "wxPyShapeEvtHandler");
    wxPyPtrTypeMap_Add("wxShape", "wxPyShape");
    wxPyPtrTypeMap_Add("wxRectangleShape", "wxPyRectangleShape");
    wxPyPtrTypeMap_Add("wxDrawnShape", "wxPyDrawnShape");
    wxPyPtrTypeMap_Add("wxCompositeShape", "wxPyCompositeShape");
    wxPyPtrTypeMap_Add("wxDividedShape", "wxPyDividedShape");
    wxPyPtrTypeMap_Add("wxDivisionShape", "wxPyDivisionShape");
    wxPyPtrTypeMap_Add("wxEllipseShape", "wxPyEllipseShape");
    wxPyPtrTypeMap_Add("wxCircleShape", "wxPyCircleShape");
    wxPyPtrTypeMap_Add("wxLineShape", "wxPyLineShape");
    wxPyPtrTypeMap_Add("wxPolygonShape", "wxPyPolygonShape");
    wxPyPtrTypeMap_Add("wxTextShape", "wxPyTextShape");
    
    
}

